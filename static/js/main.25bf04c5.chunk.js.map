{"version":3,"sources":["imgs/columna.png","imgs/isotipo.png","imgs/block.png","imgs/logotipo.png","theme.js","api.js","components/tables/localization.js","components/tables/EditableTb.js","pages/Clients.js","pages/Suppliers.js","pages/Units.js","components/tables/partials/MaterialPricesTb.js","components/tables/partials/MenuDial.js","components/partials/DialogTitle.js","components/partials/ConfirmationDialog.js","components/partials/HelpImg.js","components/rows_forms/info/Volume.js","components/inputFields.js","components/tables/partials/AddPricesTb.js","components/schemas.js","components/materials_forms/createForms.js","components/materials_forms/updateForms.js","components/materials_forms/forms_map.js","functions/index.js","components/tables/MaterialsTb.js","report.js","components/rows_forms/propFields.js","components/rows_forms/costFields.js","components/rows_forms/formGroups.js","components/rows_forms/updateForms.js","components/rows_forms/info/forms_map.js","components/tables/DetailsTb.js","components/tables/partials/SpeedDial.js","components/tables/HeaderTb.js","components/partials/InfoTooltip.js","components/tables/costs/DetailsTb.js","components/tables/costs/MaterialsCostTb.js","components/tables/costs/WorkforceCostTb.js","components/tables/costs/IndirectCostTb.js","components/tables/CostTb.js","components/partials/ExportDialog.js","components/rows_forms/createForms.js","components/tables/RowsTb.js","pages/BudgetDetails.js","components/tables/partials/ProjectBudgetsTb.js","pages/Projects.js","components/tables/BudgetsTb.js","pages/Budgets.js","components/tables/ReadOnlyTb.js","pages/Props.js","components/menuData.js","pages/Materials.js","components/Menu.js","dark-theme.js","components/Dashboard.js","App.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","info","light","main","dark","secondary","background","backPanel","overrides","MuiDialog","scrollBody","backgroundColor","MuiTableContainer","root","borderBottomLeftRadius","borderBottomRightRadius","MTableToolbar","searchField","maxWidth","MuiTableCell","paddingBottom","paddingTop","head","fontSize","color","grey","MuiTabPanel","height","MuiTablePagination","borderTopLeftRadius","borderTopRightRadius","caption","MuiSpeedDial","fab","MuiIconButton","padding","MuiFab","sizeMedium","marginLeft","MuiInput","width","MuiFormControl","MuiMenuItem","axios","create","baseURL","label","toolbar","searchTooltip","searchPlaceholder","nRowsSelected","header","actions","body","addTooltip","deleteTooltip","editTooltip","emptyDataSourceMessage","editRow","deleteText","cancelTooltip","saveTooltip","pagination","firstTooltip","previousTooltip","nextTooltip","lastTooltip","labelDisplayedRows","tableIcons","Add","Fab","size","Check","forwardRef","props","ref","Clear","Delete","DeleteOutline","DetailPanel","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","Refresh","useStyles","makeStyles","actionsContainer","minWidth","spacing","EditableTb","classes","tableRef","createRef","useState","data","setData","isLoading","setLoading","setIsError","setErrorMessages","refreshFlag","setRefreshFlag","useEffect","lookupEffects","forEach","effect","api","get","url","then","response","console","log","catch","err","icons","title","columns","editable","isDeletable","rowData","restricted","onRowAdd","newData","Promise","resolve","errorList","length","post","res","dataToAdd","unshift","handleRowAdd","onRowUpdate","oldData","put","id","dataUpdate","tableData","handleRowUpdate","onRowDelete","delete","dataDelete","index","splice","handleRowDelete","detailPanel","panels","options","actionsColumnIndex","addRowPosition","sorting","pageSize","pageSizeOptions","paginationType","headerStyle","cellStyle","icon","tooltip","isFreeAction","onClick","flag","components","Toolbar","style","Container","Paper","elevation","children","localization","clients","Box","m","fixed","field","hidden","validate","name","trim","isValid","helperText","type","symbol","Button","variant","startIcon","suppliers","setSuppliers","currencySetting","locale","currencyCode","minimumFractionDigits","maximumFractionDigits","price","lookup","Typography","isEditable","push","search","paging","display","paper","zIndex","item","MenuListComposition","React","open","setOpen","anchorRef","useRef","openModal","setOpenModal","active","form","formDialog","setFormDialog","handleCloseMenu","event","current","contains","target","handleListKeyDown","key","preventDefault","prevOpen","focus","className","onMouseLeave","aria-controls","undefined","aria-haspopup","onMouseOver","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","map","MenuItem","e","closeModal","budgetId","DialogTitle","withStyles","margin","closeButton","position","right","top","onClose","other","disableTypography","IconButton","aria-label","inline","ConfirmationDialog","showTitle","showRow","onConfirm","Dialog","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","DialogContent","dividers","List","row","idx","DialogActions","autoFocus","img","paddingRight","HelpImg","image","src","alt","VolumeFields","Grid","container","xs","sm","component","TextField","lengthLabel","InputProps","endAdornment","InputAdornment","heightLabel","NameField","value","setFieldValue","errors","touched","fieldProps","onChange","FormHelperText","LinearMeterField","inputProps","step","QuantityField","SquareMeterField","PercentageField","optional","min","max","BooleanField","FormControlLabel","styles","control","Switch","widthLabel","prices","setPrices","dataToUpdate","dataToDelete","strReq","Yup","required","positiveReq","positive","quantityReq","integer","floatQuantityReq","mixedReq","pct","nullable","schemas","profitPct","amount","unitAmount","unit","area","wallArea","ceilArea","knotsPerPound","sqrMtsPerBag","sqrMtsPerGal","recubrimiento","separacion","junta","longHook","longPata","cantLongsElems","cantLongsAuxElems","cantTransElems","propTension","estribosDouble","default","mixProp","cement","sand","gravel","iron","longIron","longIronAux","transIron","tieWire","block","preMix","wallPaint","ceilPaint","electromalla","cementPrice","sandPrice","gravelPrice","ironPrice","longIronPrice","longIronAuxPrice","transIronPrice","tieWirePrice","blockPrice","preMixPrice","wallPaintPrice","ceilPaintPrice","electromallaPrice","cementWastePct","sandWastePct","gravelWastePct","ironWastePct","longIronWastePct","longIronAuxWastePct","transIronWastePct","tieWireWastePct","blockWastePct","preMixWastePct","wallPaintWastePct","ceilPaintWastePct","electromallaWastePct","TitleIcon","CreateForm","schema","apiId","initialValues","FormFields","imgSpacing","serverState","setServerState","handleServerResponse","ok","msg","fullWidth","Stepper","alternativeLabel","Step","StepLabel","StepIconComponent","validationSchema","shape","onSubmit","values","setSubmitting","resetForm","prevData","error","submitForm","isSubmitting","alignItems","LinearProgress","CircularProgress","disabled","NameForm","FieldForm","Field","CementForm","SandForm","GravelForm","IronForm","TieWireForm","BlockForm","blockImg","CoverPreMixForm","PaintForm","ElectromallaForm","MaterialForm","units","setUnits","denseItem","FormControl","InputLabel","htmlFor","Select","evt","child","defaultValue","displayEmpty","renderValue","dense","UpdateForm","materialsData","setMaterialsData","FormMaterial","enableReinitialize","updatedMaterial","parentId","CapForm","rowsData","setRowsData","0","1","2","3","4","5","6","7","8","9","toCurrency","num","Intl","NumberFormat","currency","format","AddLibrary","Price","panel","paddingLeft","marginTop","marginBottom","materialForDelete","ListItem","ListItemAvatar","Avatar","ListItemText","direction","justify","Divider","MaterialsTb","types","setTypes","openCreate","setOpenCreate","Fragment","updateDialog","setUpdateDialog","handleOpenModal","confirmOpen","setConfirmOpen","confirmData","setConfirmData","materials","a","all","_data","rd","filter","t","filtering","render","fullName","editComponent","Object","entries","isEditHidden","searchFieldAlignment","selection","rowStyle","searchFieldStyle","updateForms","keepMounted","font","sz","bold","rgb","alignment","horizontal","vertical","fill","bgColor","fgColor","checkNull","unitCost","totalCost","rowCostData","cost","totalAmount","totalPrice","total","supplier","reduce","setWSHeader","budgetName","ws","XLSX","utils","aoa_to_sheet","project","client","architect","s","r","c","wch","sheet_add_aoa","toUpperCase","titleReport","origin","address","projectInfo","Date","toLocaleDateString","i","setHeightRows","range","decode_range","hpt","setNumFormats","N","decode_col","C","U","T","gtq","encode_cell","cant","z","summaryWS","workSheet","budget","nRows","totalTitleAdd","totalAdd","sheet_add_json","summaryData","j","f","F","materialsWS","getCostsByRow","getCosts","idRows","costsByRow","underscore","groupBy","flatten","materialPrice","groupedCosts","group","resume","costs","tableDataAdd","tableDataRowAdd","budgetWS","rows","addCosts","getData","workForce","indirect","materialCosts","workForceCosts","indirectCosts","activeRow","qt","skipHeader","materialCost","workForceCost","directCost","indirectCost","PropField","propName","mixProps","setMixProps","md","prop","MorteroProp","propCement","propSand","ConcretoProp","propGravel","kgPerSqrCm","CostGroup","materialName","materialLabel","priceName","priceLabel","pctName","pctLabel","setMaterials","setPrice","loading","Autocomplete","openOnFocus","defaultPrice","currentPrice","material","special","getOptionLabel","option","getOptionDisabled","renderInput","params","formControl","labelId","CementCost","SandCost","GravelCost","IronCost","LongIronCost","LongIronAuxCost","TransIronCost","TieWireCost","BlockCost","PreMixCost","WallPaintCost","CeilPaintCost","ElectromallaCost","concretoGroup","morteroGroup","frameIronGroup","frameBiIronGroup","frameTriIronGroup","areaVolGroup","transMeterGroup","transQuantityGroup","zapataGroup","losaPlanaGroup","losaInclinadaGroup","muroGroup","columnaEspecialGroup","transQuantitySchema","TransQuantityForm","zapataSchema","ZapataFormGroup","losaPlanaSchema","LosaPlanaSpecsForm","losaInclinadaSchema","LosaInclinadaSpecsForm","transMeterSchema","TransMeterForm","areaVolSchema","AreaVolForm","columnaEspecialSchema","ColumnaEspecialSpecsForm","memo","FormRow","formData","refreshRow","autoComplete","MezclonExtForm","mezclon","setMezclon","rowId","renglon","setRenglon","zapata","setZapata","losa","setLosa","cimiento","setCimiento","solera","setSolera","columna","setColumna","columnImg","muro","setMuro","formSchema","10","repello","setRepello","11","12","constainer","13","pintura","setPintura","14","tableTotal","totalCell","speedDial","marginRight","InfoTooltip","common","black","boxShadow","shadows","arrow","Tooltip","getColumns","generated","borderBottom","setOptions","useCallback","align","autoSelect","getOptionSelected","loadingText","clearText","placeholder","newValue","onRowDataChange","wastePct","toFixed","initialEditValue","matPrice","Table","TableBody","TotalTableRow","PlainTableCell","rowSpan","colSpan","prev","next","borderTop","TableRow","TableCell","rowAmount","useMemo","Resumen","updateRow","materialRef","workforceRef","indirectRef","rowUrl","WorkforceCostTb","idLocale","require","ExportDialog","projectName","handleCancel","moment","setTimeout","multiline","concretoSchema","ConcretoForm","morteroSchema","MorteroForm","frameIronSchema","FrameIronForm","frameBiIronSchema","FrameBiIronForm","frameTriIronSchema","FrameTriIronForm","muroSchema","MuroSpecsForm","soloInput","textAlign","initials","concretoInitials","morteroInitials","frameBiIronInitials","frameTriIronInitials","frameIronInitials","EmptyForm","getSteps","activeStep","setActiveStep","setStep","steps","isLastStep","handleBack","prevActiveStep","RowForm","specsSchema","SpecsForm","nameInitial","costSchema","CostFormGroup","rowForDelete","DetailTypo","showMsg","orientation","flexItem","count","refreshTotal","updatedRow","openEdit","setOpenEdit","handleCloseModal","exportOpen","setExportOpen","reportData","setReportData","onExport","fileName","wb","book_new","book_append_sheet","writeFile","appBar","flex","listItem","minHeight","projectData","backTb","totalTitle","logo","Transition","Slide","HideOnScroll","window","trigger","useScrollTrigger","appear","in","FullScreenDialog","setTotal","reload","setReload","setBudget","totalCosts","checkPrimaryData","fullScreen","handleClose","TransitionComponent","PaperProps","AppBar","isotipo","mr","edge","mb","disablePadding","primaryTypographyProps","inset","createdAt","idBudget","setIdBudget","initialFormData","setInitialFormData","dateSetting","BudgetCopyIcon","dataManager","changeRowEditing","setState","getRenderState","showAddRow","BudgetsBadge","badge","border","Badge","Projects","setClients","budgetsNumber","badgeContent","openIcon","ExpandLess","Budgets","projects","setProjects","budgetData","setBudgetData","handleClickOpen","ReadOnlyTb","TabPanel","p","a11yProps","Proportions","useTheme","setValue","Tabs","indicatorColor","textColor","Tab","axis","onChangeIndex","dir","items","HistoryIcon","page","BudgetsIcon","ProjectsIcon","ClientsIcon","Clients","MaterialsIcon","UnitsIcon","Units","SuppliersIcon","Suppliers","PropsIcon","Props","Menu","val","button","selected","setActive","ListItemIcon","drawer","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","justifyContent","mixins","content","flexGrow","brand","maxHeight","MiniDrawer","Welcome","CssBaseline","clsx","logotipo","ThemeProvider","darkTheme","Drawer","appBarSpacer","helloThereStyle","fontStyle","board","App","Dashboard","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25bf04c5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/columna.35aa61aa.png\";","module.exports = __webpack_public_path__ + \"static/media/isotipo.666d2fbb.png\";","module.exports = __webpack_public_path__ + \"static/media/block.61a8622e.png\";","module.exports = __webpack_public_path__ + \"static/media/logotipo.66a4fa25.png\";","import { createMuiTheme } from '@material-ui/core/styles';\n\nimport grey from '@material-ui/core/colors/grey';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      info: `#eaf3f8`,\n      light: '#4a709f',\n      main: '#1d4d87',\n      dark: '#14355e'\n    },\n    secondary: {\n      light: '#4a9b9f',\n      main: '#1d8287',\n      dark: '#145b5e'\n    },\n    background: {\n      backPanel: '#e4e5eb',\n    }\n  },\n  overrides: {\n   // Style sheet name ⚛️\n   MuiDialog:{\n     scrollBody: {\n       backgroundColor: '#e4e5eb',\n     }\n   },\n   MuiTableContainer:{\n     root:{\n       borderBottomLeftRadius: 0,\n       borderBottomRightRadius: 0,\n     },\n   },\n   MTableToolbar: {\n     searchField: {\n       maxWidth: 'max-content',\n     },\n   },\n   MuiTableCell: {\n     root: {  //This can be referred from Material UI API documentation.\n        paddingBottom: '12px',\n        paddingTop: '12px',\n      },\n      head: {\n        paddingTop: 9,\n        paddingBottom: 9,\n        fontSize: '0.75rem',\n        color: grey[800],\n        backgroundColor: grey[100],\n      },\n    },\n    MuiTabPanel:{\n      root: {\n        height: '100vh'\n      }\n    },\n    MuiTablePagination: {\n      root: {\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0,\n      },\n      caption: {\n        color: grey[800],\n        fontSize: '0.7rem',\n      },\n    },\n    MuiSpeedDial: {\n      fab: {\n\n      },\n    },\n    MuiIconButton: {\n      root:{\n        padding: 2,\n        \"&:hover\":{\n          backgroundColor: 'rgba(228, 229, 235, 0.5)',\n        },\n      },\n\n    },\n    MuiFab: {\n      sizeMedium: {\n        marginLeft: 10,\n\n      }\n    },\n    MuiInput:  {\n      root: {\n        width: '-webkit-fill-available',\n      },\n\n    },\n    MuiFormControl:{\n      root: {\n        width: '-webkit-fill-available',\n\n      }\n    },\n    MuiMenuItem: {\n      root: {\n        \"&:hover\":{\n          color: '#14355e',\n        },\n      }\n    },\n\n   },\n});\n\nexport default theme;\n","import axios from 'axios'\n\n\nexport default axios.create({\n    baseURL: `http://3.15.173.137:8080/api/`\n    // proxy: {\n    //   host: \"http://3.15.173.137:8080\"\n    // }\n  })\n","export default (label) => ({\n  toolbar: {\n    searchTooltip: `Buscar ${label}`,\n    searchPlaceholder: `Buscar ${label}`,\n    nRowsSelected: 'Renglones seleccionados : {0}'\n  },\n  header: {\n    actions: 'Acciones',\n  },\n  body: {\n    addTooltip: `Nuevo ${label}`,\n    deleteTooltip: 'Eliminar',\n    editTooltip: 'Editar',\n    emptyDataSourceMessage: 'No hay registros para mostrar',\n    editRow: {\n      deleteText: 'Esta seguro de eliminar este dato?',\n      cancelTooltip: 'Cancelar',\n      saveTooltip: 'Guardar',\n    }\n  },\n  pagination: {\n    firstTooltip: 'Primera pagina',\n    previousTooltip: 'Pagina Anterior',\n    nextTooltip: 'Pagina Siguiente',\n    lastTooltip: 'Ultima pagina',\n    labelDisplayedRows: '{from}-{to} de {count}'        }\n})\n","import React, {forwardRef, createRef, useState, useEffect} from 'react';\nimport api from '../../api'\nimport localization from './localization'\nimport MaterialTable, {MTableToolbar} from 'material-table';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\nimport {Paper, Fab} from '@material-ui/core'\nimport {Add, ArrowDownward, Check, ChevronLeft, ChevronRight, Clear,\n        DeleteOutline, Edit, FilterList, FirstPage, LastPage, Remove, SaveAlt,\n        Search, ViewColumn, Refresh} from '@material-ui/icons'\n\n\nconst tableIcons = {\n    Add: () => (<Fab color=\"secondary\" size=\"medium\"><Add /> </Fab>),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n    Refresh: forwardRef((props, ref) => <Refresh color=\"primary\"{...props} ref={ref} />)\n  };\n\n\n  const useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n      minWidth: \"max-content\",\n      marginLeft: theme.spacing(2)\n\n    },\n    searchField: {\n      maxWidth: \"max-content\",\n    },\n  }));\n\nexport default function EditableTb(props) {\n  const classes = useStyles()\n  const tableRef = createRef()\n  const [data, setData] = useState([])\n  const [isLoading, setLoading] = useState(true)\n\n  //error handling\n  const [isError, setIsError] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n  const [refreshFlag, setRefreshFlag] = useState(false)\n\n  useEffect(() => {\n\n    props.lookupEffects && props.lookupEffects.forEach(effect => effect())\n    setLoading(true)\n    api.get(props.url)\n    .then(response => {\n      console.log('consola aqui' + response.data)\n      setData(response.data)\n      setLoading(false)\n    })\n    .catch(err => {\n      setErrorMessages(['Cannot load user data'])\n      setIsError(true)\n    })\n\n  }, [refreshFlag])\n\n\n  const handleRowAdd = (newData, resolve) => {\n\n    //validation\n    let errorList = []\n    //if(dato indefinido then errorList.push())\n\n    if(errorList.length < 1){\n      api.post(props.url, newData)\n      // console.log(url + newData)\n      .then(res => {\n        console.log('respuesta al guardar', res.data);\n\n        let dataToAdd = [...data]\n        dataToAdd.unshift(res.data)\n        setData(dataToAdd)\n        resolve()\n        setErrorMessages([])\n        setIsError(false)\n      })\n      .catch(err => {\n        setErrorMessages([\"Cannot add data. Server error!\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    console.log(oldData);\n    console.log(newData);\n\n    let errorList = []\n\n    if(errorList.length < 1){\n      api.put(`${props.url}/${newData.id}`, newData)\n      .then(res => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n        setIsError(false)\n        setErrorMessages([])\n      })\n      .catch(err => {\n        setErrorMessages([\"update failed! Server error\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    let errorList = []\n\n    api.delete(`${props.url}/${oldData.id}`)\n    .then(res => {\n      const dataDelete = [...data]\n      const index = oldData.tableData.id\n      dataDelete.splice(index, 1)\n      setData([...dataDelete])\n      resolve()\n    })\n    .catch(err => {\n      setErrorMessages([\"Delete failed! Server error\"])\n      setIsError(true)\n      resolve()\n    })\n  }\n  return (\n    <MaterialTable\n      tableRef={tableRef}\n      icons={tableIcons}\n      title={props.title}\n      columns={props.columns}\n      data={data}\n      isLoading={isLoading}\n      editable={{\n        isDeletable: rowData => !rowData.restricted, // only name(b) rows would be deletable,\n\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            handleRowAdd(newData, resolve)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve)\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve)\n          }),\n      }}\n      detailPanel={props.panels}\n      options={{\n       actionsColumnIndex: -1,\n       addRowPosition: 'first',\n       // filtering: true,\n       // searchFieldAlignment: 'left',\n       // selection: true,\n       sorting: true,\n       pageSize: 10,\n       pageSizeOptions: [10],\n       paginationType: 'normal',\n       padding: 'dense',\n       headerStyle: {\n         paddingTop: 0,\n         paddingBottom: 0,\n         fontSize: '0.75rem',\n         color: grey[800],\n         backgroundColor: grey[100],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n       },\n       cellStyle: {\n         paddingTop: 12,\n         paddingBottom: 12\n       },\n\n\n     }}\n     actions={[\n       {\n         icon: tableIcons.Refresh,\n         tooltip: 'Actualizar',\n         isFreeAction: true,\n         onClick: () => {\n              setRefreshFlag((flag)=>!flag)\n            },\n       }\n     ]}\n     components={{\n       Toolbar: props => (\n          <div style={{backgroundColor: '#e4e5eb'}}>\n            <MTableToolbar classes={{ actions: classes.actionsContainer, searchField: classes.searchField }} {...props}>\n            </MTableToolbar>\n          </div>\n        ),\n        Container: props => (\n          <Paper  elevation={0} {...props}>{props.children}</Paper>\n        ),\n\n        // Body: props => (\n        //   <div style={{width: '100%'}}><Paper><MTableBody {...props} /></Paper></div>\n        // ),\n\n     }}\n     localization={localization(props.label)}\n    />\n  );\n}\n","import React from \"react\"\nimport {Container, Box} from '@material-ui/core'\nimport Table from '../components/tables/EditableTb'\n\nconst clients = props => {\n  const columns =    [\n     { title: 'Id', field: 'id', hidden: true },\n     { title: 'Nombres', field: 'name',\n       validate: rowData => ( typeof rowData.name != 'undefined' && rowData.name?\n                                  rowData.name.trim() === '' ?\n                                      { isValid: false, helperText: 'Nombre es requerido' } : true\n                                  : false)},\n     { title: 'Dirección', field: 'address'},\n     { title: 'Email', field: 'email'},\n     { title: 'Télefono', field: 'phoneNumber', width: 150}\n   ]\n\n  return (\n    <div>\n    <Box m={5} />\n    <Container fixed maxWidth=\"lg\">\n    <Table columns={columns} url='clients' title='Clientes' label='cliente' />\n    </Container>\n    </div>\n  )\n\n}\nexport default clients\n","import React from \"react\"\nimport {Container} from '@material-ui/core'\n\nimport Table from '../components/tables/EditableTb'\nimport {TextField} from '@material-ui/core'\n\n\n\n\n\nconst clients = props => {\n  const columns =    [\n     { title: 'Id', field: 'id', hidden: true },\n     { title: 'Nombre', field: 'name',\n     validate: rowData => ( typeof rowData.name != 'undefined'?\n                  rowData.name.trim() === '' ? { isValid: false, helperText: 'Nombre es requerido' } : true\n                  : false)\n   },\n     { title: 'Nit', field: 'nit', type: 'numeric'},\n     { title: 'Dirección', field: 'address'},\n     { title: 'Télefono', field: 'phoneNumber'},\n   ]\n\n  return (\n    <Container fixed maxWidth=\"lg\">\n    <Table columns={columns} url='suppliers' title='Proveedores' label='proveedor' />\n    </Container>\n  )\n\n}\nexport default clients\n","import React from \"react\"\nimport {Container, Box} from '@material-ui/core'\nimport Table from '../components/tables/EditableTb'\n\n\n\n\nconst clients = props => {\n  const columns =    [\n     { title: 'Id', field: 'id', hidden: true },\n     { title: 'Nombre', field: 'name',\n       validate: rowData => ( typeof rowData.name != 'undefined'?\n                                  rowData.name.trim() === '' ?\n                                      { isValid: false, helperText: 'Nombre es requerido' } : true\n                                  : false)},\n     { title: 'Simbolo', field: 'symbol',\n       validate: rowData => ( typeof rowData.symbol != 'undefined'?\n                                  rowData.symbol.trim() === '' ?\n                                      { isValid: false, helperText: 'Simbolo es requerido' } : true\n                                  : false)},\n     { title: 'Restricted', field: 'restricted', hidden: true},\n   ]\n\n  return (\n    <div>\n    <Box m={2} />\n    <Container fixed maxWidth=\"lg\">\n    <Table columns={columns} url='units' title='Unidades de Medida' label='unidad' />\n    </Container>\n    </div>\n  )\n\n}\nexport default clients\n","import React, {forwardRef, createRef, useState, useEffect} from 'react';\nimport MaterialTable from 'material-table';\n\n\nimport api from '../../../api.js'\nimport localization from '../localization'\n\nimport grey from '@material-ui/core/colors/grey';\n\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography';\n\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterListRounded';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst AddPrice = (props, ref) => {\n  return(\n  <Button\n     variant=\"text\"\n     color=\"secondary\"\n     size=\"small\"\n     startIcon={<AddBox {...props} ref={ref}/>}\n   >\n     Agregar Precio\n   </Button>\n )\n}\n\nconst tableIcons = {\n    Add: forwardRef(AddPrice),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n  };\n\n\nconst DetailTitle = title => <Typography color='textPrimary' variant='body2'>{title}</Typography>\n\n\nexport default function EditableTb(props) {\n  const tableRef = createRef()\n  const [data, setData] = useState([])\n  const [suppliers, setSuppliers] = useState({})\n\n\n  //error handling\n  const [isError, setIsError] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n\n  const columns = [\n     { title: 'Id', field: 'id', hidden: true },\n     { title: 'Especial', field: 'special', type: 'boolean', width:'10%' },\n     { title: 'Precio', field: 'price', type: 'currency',\n       currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2},\n       validate: rowData => ( typeof rowData.price != 'undefined'?\n                                  rowData.price.length <= 0 ?\n                                      { isValid: false, helperText: 'Precio es requerido' } : true\n                                  : false),\n       width: '30%'},\n     { title: 'Proveedor', field: 'supplier.id', lookup: suppliers, width: '60%'},\n   ]\n\n  useEffect(() => {\n      api.get('suppliers/catal')\n      .then(res => {\n        setSuppliers(res.data)\n\n      })\n      .catch(err => {\n        setErrorMessages(['Cannot load user data'])\n        setIsError(true)\n      })\n\n\n    api.get(props.url)\n    .then(response => {\n      setData(response.data)\n    })\n    .catch(err => {\n      setErrorMessages(['Cannot load user data'])\n      setIsError(true)\n    })\n\n  }, [])\n\n\n  const handleRowAdd = (newData, resolve) => {\n\n    //validation\n    let errorList = []\n    //if(dato indefinido then errorList.push())\n\n    if(errorList.length < 1){\n      api.post(props.url, newData)\n      // console.log(url + newData)\n      .then(res => {\n        let dataToAdd = [...data]\n        dataToAdd.push(res.data)\n        setData(dataToAdd)\n        resolve()\n        setErrorMessages([])\n        setIsError(false)\n      })\n      .catch(err => {\n        setErrorMessages([\"Cannot add data. Server error!\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    let errorList = []\n\n    if(errorList.length < 1){\n      api.put(`${props.url}/${newData.id}`, newData)\n      .then(res => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n        setIsError(false)\n        setErrorMessages([])\n      })\n      .catch(err => {\n        setErrorMessages([\"update failed! Server error\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    let errorList = []\n\n    api.delete(`${props.url}/${oldData.id}`)\n    .then(res => {\n      const dataDelete = [...data]\n      const index = oldData.tableData.id\n      dataDelete.splice(index, 1)\n      setData([...dataDelete])\n      resolve()\n    })\n    .catch(err => {\n      setErrorMessages([\"Delete failed! Server error\"])\n      setIsError(true)\n      resolve()\n    })\n  }\n  return (\n    <MaterialTable\n      tableRef={tableRef}\n      icons={tableIcons}\n      title={DetailTitle(props.title)}\n      columns={columns}\n      data={data}\n      editable={{\n        isEditable: rowData => !rowData.restricted, // only name(a) rows would be editable\n        isDeletable: rowData => !rowData.restricted, // only name(b) rows would be deletable,\n\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            handleRowAdd(newData, resolve)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve)\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve)\n          }),\n      }}\n      options={{\n       actionsColumnIndex: -1,\n       addRowPosition: 'first',\n       search: false,\n       paging: false,\n       pageSize: 5,\n       pageSizeOptions: [5],\n       padding: 'dense',\n       // headerStyle: {\n       //   paddingTop: 0,\n       //   paddingBottom: 0,\n       //   fontSize: '0.75rem',\n       //   color: grey[800],\n       //   borderTopLeftRadius: 2,\n       //   borderTopRightRadius: 2,\n       // },\n       headerStyle: {\n         paddingTop: 0,\n         paddingBottom: 0,\n         fontSize: '0.75rem',\n         color: grey[800],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n         // borderBottom: `solid 2px #26a69a`,\n\n       },\n       cellStyle: {\n         paddingTop: 8,\n         paddingBottom: 8,\n       },\n\n\n\n     }}\n\n     components={{\n        Container: props => (\n          <div {...props}>{props.children}</div>\n        ),\n\n        // Body: props => (\n        //   <div style={{width: '100%'}}><Paper><MTableBody {...props} /></Paper></div>\n        // ),\n\n     }}\n     localization={localization(props.label)}\n    />\n\n  );\n}\n","import React, {useState, Fragment} from 'react';\nimport api from '../../../api'\nimport {Fab} from '@material-ui/core'\nimport {ClickAwayListener, Grow, Paper, Popper, MenuItem, MenuList, Dialog} from '@material-ui/core';\nimport { Button, LinearProgress } from '@material-ui/core';\n\nimport Icon from '@material-ui/icons/MoreVert';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    // zIndex: 100\n  },\n  paper: {\n    // marginRight: theme.spacing(2),\n    zIndex: 2000\n\n  },\n  item: {\n    '&:hover':{\n      color: theme.palette.primary,\n    },\n  },\n}));\n\n\n\n\n\nexport default function MenuListComposition(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [openModal, setOpenModal] = React.useState(false);\n  const [formDialog, setFormDialog] = React.useState({active: props.actions[0].form})\n\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleHover =() => {\n    setOpen(true)\n  }\n  const handleLeave =() => {\n    setOpen(false)\n  }\n\n  const handleCloseMenu = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleOpenModal = (e, form) => {\n    setFormDialog({active: form})\n    setOpenModal(true)\n  }\n\n  const handleCloseModal = () => {\n    setOpenModal(false)\n  }\n\n\n  function handleListKeyDown(event) {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !open -> open\n  const prevOpen = React.useRef(open);\n\n\n\n  React.useEffect(() => {\n    if (prevOpen.current === true && open === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = open;\n  }, [open]);\n\n  return (\n    <div className={classes.root}>\n      <div onMouseLeave={handleLeave}>\n        <Fab\n          color='primary'\n          size=\"medium\"\n          ref={anchorRef}\n          aria-controls={open ? 'menu-list-grow' : undefined}\n          aria-haspopup=\"true\"\n          onMouseOver={handleHover}\n          onClick={handleToggle}\n        >\n              <Icon />\n        </Fab>\n        <Popper className={classes.paper} open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n            >\n              <Paper elevation={24}>\n                <ClickAwayListener onClickAway={handleCloseMenu}>\n                  <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\n                    {props.actions.map(item => (<MenuItem key={item.name} onClick={(e) => {handleOpenModal(e, item.form)}}>{item.name}</MenuItem>)\n                    )}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </div>\n      <formDialog.active closeModal={() => setOpenModal(false)} openModal={openModal} setData={props.setData} budgetId={props.budgetId}/>\n\n    </div>\n  );\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    \n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon fontSize=\"medium\"/>\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nexport default DialogTitle\n","import React, {Fragment} from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {Dialog,  DialogContent, DialogActions, Button, List} from '@material-ui/core';\nimport DialogTitle from './DialogTitle'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '36ch',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n  },\n}));\n\nexport default function ConfirmationDialog({open, data, showTitle, showRow, onClose, onConfirm, ...other}){\n  const classes = useStyles();\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onConfirm(data);\n    onClose();\n  };\n  return (\n    <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"md\"\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={open}\n        {...other}\n      >\n        <DialogTitle onClose={onClose} id=\"confirmation-dialog-title\">{showTitle(data)}</DialogTitle>\n        <DialogContent dividers>\n          <List>\n          {data.map((row, idx) => showRow(row, idx))}\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleCancel} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button onClick={handleOk} color=\"primary\">\n            Confirmar\n          </Button>\n        </DialogActions>\n      </Dialog>\n  )\n}\n","import React from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    img: {\n      maxWidth: '100%',\n      paddingRight: theme.spacing(2)\n    }\n  }));\n\nconst HelpImg = ({image}) => {\n  const classes = useStyles()\n  return (\n    <img src={image} alt='instrucciones' className={classes.img}/>\n  )\n}\n\nexport default HelpImg\n","import React from 'react'\nimport {Grid, Typography} from '@material-ui/core'\nimport { Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\n\nexport default function VolumeFields(props){\n\n  return(\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={4}>\n        <Field\n        component={TextField}\n         name=\"length\"\n         type=\"number\"\n         label={props.lengthLabel ? props.lengthLabel : \"Largo\"}\n         InputProps={{\n           endAdornment: (\n             <InputAdornment position=\"end\">\n               m\n             </InputAdornment>\n           ),\n         }}\n       />\n\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Field\n        component={TextField}\n         name=\"width\"\n         type=\"number\"\n         label=\"Ancho\"\n         InputProps={{\n           endAdornment: (\n             <InputAdornment position=\"end\">\n              m\n             </InputAdornment>\n           ),\n         }}\n       />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Field\n        component={TextField}\n         name=\"height\"\n         type=\"number\"\n         label={props.heightLabel ? props.heightLabel : \"Alto\"}\n         InputProps={{\n           endAdornment: (\n             <InputAdornment position=\"end\">\n              m\n             </InputAdornment>\n           ),\n         }}\n       />\n      </Grid>\n    </Grid>\n  )\n}\n","import React, {Fragment} from 'react'\nimport { TextField, InputLabel, FormControl, Select, InputAdornment,\n         Typography, FormControlLabel, Grid, FormHelperText} from \"@material-ui/core\";\nimport { CheckboxWithLabel, Switch } from 'formik-material-ui';\n\nimport Volume from './rows_forms/info/Volume'\nimport { Field } from \"formik\";\n\nconst NameField = ({name, label, value, setFieldValue, errors, touched, helperText, fieldProps}) => {\n  return (\n    <Fragment>\n    <Field\n      component={TextField}\n      id={name}\n      name={name ? name : \"name\"}\n      type=\"text\"\n      label={label ? label : \"Nombre\"}\n      autoFocus\n      value={value}\n      onChange={e => setFieldValue(name ? name : 'name', e.target.value)}\n      InputProps={{\n        ...fieldProps\n      }}\n    />\n    {helperText && <FormHelperText id={`${name || `name`}-helper-text`}>{helperText}</FormHelperText>}\n\n    {errors[\"name\"] && touched[\"name\"] ? (\n      <div><Typography color='error' variant='caption'>{errors[\"name\"]}</Typography></div>\n    ) : null}\n    </Fragment>\n  )\n}\n\nconst LinearMeterField = ({name, label, value, setFieldValue, errors, touched, helperText}) => {\n  return(\n    <Fragment>\n        <Field\n        component={TextField}\n         id={name}\n         name={name}\n         type=\"number\"\n         label={label}\n         value={value}\n         onChange={e => setFieldValue(name, e.target.value)}\n         inputProps={{\n           step: \"0.001\"\n         }}\n         InputProps={{\n           endAdornment: (\n             <InputAdornment position=\"end\">\n               m\n             </InputAdornment>\n           ),\n         }}\n       />\n       {helperText && <FormHelperText id={`${name}-helper-text`}>{helperText}</FormHelperText>}\n\n       {errors[name] && touched[name] ? (\n         <div><Typography color='error' variant='caption'>{errors[name]}</Typography></div>\n       ) : null}\n    </Fragment>\n  )\n}\n\nconst QuantityField = ({name, label, value, setFieldValue, errors, touched, helperText}) => {\n  return(\n    <Fragment>\n        <Field\n        component={TextField}\n         id={name}\n         name={name}\n         type=\"number\"\n         label={label}\n         value={value}\n         inputProps={{\n           step: \"1\"\n         }}\n         onChange={e => setFieldValue(name, e.target.value)}\n       />\n       {helperText && <FormHelperText id={`${name}-helper-text`}>{helperText}</FormHelperText>}\n       {errors[name] && touched[name] ? (\n         <div><Typography color='error' variant='caption'>{errors[name]}</Typography></div>\n       ) : null}\n    </Fragment>\n  )\n}\n\nconst SquareMeterField = ({name, label, value, setFieldValue, errors, touched, helperText}) => {\n  return(\n    <Fragment>\n        <Field\n        component={TextField}\n         id={name}\n         name={name}\n         type=\"number\"\n         label={label}\n         value={value}\n         onChange={e => setFieldValue(name, e.target.value)}\n         inputProps={{\n           step: \"0.001\"\n         }}\n         InputProps={{\n           endAdornment: (\n             <InputAdornment position=\"end\">\n             {\"\\u33A1\"}\n             </InputAdornment>\n           ),\n         }}\n       />\n       {helperText && <FormHelperText id={`${name}-helper-text`}>{helperText}</FormHelperText>}\n       {errors[name] && touched[name] ? (\n         <div><Typography color='error' variant='caption'>{errors[name]}</Typography></div>\n       ) : null}\n    </Fragment>\n  )\n}\n\nconst PercentageField = ({name, label, value, setFieldValue, errors, touched, helperText, optional}) => {\n  return(\n    <Fragment>\n        <Field\n        component={TextField}\n         id={name}\n         name={name}\n         type=\"number\"\n         label={label}\n         value={value}\n         onChange={e => setFieldValue(name, e.target.value)}\n         inputProps={{\n           min: 0, max: 100,\n           step: \"1\"\n         }}\n         InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                %\n              </InputAdornment>\n            ),\n         }}\n      />\n      {<FormHelperText id={`${name}-helper-text`}>{`${helperText || ``} ${optional ? `Opcional` : ``}`}</FormHelperText>}\n      {errors[name] && touched[name] ? (\n        <div><Typography color='error' variant='caption'>{errors[name]}</Typography></div>\n      ) : null}\n    </Fragment>\n  )\n}\n\nconst BooleanCheckField = ({name, label, value, setFieldValue, errors, touched, helperText}) => (\n    <Fragment>\n      <Field\n        id={name}\n        component={CheckboxWithLabel}\n        type=\"checkbox\"\n        value={value}\n        indeterminate= {false}\n        onChange={e => setFieldValue(name, e.target.value)}\n        InputProps={{\n          // indeterminate: true\n        }}\n        name={name}\n        Label={{ label: `${label}` }}\n      />\n      {helperText && <FormHelperText id={`${name}-helper-text`}>{helperText}</FormHelperText>}\n    </Fragment>\n)\n\nconst BooleanField = ({name, label, value, setFieldValue, errors, touched, helperText}) => (\n  <Fragment>\n  <FormControlLabel styles={{label: {color: '#0000008a'}}}\n       control = {<Field\n                     component={Switch}\n                     type=\"checkbox\"\n                     id={name}\n                     name={name}\n                     value={value}\n                     onChange={e => setFieldValue(name, e.target.value)}\n                   />}\n       label = {label}\n\n     />\n     {helperText && <FormHelperText id={`${name}-helper-text`}>{helperText}</FormHelperText>}\n    </Fragment>\n\n)\n\nconst VolumeFields = ({lengthLabel, widthLabel, heightLabel}) => (\n  <Volume lengthLabel={lengthLabel} widthLabel={widthLabel} heightLabel={heightLabel}/>\n  )\n\n\nexport {NameField, LinearMeterField,\n        QuantityField, SquareMeterField, PercentageField, BooleanField, VolumeFields}\n","import React, {forwardRef, createRef, useState, useEffect} from 'react';\nimport MaterialTable from 'material-table';\n\n\nimport api from '../../../api.js'\nimport localization from '../localization'\n\nimport grey from '@material-ui/core/colors/grey';\n\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography';\n\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterListRounded';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst AddPrice = (props, ref) => {\n  return(\n  <Button\n     variant=\"text\"\n     color=\"secondary\"\n     size=\"small\"\n     startIcon={<AddBox {...props} ref={ref}/>}\n   >\n     Agregar Precio\n   </Button>\n )\n}\n\nconst tableIcons = {\n    Add: forwardRef(AddPrice),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n  };\n\n\nexport default function EditableTb({prices, setPrices,\n                                    title, label}) {\n  const tableRef = createRef()\n  const [suppliers, setSuppliers] = useState({})\n\n\n  //error handling\n  const [isError, setIsError] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n\n  const columns = [\n     { title: 'Id', field: 'id', hidden: true },\n     { title: 'Especial', field: 'special', type: 'boolean', width:'10%' },\n     { title: 'Precio', field: 'price', type: 'currency',\n       currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2},\n       validate: rowData => ( typeof rowData.price != 'undefined'?\n                                  rowData.price.length <= 0 ?\n                                      { isValid: false, helperText: 'Precio es requerido' } : true\n                                  : false),\n       width: '30%'},\n     { title: 'Proveedor', field: 'supplier.id', lookup: suppliers, width: '60%'},\n   ]\n\n  useEffect(() => {\n      api.get('suppliers/catal')\n      .then(res => {\n        setSuppliers(res.data)\n\n      })\n      .catch(err => {\n        setErrorMessages(['Cannot load user data'])\n        setIsError(true)\n      })\n\n  }, [])\n\n\n  const handleRowAdd = (newData, resolve) => {\n    let dataToAdd = [...prices]\n    dataToAdd.push(newData)\n    setPrices(dataToAdd)\n    resolve();\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n\n        const dataToUpdate = [...prices]\n        const index = oldData.tableData.id\n        dataToUpdate[index] = newData\n        setPrices([...dataToUpdate])\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n\n      const dataToDelete = [...prices]\n      const index = oldData.tableData.id\n      dataToDelete.splice(index, 1)\n      setPrices([...dataToDelete])\n      resolve()\n\n  }\n  return (\n    <MaterialTable\n      tableRef={tableRef}\n      icons={tableIcons}\n      title={''}\n      columns={columns}\n      data={prices}\n      editable={{\n        isEditable: rowData => !rowData.restricted, // only name(a) rows would be editable\n        isDeletable: rowData => !rowData.restricted, // only name(b) rows would be deletable,\n\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            handleRowAdd(newData, resolve)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve)\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve)\n          }),\n      }}\n      options={{\n       actionsColumnIndex: -1,\n       addRowPosition: 'first',\n       search: false,\n       paging: false,\n       pageSize: 5,\n       pageSizeOptions: [5],\n       padding: 'dense',\n       // headerStyle: {\n       //   paddingTop: 0,\n       //   paddingBottom: 0,\n       //   fontSize: '0.75rem',\n       //   color: grey[800],\n       //   borderTopLeftRadius: 2,\n       //   borderTopRightRadius: 2,\n       // },\n       headerStyle: {\n         paddingTop: 0,\n         paddingBottom: 0,\n         fontSize: '0.75rem',\n         color: grey[800],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n         // borderBottom: `solid 2px #26a69a`,\n\n       },\n       cellStyle: {\n         paddingTop: 8,\n         paddingBottom: 8,\n       },\n\n\n\n     }}\n\n     components={{\n        Container: props => (\n          <div {...props}>{props.children}</div>\n        ),\n\n        // Body: props => (\n        //   <div style={{width: '100%'}}><Paper><MTableBody {...props} /></Paper></div>\n        // ),\n\n     }}\n     localization={{...localization(label),\n                    body: {...localization(label).body,\n                            emptyDataSourceMessage: ''}\n                  }}\n    />\n\n  );\n}\n","import React from 'react'\nimport * as Yup from 'yup'\n\nconst strReq = Yup.string()\n               .required('Requerido')\n\nconst positiveReq = Yup.number()\n                   .positive('Deber ser positivo')\n                   .required('Requerido')\n\nconst quantityReq = Yup.number()\n                   .positive('Deber ser positivo')\n                   .integer('Deber ser un número entero ')\n                   .required('Requerido')\n\nconst floatQuantityReq = Yup.number()\n                        .positive('Debe ser positivo')\n                        .required('Requerido')\n\nconst mixedReq = Yup.mixed()\n                 .required('Requerido')\n\nconst pct = Yup.number()\n                 .min(0, 'Debe ser un numero entre 0 - 100').max(100, 'Debe ser un numero entre 0 - 100').nullable()\n\nconst boolFalse = Yup.boolean().default(false)\n\nconst schemas = {\n        name: strReq,\n        profitPct: pct,\n        amount: quantityReq,\n        unitAmount: floatQuantityReq,\n        unit: mixedReq,\n        length: positiveReq,\n        width: positiveReq,\n        height: positiveReq,\n        area: positiveReq,\n        wallArea: positiveReq,\n        ceilArea: positiveReq,\n        knotsPerPound: positiveReq,\n        sqrMtsPerBag: positiveReq,\n        sqrMtsPerGal: positiveReq,\n        recubrimiento: positiveReq,\n        separacion: positiveReq,\n        junta: positiveReq,\n        longHook: positiveReq,\n        longPata: positiveReq,\n        cantLongsElems: quantityReq,\n        cantLongsAuxElems: quantityReq,\n        cantTransElems: quantityReq,\n        propTension: pct,\n        estribosDouble: boolFalse,\n        mixProp: mixedReq,\n        cement: mixedReq,\n        sand: mixedReq,\n        gravel: mixedReq,\n        iron: mixedReq,\n        longIron: mixedReq,\n        longIronAux: mixedReq,\n        transIron: mixedReq,\n        tieWire: mixedReq,\n        block: mixedReq,\n        preMix: mixedReq,\n        wallPaint: mixedReq,\n        ceilPaint: mixedReq,\n        electromalla: mixedReq,\n        cementPrice: mixedReq,\n        sandPrice: mixedReq,\n        gravelPrice: mixedReq,\n        ironPrice: mixedReq,\n        longIronPrice: mixedReq,\n        longIronAuxPrice: mixedReq,\n        transIronPrice: mixedReq,\n        tieWirePrice: mixedReq,\n        blockPrice: mixedReq,\n        preMixPrice: mixedReq,\n        wallPaintPrice: mixedReq,\n        ceilPaintPrice: mixedReq,\n        electromallaPrice: mixedReq,\n        cementWastePct: pct,\n        sandWastePct: pct,\n        gravelWastePct: pct,\n        ironWastePct: pct,\n        longIronWastePct: pct,\n        longIronAuxWastePct: pct,\n        transIronWastePct: pct,\n        tieWireWastePct: pct,\n        blockWastePct: pct,\n        preMixWastePct: pct,\n        wallPaintWastePct: pct,\n        ceilPaintWastePct: pct,\n        electromallaWastePct: pct}\n\nexport const {name,\n              profitPct,\n              amount,\n              unitAmount,\n              unit,\n              length,\n              width,\n              height,\n              area,\n              wallArea,\n              ceilArea,\n              knotsPerPound,\n              sqrMtsPerBag,\n              sqrMtsPerGal,\n              recubrimiento,\n              separacion,\n              junta,\n              longHook,\n              longPata,\n              cantLongsElems,\n              cantLongsAuxElems,\n              cantTransElems,\n              propTension,\n              estribosDouble,\n              mixProp,\n              cement,\n              sand,\n              gravel,\n              iron,\n              longIron,\n              longIronAux,\n              transIron,\n              tieWire,\n              block,\n              preMix,\n              wallPaint,\n              ceilPaint,\n              electromalla,\n              cementPrice,\n              sandPrice,\n              gravelPrice,\n              ironPrice,\n              longIronPrice,\n              longIronAuxPrice,\n              transIronPrice,\n              tieWirePrice,\n              blockPrice,\n              preMixPrice,\n              wallPaintPrice,\n              ceilPaintPrice,\n              electromallaPrice,\n              cementWastePct,\n              sandWastePct,\n              gravelWastePct,\n              ironWastePct,\n              longIronWastePct,\n              longIronAuxWastePct,\n              transIronWastePct,\n              tieWireWastePct,\n              blockWastePct,\n              preMixWastePct,\n              wallPaintWastePct,\n              ceilPaintWastePct,\n              electromallaWastePct} = schemas\n","import React, {useState, useEffect, Fragment} from 'react'\nimport api from '../../api'\nimport { makeStyles } from '@material-ui/core/styles';\nimport blockImg from '../../imgs/block.png';\nimport HelpImg from '../partials/HelpImg'\nimport {Dialog, DialogActions, DialogContent, DialogContentText,\n        Button, LinearProgress, Grid, CircularProgress} from '@material-ui/core'\nimport DialogTitle from '../partials/DialogTitle'\n\nimport {Stepper, Step, StepLabel, InputLabel, Select, MenuItem, Typography,\n        FormControl} from '@material-ui/core';\n\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport {NameField, LinearMeterField, SquareMeterField, QuantityField,\n        VolumeFields } from '../inputFields'\n\nimport AddPricesTb from '../tables/partials/AddPricesTb'\n\nimport {name, area, length, width, height, knotsPerPound, sqrMtsPerBag, sqrMtsPerGal} from '../schemas'\n\nimport * as Yup from 'yup';\nimport MaterialIcon from '@material-ui/icons/LocalMall';\n\nconst TitleIcon = () => <MaterialIcon fontSize='large' color='primary' />\n\nconst CreateForm = ({schema, apiId, title, label, initialValues,\n                     openModal, closeModal, setData, FormFields,\n                     maxWidth, image, imgSpacing}) => {\n\n  //prices que se agregan\n  const [prices, setPrices] = useState([])\n\n  const [serverState, setServerState] = useState();\n  const handleServerResponse = (ok, msg) => {\n    setServerState({ok, msg});\n  };\n  const handleOnSubmit = (values, {setSubmitting, resetForm}) => {\n    console.log('values', values);\n    api.post(`${apiId}`, {...values, prices: prices})\n      .then(response => {\n        api.get(`${apiId}/${response.data.id}`)\n        .then(res => {\n          console.log(res.data)\n          const newData = res.data\n          setData(prevData => [newData, ...prevData])\n        })\n        setSubmitting(false);\n        resetForm();\n        handleServerResponse(true, \"\");\n        closeModal()\n        //agregar a la data general de la tabla materiales\n      })\n      .catch(error => {\n        setSubmitting(false);\n        handleServerResponse(false, error.response.data.error);\n      });\n  };\n\n        return (\n          <Dialog maxWidth={maxWidth || 'md'} fullWidth open={openModal} onClose={() => closeModal} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle onClose={closeModal} id=\"confirmation-dialog-title\">\n              <Stepper alternativeLabel>\n                  <Step key={`${title}`}>\n                    <StepLabel StepIconComponent={TitleIcon}> {`Agregar ${title || `Material`}`}</StepLabel>\n                  </Step>\n              </Stepper>\n          </DialogTitle>\n          <DialogContent dividers>\n\n              <Formik\n               initialValues={{...initialValues}}\n               validationSchema={\n                 Yup.object().shape({\n                    name,\n                    ...schema\n                  })}\n               onSubmit={handleOnSubmit}\n             >\n               {({submitForm, isSubmitting, setFieldValue, values, errors, touched }) => (\n                 <Form>\n                     <Grid container spacing={4} alignItems=\"center\">\n                         {image && <Grid item xs={12} sm={imgSpacing|| 4}>\n                          <HelpImg image={image}/>\n                         </Grid>}\n                         <Grid item xs={12} sm={12 - (imgSpacing || 0)}>\n                         {FormFields && <FormFields values={values} setFieldValue={setFieldValue}\n                                 errors={errors} touched={touched} />}\n                          </Grid>\n                          <Grid item xs={12}>\n                            <AddPricesTb title='Precios' label=\"precio\" prices={prices} setPrices={setPrices}/>\n                          </Grid>\n\n                      </Grid>\n\n                   {isSubmitting && <LinearProgress />}\n                   <br />\n                   <DialogActions>\n\n                   <Button\n                     color=\"inherit\"\n                     onClick={closeModal}\n                   >\n                     Cancelar\n                   </Button>\n\n                   <Button\n                     startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : null}\n                     disabled={isSubmitting}\n                     variant=\"contained\"\n                     color=\"primary\"\n                     onClick={submitForm}\n                   >\n                     {isSubmitting ? 'Enviando' : 'Enviar'}\n                   </Button>\n                   </DialogActions>\n                   {serverState && (\n                     <p className={!serverState.ok ? \"errorMsg\" : \"\"}>\n                       {serverState.msg}\n                     </p>\n                   )}\n                 </Form>\n               )}\n             </Formik>\n\n          </DialogContent>\n\n          </Dialog>\n        )\n}\n\nconst NameForm = ({values, setFieldValue, errors, touched}) => (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n          <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n      </Grid>\n    </Grid>\n)\n\nconst FieldForm = ({values, setFieldValue, errors, touched, Field, name, label, helperText}) => (\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={8}>\n          <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Field name={name} label={label} helperText={helperText}\n        value={values[name]} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n      </Grid>\n    </Grid>\n)\nconst CementForm = ({openModal, closeModal, setData}) =>(\n  <CreateForm apiId=\"cements\" title=\"Cemento\" label=\"cemento\"\n      openModal={openModal} closeModal={closeModal} setData={setData}\n      FormFields={NameForm} initialValues={{name: 'Cemento '}} />\n)\n\nconst SandForm = ({openModal, closeModal, setData}) => (\n  <CreateForm apiId=\"sands\" title=\"Arena\" label=\"arena\"\n      openModal={openModal} closeModal={closeModal} setData={setData}\n      FormFields={NameForm} initialValues={{name: 'Arena '}}/>\n)\n\nconst GravelForm = ({openModal, closeModal, setData}) => (\n  <CreateForm apiId=\"gravels\" title=\"Piedrin\" label=\"piedrin\"\n      openModal={openModal} closeModal={closeModal} setData={setData}\n      FormFields={NameForm} initialValues={{name: 'Piedrin '}}/>\n)\n\nconst IronForm = ({openModal, closeModal, setData}) => {\n  const SpecsForm = ({values, setFieldValue, errors, touched}) => (\n      <FieldForm values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}\n        Field={LinearMeterField} name='length' label='Largo Útil' />\n  )\n\n  return (\n    <CreateForm apiId='irons' title='Hierro' label='hierro' FormFields={SpecsForm}\n      openModal={openModal} closeModal={closeModal} setData={setData} schema={{length}}\n      initialValues={{name: 'Hierro '}}/>)\n\n}\n\nconst TieWireForm = ({openModal, closeModal, setData}) => {\n  const SpecsForm = ({values, setFieldValue, errors, touched}) => (\n    <FieldForm values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}\n      Field={QuantityField} name='knotsPerPound' label='Nudos / Lb' helperText='Cantidad de nudos por libra de alambre'/>\n  )\n\n  return (\n    <CreateForm apiId='tiewires' title='Alambre de Amarre' label='alambre' FormFields={SpecsForm}\n      openModal={openModal} closeModal={closeModal} setData={setData} schema={{knotsPerPound}}\n      initialValues={{name: 'Alambre de amarre '}}/>)\n\n}\n\nconst BlockForm = ({openModal, closeModal, setData}) =>  {\n  const Form = ({values, setFieldValue, errors, touched}) => (\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n          <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n      </Grid>\n      <Grid item xs={12}>\n          <VolumeFields values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n      </Grid>\n    </Grid>\n  )\n    return(\n      <CreateForm apiId='blocks' title='Block' label='block' FormFields={Form}\n      openModal={openModal} closeModal={closeModal} setData={setData} schema={{length, width, height}}\n      maxWidth='md' image={blockImg} imgSpacing={4} initialValues={{name: 'Block '}}/>\n    )}\n\n\nconst CoverPreMixForm = ({openModal, closeModal, setData}) => {\n  const SpecsForm = ({values, setFieldValue, errors, touched}) => (\n\n        <FieldForm values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}\n          Field={SquareMeterField} name='sqrMtsPerBag' label='&#13217; / bolsa'\n          helperText='Rendimiento: Cantidad de &#13217; por bolsa'/>\n\n  )\n\n  return (\n    <CreateForm apiId='premixes' title='Recubrimiento Premezclado' label='recubrimiento premezclado'\n      FormFields={SpecsForm} openModal={openModal} closeModal={closeModal} setData={setData} schema={{sqrMtsPerBag}}\n      initialValues={{name: ''}}/>)\n\n}\n\nconst PaintForm = ({openModal, closeModal, setData}) => {\n  const SpecsForm = ({values, setFieldValue, errors, touched}) => (\n    <FieldForm values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}\n      Field={SquareMeterField}  name='sqrMtsPerGal' label='&#13217; / &#13311;'\n      helperText='Rendimiento: Cantidad de metros cuadrados por galón de pintura'/>\n  )\n\n  return (\n    <CreateForm apiId='paints' title='Pintura' label='pintura'\n      FormFields={SpecsForm} openModal={openModal} closeModal={closeModal} setData={setData} schema={{sqrMtsPerGal}}\n      initialValues={{name: 'Pintura '}}/>)\n\n}\n\nconst ElectromallaForm = ({openModal, closeModal, setData}) => {\n  const SpecsForm = ({values, setFieldValue, errors, touched}) => (\n    <FieldForm values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}\n      Field={SquareMeterField}  name='area' label='Area'\n      helperText='Superficie de la plancha de electromalla'/>\n  )\n\n  return (\n    <CreateForm apiId='electromallas' title='Electromalla' label='electromalla'\n      FormFields={SpecsForm} openModal={openModal} closeModal={closeModal} setData={setData} schema={{area}}\n      initialValues={{name: 'Electromalla '}}/>)\n\n}\nconst MaterialForm = ({ openModal, closeModal, setData}) => {\n  const [units, setUnits] = useState([])\n  useEffect(() => {\n    api.get('units')\n    .then(response => {\n      setUnits(response.data)\n    })\n    .catch(err => {\n    })\n  }, [])\n\n  const useStyles = makeStyles({\n      denseItem:{\n      paddingTop: 0,\n      paddingBottom: 0,\n    },\n  });\n\n  const classes = useStyles()\n\n  const FormFields = ({values, setFieldValue, errors, touched}) => (\n    <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n              <FormControl>\n                <InputLabel htmlFor=\"unit\">{`Unidad de Medida`}</InputLabel>\n                <Field\n                  component={Select}\n                  disabled={units.length === 0}\n                  name='unit'\n                  onChange = {(evt, child) => setFieldValue('unit', evt.target.value)}\n                  defaultValue= {values.unit ? values.unit : null }\n                  displayEmpty\n                  renderValue={value => value ? <MenuItem dense className={classes.denseItem} value={value}>{`${value.name}`}</MenuItem> : ''}\n                  inputProps={{\n                    id: 'mix-prop',\n\n                  }}\n                >\n                  {units.map(unit => <MenuItem dense value={unit}>{unit.name}</MenuItem>)}\n                </Field>\n                {errors[\"unit\"] && touched[\"unit\"] ? (\n                  <div><Typography color='error' variant='caption'>{errors[\"unit\"]}</Typography></div>\n                ) : null}\n\n              </FormControl>\n          </Grid>\n        </Grid>\n  )\n\n  return (\n      <CreateForm apiId='materials' label='material'\n      FormFields={FormFields} openModal={openModal} closeModal={closeModal} setData={setData}\n      schema={{name, unit: Yup.mixed().required('Unidad es requerido')}}/>\n  )\n}\n\nexport {CementForm, SandForm, GravelForm, IronForm, TieWireForm, BlockForm, CoverPreMixForm, PaintForm,\n        ElectromallaForm, MaterialForm}\n","import React, {useState, useEffect, Fragment} from 'react'\nimport api from '../../api'\nimport * as Yup from 'yup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport blockImg from '../../imgs/block.png';\nimport HelpImg from '../partials/HelpImg'\n\nimport {Dialog, DialogActions, DialogContent, DialogContentText,\n        Button, LinearProgress, Grid, CircularProgress, InputAdornment, FormHelperText,\n        FormControl, Select, MenuItem, InputLabel, Typography} from '@material-ui/core'\nimport DialogTitle from '../partials/DialogTitle'\n\nimport {Stepper, Step, StepLabel} from '@material-ui/core';\n\nimport SaveIcon from '@material-ui/icons/Save';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nimport {VolumeFields, LinearMeterField, NameField, SquareMeterField, QuantityField } from '../inputFields'\n\nimport {name, length, width, height, area, knotsPerPound, sqrMtsPerBag, sqrMtsPerGal} from '../schemas'\n\nimport MaterialIcon from '@material-ui/icons/LocalMall';\nimport PricesTb from '../tables/partials/MaterialPricesTb'\n\nconst TitleIcon = () => <MaterialIcon fontSize='large' color='primary' />\n\n\nconst UpdateForm = ({apiId, id, rowData,\n                     materialsData, setMaterialsData,\n                     validationSchema, FormMaterial,\n                     maxWidth, open, closeModal, title,\n                     image, imgSpacing}) => {\n\n  const [serverState, setServerState] = useState();\n\n  const refreshMaterial = () => {\n    api.get(`${apiId}/${id}`)\n    .then(res => {\n      const dataUpdate = [...materialsData]\n      const index = rowData.tableData.id\n      const updatedMaterial = {...res.data, tableData: rowData.tableData}\n      dataUpdate[index] = updatedMaterial\n      setMaterialsData([...dataUpdate])\n\n    })\n    .catch(err => console.log(err))\n\n  }\n  const handleServerResponse = (ok, msg) => {\n    setServerState({ok, msg});\n  };\n  const handleOnSubmit = (values, {setSubmitting, resetForm}) => {\n    // const {name} = values\n\n    api.put(`${apiId}/${id}`, {...values})\n      .then(response => {\n        setSubmitting(false);\n        refreshMaterial()\n        console.log('values', values);\n        handleServerResponse(true, \"\");\n        closeModal()\n      })\n      .catch(error => {\n        setSubmitting(false);\n        handleServerResponse(false, error.response.data.error);\n      });\n  };\n\n  return (\n    <Dialog maxWidth={maxWidth || 'md'} fullWidth open={open} onClose={() => closeModal} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle onClose={closeModal}>\n        <Stepper alternativeLabel>\n            <Step key={`${title}`}>\n              <StepLabel StepIconComponent={TitleIcon}> {`Editar ${title || `Material`}`}</StepLabel>\n            </Step>\n        </Stepper>\n      </DialogTitle>\n    <DialogContent dividers>\n\n        <Formik\n           enableReinitialize // missing piece!!\n           initialValues={{\n             ...rowData\n           }}\n           validationSchema={Yup.object().shape({\n                 ...validationSchema\n               })}\n           onSubmit={handleOnSubmit}\n       >\n         {({ values, setFieldValue, errors, touched, submitForm, isSubmitting }) => (\n           <Form>\n                 <Grid container spacing={4} alignItems=\"center\">\n                     {image && <Grid item xs={12} sm={imgSpacing|| 4}>\n                      <HelpImg image={image}/>\n                   </Grid>}\n                   <Grid item xs={12} sm={12 - (imgSpacing || 0)}>\n                      <FormMaterial values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <PricesTb url={`/materials/${id}/prices`} parentId={id}\n                      title='Precios' label=\"precio\"\n                      />\n                    </Grid>\n                  </Grid>\n\n\n               {isSubmitting && <LinearProgress />}\n               <br />\n\n\n               <DialogActions>\n                   <Button\n                    color=\"inherit\"\n                    onClick={closeModal}>\n                       Cancelar\n                    </Button>\n                    <Button\n                      startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : null}\n                      disabled={isSubmitting}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      type=\"submit\"\n                      onClick={submitForm}\n                    >\n                      {isSubmitting ? 'Enviando' : 'Actualizar' }\n                    </Button>\n               </DialogActions>\n         </Form>\n         )}\n\n       </Formik>\n       </DialogContent>\n       </Dialog>\n  )\n}\n\nconst CapForm = ({ open, closeModal, rowData,\n                    rowsData, setRowsData}) => {\n  const {id} =  rowData\n  const FormFields = ({values, setFieldValue, errors, touched}) => (\n    <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n          </Grid>\n        </Grid>\n  )\n\n  return (\n    <UpdateForm apiId='materials' id={id} FormMaterial={FormFields}\n    rowData={rowData} materialsData={rowsData} setMaterialsData={setRowsData}\n    open={open} closeModal={closeModal}\n    validationSchema={{name}}\n    />\n  )\n}\n\nconst IronForm = ({ open, closeModal, rowData,\n                    rowsData, setRowsData}) => {\n  const {id} =  rowData\n  const FormFields = ({values, setFieldValue, errors, touched}) => (\n    <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Field\n              component={TextField}\n              name='length'\n              type=\"number\"\n              label=\"Largo Útil\"\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    m\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n        </Grid>\n  )\n\n  return (\n    <UpdateForm apiId='irons' id={id} FormMaterial={FormFields}\n    rowData={rowData} materialsData={rowsData} setMaterialsData={setRowsData}\n    open={open} closeModal={closeModal}\n    validationSchema={{name, length}}\n    />\n  )\n}\n\nconst TieWireForm = ({open, closeModal, rowData,\n                      rowsData, setRowsData}) => {\n  const {id} =  rowData\n  const FormFields = ({values, setFieldValue, errors, touched}) => (\n    <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Field\n              id=\"knotsPerPound\"\n              component={TextField}\n              name={`knotsPerPound`}\n              type=\"number\"\n              label=\"Nudos / Libra\"\n            />\n            <FormHelperText id=\"knotsPerPound-text\">Cantidad de nudos por libra de alambre</FormHelperText>\n          </Grid>\n      </Grid>\n  )\n\n  return (\n    <UpdateForm apiId='tiewires' id={id} FormMaterial={FormFields}\n    rowData={rowData} materialsData={rowsData} setMaterialsData={setRowsData}\n    open={open} closeModal={closeModal}\n    validationSchema={{name, knotsPerPound}}\n    />\n  )\n}\n\nconst BlockForm = ({open, closeModal, rowData,\n                      rowsData, setRowsData}) => {\n  const {id} = rowData\n  const FormFields = ({values, setFieldValue, errors, touched}) => (\n        <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n              </Grid>\n              <Grid item xs={12}>\n               <VolumeFields />\n              </Grid>\n         </Grid>\n     )\n\n  return (\n    <UpdateForm apiId='blocks' id={id} FormMaterial={FormFields}\n    rowData={rowData} materialsData={rowsData} setMaterialsData={setRowsData}\n    open={open} closeModal={closeModal}\n    validationSchema={{name, length, width, height}}\n    image={blockImg} imgSpacing={4}\n    />\n  )\n}\n\nconst CoverPreMixForm = ({open, closeModal, rowData,\n                          rowsData, setRowsData}) => {\n  const {id} = rowData\n  const FormFields = ({values, setFieldValue, errors, touched}) => (\n    <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n          <Field\n            id='sqrMtsPerBag'\n            component={TextField}\n            name={`sqrMtsPerBag`}\n            type=\"number\"\n            label=\"&#13217; / bolsa\"\n          />\n            <FormHelperText id=\"sqrMtsPerBag-text\">Rendimiento: Cantidad de &#13217; por bolsa</FormHelperText>\n          </Grid>\n      </Grid>\n  )\n\n  return (\n    <UpdateForm apiId='premixes' id={id} FormMaterial={FormFields}\n    rowData={rowData} materialsData={rowsData} setMaterialsData={setRowsData}\n    open={open} closeModal={closeModal}\n    validationSchema={{name, sqrMtsPerBag}}\n    />\n  )\n}\n\nconst ElectromallaForm = ({open, closeModal, rowData,\n                          rowsData, setRowsData}) => {\n  const {id} = rowData\n  const FormFields = ({values, setFieldValue, errors, touched}) => (\n    <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <SquareMeterField name='area' label='Area' value={values.area}\n              helperText='Superficie de la plancha de electromalla'\n              setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n          </Grid>\n      </Grid>\n  )\n\n  return (\n    <UpdateForm apiId='electromallas' id={id} FormMaterial={FormFields}\n    rowData={rowData} materialsData={rowsData} setMaterialsData={setRowsData}\n    open={open} closeModal={closeModal}\n    validationSchema={{name, area}}\n    />\n  )\n}\nconst PaintForm = ({open, closeModal, rowData,\n                          rowsData, setRowsData}) => {\n  const {id} = rowData\n  const FormFields = ({values, setFieldValue, errors, touched}) => (\n    <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <QuantityField name='sqrMtsPerGal' label='&#13217; / &#13311;' value={values.sqrMtsPerGal}\n              helperText='Rendimiento: Cantidad de metros cuadrados por galón de pintura'\n              setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n          </Grid>\n      </Grid>\n  )\n\n  return (\n    <UpdateForm apiId='paints' id={id} FormMaterial={FormFields}\n    rowData={rowData} materialsData={rowsData} setMaterialsData={setRowsData}\n    open={open} closeModal={closeModal}\n    validationSchema={{name, sqrMtsPerGal}}\n    />\n  )\n}\nconst MaterialForm = ({ open, closeModal, rowData,\n                    rowsData, setRowsData}) => {\n  const {id} =  rowData\n  const [units, setUnits] = useState([])\n\n  useEffect(() => {\n    api.get('units')\n    .then(response => {\n      setUnits(response.data)\n    })\n    .catch(err => {\n    })\n  }, [])\n\n  const useStyles = makeStyles({\n      denseItem:{\n      paddingTop: 0,\n      paddingBottom: 0,\n    },\n  });\n\n  const classes = useStyles()\n\n  const FormFields = ({values, setFieldValue, errors, touched}) => (\n    <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n              <FormControl>\n                <InputLabel htmlFor=\"unit\">{`Unidad de Medida`}</InputLabel>\n                <Field\n                  component={Select}\n                  disabled={units.length === 0}\n                  name='unit'\n                  onChange = {(evt, child) => setFieldValue('unit', evt.target.value)}\n                  defaultValue= {values.unit ? values.unit : null }\n                  displayEmpty\n                  renderValue={value => value ? <MenuItem dense className={classes.denseItem} value={value}>{`${value.name}`}</MenuItem> : ''}\n                  inputProps={{\n                    id: 'mix-prop',\n\n                  }}\n                >\n                  {units.map(unit => <MenuItem dense value={unit}>{unit.name}</MenuItem>)}\n                </Field>\n                {errors[\"unit\"] && touched[\"unit\"] ? (\n                  <div><Typography color='error' variant='caption'>{errors[\"unit\"]}</Typography></div>\n                ) : null}\n\n              </FormControl>\n          </Grid>\n        </Grid>\n  )\n\n  return (\n    <UpdateForm apiId='materials' id={id} FormMaterial={FormFields}\n    rowData={rowData} materialsData={rowsData} setMaterialsData={setRowsData}\n    open={open} closeModal={closeModal}\n    validationSchema={{name, unit: Yup.mixed().required('Unidad es requerido')}}\n    />\n  )\n}\n\n\nexport {BlockForm, IronForm, TieWireForm, CoverPreMixForm,\nCapForm as CementForm, CapForm as SandForm, CapForm as GravelForm,\nMaterialForm, ElectromallaForm, PaintForm}\n","import React, {Fragment} from 'react'\nimport {MaterialForm,\n        CementForm, SandForm, GravelForm,\n        BlockForm, IronForm, TieWireForm, CoverPreMixForm,\n        ElectromallaForm, PaintForm} from './updateForms'\nimport {Dialog} from '@material-ui/core'\n\n\nconst map = {\n  0: MaterialForm,\n  1: CementForm,\n  2: SandForm,\n  3: GravelForm,\n  4: IronForm,\n  5: TieWireForm,\n  6: BlockForm,\n  7: CoverPreMixForm,\n  8: PaintForm,\n  9: ElectromallaForm\n\n}\n\n\nexport default map;\n","const toCurrency = num => new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(num)\n\nexport {toCurrency}\n","import React, {forwardRef, createRef, useState, useEffect, Fragment} from 'react';\nimport api from '../../api'\nimport localization from './localization'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport MaterialTable, {MTableToolbar} from 'material-table';\nimport grey from '@material-ui/core/colors/grey';\nimport {Select, MenuItem, FormControl, Paper, Fab, Divider, Typography,\n        ListItemText, Grid, ListItem, ListItemAvatar, Avatar} from '@material-ui/core';\nimport {Add, ArrowDownward, Check, ChevronLeft, ChevronRight, Clear, DeleteOutline,\n        Edit, FirstPage, LastPage, Remove, SaveAlt, Search, ViewColumn} from '@material-ui/icons'\nimport FilterList from '@material-ui/icons/FilterListRounded';\nimport Refresh from '@material-ui/icons/RefreshRounded';\nimport Price from '@material-ui/icons/AttachMoneyRounded';\nimport ExpandLess from '@material-ui/icons/ExpandLessRounded';\n\nimport DetailsTb from './partials/MaterialPricesTb'\n\nimport MenuDial from './partials/MenuDial'\nimport ConfirmationDialog from '../partials/ConfirmationDialog'\n\nimport {CementForm, SandForm, GravelForm,\n        IronForm, TieWireForm, BlockForm, CoverPreMixForm,\n        PaintForm, ElectromallaForm, MaterialForm} from '../materials_forms/createForms'\n\nimport updateForms from '../materials_forms/forms_map'\nimport {toCurrency} from '../../functions'\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <Fab  color=\"secondary\" size=\"medium\"><Add {...props} ref={ref} /> </Fab> ),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n    Refresh: forwardRef((props, ref) => <Refresh color=\"primary\"{...props} ref={ref} />),\n    // AddLibrary: forwardRef((props, ref) => <Fab color=\"primary\" size=\"medium\"><AddLibrary {...props} ref={ref} /> </Fab>),\n    AddLibrary:  forwardRef((props, ref) => <MenuDial {...props} ref={ref}/>),\n    Price: forwardRef((props, ref) => <Price {...props} ref={ref} />),\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n      minWidth: \"max-content\",\n      marginLeft: theme.spacing(2)\n\n    },\n    searchField: {\n      maxWidth: \"max-content\",\n    },\n    panel: {\n      paddingLeft: theme.spacing(12.5),\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(4)\n    }\n\n  }));\n\n  const materialForDelete = (row, idx) => {\n\n    return (\n    <ListItem>\n    <ListItemAvatar>\n      <Avatar>\n        {idx + 1}\n      </Avatar>\n    </ListItemAvatar>\n      <ListItemText primary={row.name} secondary={\n        <Grid container direction=\"row\"\n              justify=\"flex-start\"\n              spacing={1}\n              alignItems=\"center\">\n              <Grid item>\n                {`${row.type ? `${row.type.name}, `: ''} ${row.unit.name}`}\n              </Grid>\n        </Grid>\n      }\n      />\n      <Divider />\n    </ListItem>\n  )\n  }\n\n\nexport default function MaterialsTb(props) {\n  const classes = useStyles();\n\n  const tableRef = createRef()\n  const [isLoading, setLoading] = useState(true)\n  const [refreshFlag, setRefreshFlag] = useState(false)\n\n  const [data, setData] = useState([])\n  const [units, setUnits] = useState({})\n  const [types, setTypes] = useState({})\n\n  //error handling\n  const [isError, setIsError] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n\n  //create material normal\n  const [openCreate, setOpenCreate] = useState(false)\n  //edit mode handling\n  const [open, setOpen] = useState(false);\n  const [updateDialog, setUpdateDialog] = React.useState({active: Fragment})\n\n  const handleOpenModal = (form, rowData) => {\n    setUpdateDialog({active: form, data: rowData})\n    setOpen(true)\n  }\n   const handleCloseModal = () => {\n    setOpen(false);\n   };\n\n  //confimar multiple delete\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const [confirmData, setConfirmData] = useState([])\n  const onConfirm = async (materials) => {\n    await Promise.all(\n      materials.map( async row => {\n            try {\n                console.log('borrada' , row.id);\n                return await api.delete(`${props.url}/${row.id}`)\n\n            } catch (err) {\n              console.log(err);\n            }\n      })\n    )\n\n      let _data = [...data];\n      materials.forEach(rd => {\n        _data = _data.filter(t => t.tableData.id !== rd.tableData.id);\n      });\n      setData(_data);\n\n      }\n  const handleClose = () => {\n      setConfirmOpen(false)\n  }\n\n  const columns =    [\n     { title: 'Id', field: 'id', hidden: true },\n     { title: 'Nombre', field: 'name', filtering: false, render: rowData => rowData.fullName,\n       validate: rowData => ( typeof rowData.name != 'undefined'?\n                                  rowData.name.trim() === '' ?\n                                      { isValid: false, helperText: 'Nombre es requerido' } : true\n                                  : false)},\n     { title: 'Tipo', field: 'type.id', editable:'never', lookup: types},\n     { title: 'Unidad de Medida', field: 'unit.id', lookup: units,\n       validate: rowData => ( typeof rowData.unit != 'undefined'),\n       editComponent: props => {\n            return (\n              <FormControl>\n\n              <Select\n                 value={props.value}\n                 displayEmpty\n                 disabled = {props.rowData.type != null}\n                 onChange={e => props.onChange(e.target.value)}\n\n               >\n                 {Object.entries(units).map(([key, value]) => (\n                   <MenuItem value={key}>\n                     {value}\n                   </MenuItem>\n                 ))}\n               </Select>\n              </FormControl>\n            )\n          }\n      },\n   ]\n\n   const actions = [\n     { name: 'Cemento', form: CementForm},\n     { name: 'Arena', form: SandForm  },\n     { name: 'Piedrin', form: GravelForm  },\n     { name: 'Hierro', form: IronForm  },\n     { name: 'Alambre de Amarre', form: TieWireForm },\n     { name: 'Block', form: BlockForm  },\n     { name: 'Recubrimiento Premezclado', form: CoverPreMixForm  },\n     { name: 'Pintura', form: PaintForm},\n     { name: 'Electromalla', form: ElectromallaForm},\n\n\n   ];\n\n  //units catalog\n  useEffect(() => {\n    api.get('units/catal')\n    .then(response => {\n      setUnits(response.data)\n    })\n    .catch(err => {\n      setErrorMessages(['Cannot load user data'])\n      setIsError(true)\n    })\n  }, [refreshFlag])\n\n\n  //materials type catalog\n  useEffect(() => {\n      api.get('materialtypes/catal')\n      .then(response => {\n        setTypes(response.data)\n      })\n      .catch(err => {\n        setErrorMessages(['Cannot load user data'])\n        setIsError(true)\n      })\n  }, [refreshFlag])\n\n  //loading data when mounted and refresh\n  useEffect(() => {\n    setLoading(true)\n    api.get(props.url)\n    .then(response => {\n      console.log('consola aqui' + response.data)\n      setData(response.data)\n      setLoading(false)\n    })\n    .catch(err => {\n      setErrorMessages(['Cannot load user data'])\n      setIsError(true)\n    })\n\n  }, [refreshFlag])\n\n\n  const handleRowAdd = (newData, resolve) => {\n\n    //validation\n    let errorList = []\n    //if(dato indefinido then errorList.push())\n\n    if(errorList.length < 1){\n      api.post(props.url, newData)\n      // console.log(url + newData)\n      .then(res => {\n        // let dataToAdd = [res.data, ...data]\n        console.log('Material de respuesta', res.data);\n        setData(data => [ res.data, ...data])\n        console.log(data);\n        resolve()\n        setErrorMessages([])\n        setIsError(false)\n      })\n      .catch(err => {\n        setErrorMessages([\"Cannot add data. Server error!\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    let errorList = []\n\n    if(errorList.length < 1){\n      api.put(`${props.url}/${newData.id}`, newData)\n      .then(res => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = res.data\n        setData([...dataUpdate])\n        resolve()\n        setIsError(false)\n        setErrorMessages([])\n      })\n      .catch(err => {\n        setErrorMessages([\"update failed! Server error\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    let errorList = []\n\n    api.delete(`${props.url}/${oldData.id}`)\n    .then(res => {\n      const dataDelete = [...data]\n      const index = oldData.tableData.id\n      dataDelete.splice(index, 1)\n      setData([...dataDelete])\n      resolve()\n    })\n    .catch(err => {\n      setErrorMessages([\"Delete failed! Server error\"])\n      setIsError(true)\n      resolve()\n    })\n  }\n\n  return (\n    <Fragment>\n    <MaterialTable\n      tableRef={tableRef}\n      icons={tableIcons}\n      title={props.title}\n      columns={columns}\n      data={data}\n      isLoading={isLoading}\n\n      editable={{\n        isEditHidden: rowData => true,\n        isEditable: rowData => !rowData.restricted, // only name(a) rows would be editable\n        isDeletable: rowData => !rowData.restricted, // only name(b) rows would be deletable,\n\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve)\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve)\n          }),\n      }}\n    \n      options={{\n       actionsColumnIndex: -1,\n       filtering: true,\n       searchFieldAlignment: 'right',\n       addRowPosition: 'first',\n       selection: true,\n       sorting: true,\n       pageSize: 10,\n       pageSizeOptions: [10],\n       paginationType: 'normal',\n       padding: 'dense',\n       headerStyle: {\n         paddingTop: 8,\n         paddingBottom: 8,\n         fontSize: '0.75rem',\n         color: grey[900],\n         backgroundColor: grey[100],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n       },\n       rowStyle: {\n         // backgroundColor: '#EDF4F5',\n         // // backgroundColor: '',\n         // borderBottom: 'solid 2px #e0f2f1',\n         // borderTop: 'solid 2px #e0f2f1',\n\n       },\n       cellStyle: {\n         paddingTop: 10,\n         paddingBottom: 10\n       },\n       searchFieldStyle: {\n         maxWidth: 'max-content',\n\n       }\n\n     }}\n     actions={[\n       {\n          icon: tableIcons.Edit,\n          tooltip: 'Editar',\n          onClick: (event, rowData) => {\n            if(rowData.type){\n              handleOpenModal(updateForms[rowData.type.id], rowData)\n            } else {\n                // tableRef.current.dataManager.changeRowEditing(rowData, 'update');\n                // tableRef.current.setState({\n                //   ...tableRef.current.dataManager.getRenderState(),\n                // });\n                handleOpenModal(updateForms[0], rowData)\n            }\n\n          },\n          position: 'row'\n        },\n       {\n         icon: tableIcons.Refresh,\n         tooltip: 'Actualizar',\n         isFreeAction: true,\n         onClick: () => {\n              setRefreshFlag((flag)=>!flag)\n            },\n       },\n       {\n        tooltip: 'Eliminar materiales',\n        icon: tableIcons.Delete,\n        onClick: (evt, data) => {setConfirmData(data); setConfirmOpen(true);}\n\n\n      },\n       {\n         icon: () => <tableIcons.AddLibrary setData={setData} actions={actions}/>,\n         isFreeAction: true,\n         // iconProps: {style: {padding: 0}},\n       },\n       {\n         icon: () => <Fab  color=\"secondary\" size=\"medium\"><Add/> </Fab>,\n         tooltip: 'Nuevo Material',\n         isFreeAction: true,\n         onClick: () => setOpenCreate(true)\n         // iconProps: {style: {padding: 0}},\n       }\n\n\n\n\n     ]}\n     components={{\n       Toolbar: props => (\n          <div style={{backgroundColor: '#e4e5eb'}}>\n\n          <MTableToolbar classes={{ actions: classes.actionsContainer, searchField: classes.searchField }} {...props}>\n            </MTableToolbar>\n          </div>\n        ),\n        Container: props => (\n          <Paper  elevation={0} {...props}>{props.children}</Paper>\n        ),\n\n\n     }}\n     localization={localization(props.label)}\n    />\n    <ConfirmationDialog\n          classes={{\n            paper: classes.paper,\n          }}\n          id=\"rows-to-delete\"\n          keepMounted\n          showTitle = {data => `¿Esta seguro de eliminar ${data.length > 1 ? `estos ${data.length} materiales?` : `este material ?`}`}\n          showRow ={materialForDelete}\n          open={confirmOpen}\n          onClose={handleClose}\n          data={confirmData}\n          onConfirm={onConfirm}\n      />\n      <updateDialog.active closeModal={handleCloseModal} open={open}\n      rowData={updateDialog.data} rowsData={data} setRowsData={setData}\n      />\n      <MaterialForm closeModal={() => setOpenCreate(false)} openModal={openCreate} setData={setData}/>\n      </Fragment>\n  );\n}\n","import api from './api'\nimport axios from 'axios'\n\nimport underscore from 'underscore'\n\nimport XLSX from 'sheetjs-style'\n\n//STYLES\nconst styles = {\n\n    title: {\t\t\t\t\t\t\t\t\t// style for the page title\n        font: {\n          name: 'Arial',\n          sz: 14,\n          bold: true,\n          color: { rgb: \"FFFFFFFF\" },\n        },\n        alignment: {\n          horizontal: 'center',\n          vertical: 'center'\n        },\n        fill: {\n          bgColor: {rgb: \"FF424242\"},\n          fgColor: {rgb: \"FF424242\"},\n        },\n    },\n    subTitle: {\t\t\t\t\t\t\t\t\t// style for subtitle or divisions\n        font: {\n          name: 'Arial',\n          sz: 12,\n          bold: true,\n          color: { rgb: \"FFFFFFFF\" },\n        },\n        alignment: {\n          horizontal: 'center',\n          vertical: 'center'\n        },\n        fill: {\n          bgColor: {rgb: \"FF1D4D87\"},\n          fgColor: {rgb: \"FF1D4D87\"},\n        },\n    },\n    tableHeader: {\t\t\t\t\t\t\t\t\t// style of the header cells of the table\n        font: {\n          name: 'Arial',\n          sz: 10,\n          bold: true,\n          color: { rgb: \"FFFFFFFF\" },\n        },\n        alignment: {\n          horizontal: 'center',\n          vertical: 'center'\n        },\n        fill: {\n          bgColor: {rgb: \"FF1D4D87\"},\n          fgColor: {rgb: \"FF1D4D87\"},\n        },\n    },\n    supplierHeader: {\t\t\t\t\t\t\t\t\t// style of the header cells of the table\n        font: {\n          name: 'Arial',\n          sz: 10,\n          bold: true,\n          color: { rgb: \"ff0a6266\" },\n        },\n        alignment: {\n          horizontal: 'center',\n          vertical: 'center'\n        },\n        fill: {\n          bgColor: {rgb: \"ffe3f0f0\"},\n          fgColor: {rgb: \"ffe3f0f0\"},\n        },\n    },\n    tableSubTitle: {\n        font: {\n          name: 'Arial',\n          sz: 10,\n          bold: true,\n        },\n        alignment: {\n          horizontal: 'left',\n          vertical: 'center'\n        },\n        fill: {\n          bgColor: {rgb: \"FFF5F5F5\"},\n          fgColor: {rgb: \"FFF5F5F5\"},\n        },\n    },\n    rowSubTotal: {\n      font: {\n        name: 'Arial',\n        sz: 10,\n        bold: true,\n      },\n      alignment: {\n        horizontal: 'center',\n        vertical: 'center'\n      },\n      fill: {\n        bgColor: {rgb: \"E3F0F0\"},\n        fgColor: {rgb: \"E3F0F0\"},\n      },\n    },\n    groupTotal: {\n      font: {\n        name: 'Arial',\n        sz: 10,\n        bold: true,\n      },\n      alignment: {\n        horizontal: 'center',\n        vertical: 'center'\n      },\n    },\n    tableCell: {                // style of the table cell\n      font: {\n        name: 'Arial',\n        sz: 10,\n      },\n      alignment: {\n        vertical: 'center'\n      },\n\n    },\n\n}\n\n\n//GENERATE DATA\nconst checkNull = value => value || ''\n\nconst rowData = (row, idx ) => ([[idx + 1, row.fullName || '', row.unitAmount || '', row.unit.symbol || '', row.unitCost || 0, row.totalCost || 0]])\n\nconst rowCostData = data => data.map((cost) => ({\n                                \"No.\": \"\",\n                                \"DESCRIPCION\": cost.name,\n                                \"CANTIDAD\": cost.totalAmount,\n                                \"UNIDAD\": cost.unit.symbol,\n                                \"COSTO UNIT.\": cost.price,\n                                \"COSTO TOTAL\": cost.totalPrice}))\n\nconst summaryData = data => data.map((row, idx) => ({\n                                \"No.\": idx + 1,\n                                \"DESCRIPCION\": row.fullName,\n                                \"CANTIDAD\": row.unitAmount,\n                                \"UNIDAD\": row.unit.symbol,\n                                \"COSTO UNIT.\": row.unitCost || 0,\n                                \"COSTO TOTAL\": row.totalCost || 0}))\n\n\n\nconst materialsData = data => data.map((row, idx) => ({\n                                \"No.\": idx + 1,\n                                \"DESCRIPCION\": row.name,\n                                \"CANTIDAD\": row.amount,\n                                \"UNIDAD\": row.unit,\n                                \"PRECIO\": row.price,\n                                \"TOTAL\": row.total,\n                                \"PROVEEDOR\": row.supplier,\n                              }))\n\n\nconst titleReport = name => ([[`PRESUPUESTO ${name.toUpperCase()}`]])\nconst projectInfo = (address, client, architect) =>[['UBICACIÓN'], [`${checkNull(address).toUpperCase()}`],\n                     ['CLIENTE'], [client ? `${client.name.toUpperCase()}` : ''],\n                     ['ARQUITECTO'], [`${checkNull(architect).toUpperCase()}`]]\n\n\nlet idInfo = budgetName =>  [['FECHA', `${new Date().toLocaleDateString('en-GB')}`],\n             ['PRESUPUESTO', `${checkNull(budgetName).toUpperCase()}`]]\n\n\nconst totalCost = data =>  data.reduce((total, {totalCost}) => total + totalCost, 0);\n\nconst setWSHeader = (data, title) => {\n  var ws = XLSX.utils.aoa_to_sheet([[]]);\n\n  const {project, client, architect, name} = data;\n  const titleCellAdd = 'A1'\n  const subTitleAdd = 'A8'\n  const generalInfoAdd = 'B2'\n  const dateCaptionAdd = 'D2'\n  const dateAdd = 'E2'\n  const budgetCaptionAdd = 'D3'\n  const budgetAdd = 'E3'\n  //Celdas compuestas\n ws['!merges'] = [ {s: {r:0, c: 0}, e:{r:0, c:4}},\n                          {s: {r:0, c: 5}, e:{r:6, c:5}},\n                          {s: {r:7, c: 0}, e:{r:7, c:5}}]\n  //Ancho de columnas\n  if(!ws['!cols']) ws['!cols'] = [];\n  ws['!cols'][0] = { wch: 3 };\n  ws['!cols'][1] = { wch: 50 };\n  ws['!cols'][2] = { wch: 12 };\n  ws['!cols'][3] = { wch: 12 };\n  ws['!cols'][4] = { wch: 15 };\n  ws['!cols'][5] = { wch: 18 };\n  ws['!cols'][6] = { wch: 50 };\n\n\n  //Informacion de encabezado\n  XLSX.utils.sheet_add_aoa(ws, titleReport(project.name), {origin: titleCellAdd});\n  XLSX.utils.sheet_add_aoa(ws, [[`${title}`]], {origin: subTitleAdd});\n  XLSX.utils.sheet_add_aoa(ws, [['']], {origin: 'G8'});\n  XLSX.utils.sheet_add_aoa(ws, projectInfo(project.address, client, architect), {origin: generalInfoAdd});\n  XLSX.utils.sheet_add_aoa(ws, idInfo(name), {origin: dateCaptionAdd});\n\n  //Estilos a celdas\n  ws[titleCellAdd].s = styles.title\n  ws[subTitleAdd].s = styles.subTitle\n  //information general\n  for (var i = 2; i < 8; i++) {\n    if(i % 2 == 0) {ws[`B${i}`].s = styles.tableCell\n      }else {\n        ws[`B${i}`].s = {...styles.tableCell, font: {name: 'Arial', sz: 12, bold: true}}\n      }\n  }\n  //informacion fecha y presupuesto\n  ws[dateCaptionAdd].s = styles.tableCell\n  ws[budgetCaptionAdd].s = styles.tableCell\n  ws[dateAdd].s = {...styles.tableCell, font: {name: 'Arial', sz: 12, bold: true}}\n  ws[budgetAdd].s = {...styles.tableCell, font: {name: 'Arial', sz: 12, bold: true}}\n\n\n\n  return ws\n}\n\nconst setHeightRows = ws => {\n  // get worksheet range\n  var range = XLSX.utils.decode_range(ws['!ref']);\n\n  //Alto filas\n  for (var i = range.s.r; i <= range.e.r; i++) {\n    if(!ws['!rows']) ws['!rows'] = [];\n    ws['!rows'][i] = {hpt: 18}\n    if(i === 0) ws['!rows'][i] = {hpt: 22}//Titulo\n  }\n\n  return ws\n}\n\nconst setNumFormats = ws => {\n  const range = XLSX.utils.decode_range(ws['!ref']);\n  //formato Q. currency\n  const N = XLSX.utils.decode_col(\"A\"); // 1 numeracion\n  const C = XLSX.utils.decode_col(\"C\"); // 1 numeracion\n  const U = XLSX.utils.decode_col(\"E\"); // 5 costo unitario\n  const T = XLSX.utils.decode_col(\"F\"); // 6 costo total\n  const gtq = '\"Q\"#,##0.00'; // formato Q0.00 currency GTQ\n  const no = '#'; // formato 1 numeracion\n  const qt = '0.00'; // formato 0.00 quantity\n\n  for(var i = range.s.r + 9; i <= range.e.r; i++) {\n    /* find the data cell (range.s.r + 1 skips the header row of the worksheet) */\n\n    let num = XLSX.utils.encode_cell({r:i, c:N});\n    let cant = XLSX.utils.encode_cell({r:i, c:C});\n    let unit = XLSX.utils.encode_cell({r:i, c:U});\n    let total = XLSX.utils.encode_cell({r:i, c:T});\n\n    /* if the particular row did not contain data for the column, the cell will not be generated */\n    if(ws[num]){\n      /* `.t == \"n\"` for number cells */\n      if(ws[num].t != 'n') {\n        continue;\n      } else {\n        /* assign the `.z` number format */\n        ws[num].z = no;\n      }\n    }\n\n    /* if the particular row did not contain data for the column, the cell will not be generated */\n    if(ws[cant]){\n      /* `.t == \"n\"` for number cells */\n      if(ws[cant].t != 'n') {\n        continue;\n      } else {\n        /* assign the `.z` number format */\n        ws[cant].z = qt;\n      }\n    }\n\n    /* if the particular row did not contain data for the column, the cell will not be generated */\n    if(ws[unit]){\n      /* `.t == \"n\"` for number cells */\n      if(ws[unit].t != 'n') {\n        continue;\n      } else {\n        /* assign the `.z` number format */\n        ws[unit].z = gtq;\n      }\n    }\n\n    /* if the particular row did not contain data for the column, the cell will not be generated */\n    if(ws[total]){\n      /* `.t == \"n\"` for number cells */\n      if(ws[total].t != 'n') {\n        continue;\n      } else {\n        /* assign the `.z` number format */\n        ws[total].z = gtq;\n      }\n    }\n\n  }\n\n  return ws\n\n\n}\n\n//RESUMEN DE PRESUPUESTO WS\nconst summaryWS = data => {\n  var workSheet = setWSHeader(data[0].budget, 'RESUMEN DE PRESUPUESTO')\n  const nRows = data.length //numero de filas en la tabla de datos\n\n\n\n  //direcciones de las celdas origen\n\n  const tableDataAdd = 'A9'\n  const tableDataRowAdd = '9'\n  const totalTitleAdd = `A${nRows + 10}`\n  const totalAdd = `F${nRows + 10}`\n\n\n  workSheet['!merges'] = [...workSheet['!merges'],\n                  {s: {r:nRows + 9, c:0}, e: {r: nRows + 9, c: 4}}]\n\n\n  //Informacion Tabla de datos\n  XLSX.utils.sheet_add_json(workSheet, summaryData(data), {origin: tableDataAdd});\n  XLSX.utils.sheet_add_aoa(workSheet, [['COSTO TOTAL']], {origin: totalTitleAdd});\n  XLSX.utils.sheet_add_aoa(workSheet, [[totalCost(data)]], {origin: totalAdd});\n\n\n\n  //encabezado tabla\n  workSheet[tableDataAdd].s = styles.tableHeader\n  workSheet[`B${tableDataRowAdd}`].s = {...styles.tableHeader, alignment: {horizontal: 'left', vertical: 'center'}}\n  workSheet[`C${tableDataRowAdd}`].s = styles.tableHeader\n  workSheet[`D${tableDataRowAdd}`].s = styles.tableHeader\n  workSheet[`E${tableDataRowAdd}`].s = styles.tableHeader\n  workSheet[`F${tableDataRowAdd}`].s = styles.tableHeader\n\n  var range = XLSX.utils.decode_range(workSheet['!ref']);\n\n  //celdas Tabla\n  for(var i = range.s.r + 9; i <= nRows + 9; ++i){\n    for(var j = range.s.c; j <= 5; ++j){\n      if(j < 2){\n        if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n        workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = {...styles.tableCell, alignment: {horizontal: 'left', vertical: 'center'}}\n      }\n      else if (j < 4 && j >= 2) {\n        if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n\n        workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = {...styles.tableCell, alignment: {horizontal: 'center', vertical: 'center'}}\n      }\n      else {\n        if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n\n        workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = styles.tableCell\n      }\n    }\n  }\n  //total tabla\n  workSheet[totalTitleAdd].s = styles.subTitle\n  workSheet[totalAdd].s = {...styles.subTitle, alignment: {horizontal:'right', vertical: 'center'}}\n\n\n  workSheet = setNumFormats(workSheet)\n\n\n  //Formulas\n  workSheet[totalAdd].z = '\"Q\"#,##0.00'\n  workSheet[totalAdd].f = `SUM(${XLSX.utils.encode_cell({r: 9, c: 5})}:${XLSX.utils.encode_cell({r: nRows + 8, c: 5})})`\n  workSheet[totalAdd].F =`${totalAdd}:${totalAdd}`\n\n\n\n  return setHeightRows(workSheet)\n}\n\n//RESUMEN DE MATERIALES\nconst materialsWS = async data => {\n  var workSheet = setWSHeader(data[0].budget, 'LISTADO DE MATERIALES')\n\n  const idRows = data.map(({id}) => id) //arreglo con el id de los renglones\n  const costs = await getCosts(await idRows)\n  const nRows = await costs.length //numero de filas en la tabla de datos\n\n  const {project, client, architect, name} = data[0].budget;\n\n\n  async function getCostsByRow(idRows){\n      let costs = Promise.all(idRows.map( async id => {\n          try {\n            const res = await api.get(`rows/${id}/mtlcosts`);\n            return res.data\n          } catch (err) {\n            console.log(err);\n          }\n        }))\n\n\n      return costs;\n  }\n\n\n  async function getCosts(idRows){\n    let costsByRow = await getCostsByRow(idRows);\n    let groupedCosts = await Object.values(underscore.groupBy(underscore.flatten(costsByRow), cost => cost.materialPrice.id));\n    return await groupedCosts.map(group => group.reduce((resume, cost) => {\n                                                    console.log('Costo en materiales export', cost);\n                                                    resume.name = cost.name\n                                                    resume.amount = resume.amount + cost.totalAmount\n                                                    resume.unit = cost.unit.symbol\n                                                    resume.price = cost.price\n                                                    resume.total = resume.total + cost.totalPrice\n                                                    resume.supplier = cost.materialPrice.supplier ? `${cost.materialPrice.supplier.name || ''}`: ''\n                                                    return resume\n                                                  } , {name: '', amount: 0, unit:'', price: '', total: 0, supplier: ''} ))\n  }\n\n  //direcciones de las celdas origen\n\n  const tableDataAdd = 'A9'\n  const tableDataRowAdd = '9'\n  const totalTitleAdd = `A${nRows + 10}`\n  const totalAdd = `F${nRows + 10}`\n\n  //Celdas compuestas\n   workSheet['!merges'] = [ {s: {r:0, c: 0}, e:{r:0, c:4}},\n                            {s: {r:0, c: 5}, e:{r:6, c:5}},\n                            {s: {r:7, c: 0}, e:{r:7, c:5}},\n                            {s: {r:nRows + 9, c:0}, e: {r: nRows + 9, c: 4}}]\n\n\n\n    //Informacion Tabla de datos\n    XLSX.utils.sheet_add_json(workSheet, materialsData(await costs), {origin: tableDataAdd});\n    XLSX.utils.sheet_add_aoa(workSheet, [['']], {origin: totalAdd});\n\n\n      // get worksheet range\n      var range = XLSX.utils.decode_range(workSheet['!ref']);\n\n      //Estilos de celdas\n      //information general\n      for (var i = 2; i < 8; i++) {\n        if(i % 2 == 0) {workSheet[`B${i}`].s = styles.tableCell\n          }else {\n            workSheet[`B${i}`].s = {...styles.tableCell, font: {name: 'Arial', sz: 12, bold: true}}\n          }\n      }\n      if(await costs.length > 0){\n        //encabezado tabla\n        workSheet[tableDataAdd].s = styles.tableHeader\n        workSheet[`B${tableDataRowAdd}`].s = {...styles.tableHeader, alignment: {horizontal: 'left', vertical: 'center'}}\n        workSheet[`C${tableDataRowAdd}`].s = styles.tableHeader\n        workSheet[`D${tableDataRowAdd}`].s = styles.tableHeader\n        workSheet[`E${tableDataRowAdd}`].s = styles.tableHeader\n        workSheet[`F${tableDataRowAdd}`].s = styles.tableHeader\n        workSheet[`G${tableDataRowAdd - 1}`].s = styles.supplierHeader\n        workSheet[`G${tableDataRowAdd}`].s = styles.supplierHeader\n\n\n\n\n      }\n\n      //celdas Tabla\n      for(var i = range.s.r + 9; i <= nRows + 9; ++i){\n        for(var j = range.s.c; j <= 6; ++j){\n          if(j < 2){\n            if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n            workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = {...styles.tableCell, alignment: {horizontal: 'left', vertical: 'center'}}\n          }\n          else if (j < 4 && j >= 2) {\n            if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n\n            workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = {...styles.tableCell, alignment: {horizontal: 'center', vertical: 'center'}}\n          }\n          else {\n            if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n\n            workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = styles.tableCell\n          }\n        }\n      }\n\n      //total tabla\n      if(await costs.length > 0){\n        XLSX.utils.sheet_add_aoa(workSheet, [['COSTO TOTAL']], {origin: totalTitleAdd});\n        //Formulas\n        workSheet[totalTitleAdd].s = styles.subTitle\n        //FORMULA DEL FINAL\n        workSheet[totalAdd].z = '\"Q\"#,##0.00'\n        workSheet[totalAdd].F =`${totalAdd}:${totalAdd}`\n        workSheet[totalAdd].f = `SUM(${XLSX.utils.encode_cell({r: 9, c: 5})}:${XLSX.utils.encode_cell({r: nRows + 8, c: 5})})`\n        workSheet[totalAdd].s = {...styles.subTitle, alignment: {horizontal:'right', vertical: 'center'}}\n      }\n\n  workSheet = setNumFormats(workSheet)\n\n  console.log('costos', await costs);\n  return setHeightRows(workSheet)\n}\n\n//PRESUPUESTO desglosado\nconst budgetWS = async rows => {\n  var workSheet = setWSHeader(rows[0].budget, 'PRESUPUESTO DESGLOSADO')\n\n  const data = await getData(await rows)\n  const nRows = await data.length //numero de filas en la tabla de datos\n  var activeRow = 9;\n\n  const {project, client, architect, name} = rows[0].budget;\n  const gtq = '\"Q\"#,##0.00'; // formato Q0.00 currency GTQ\n  const no = '#'; // formato 1 numeracion\n  const qt = '0.00'; // formato 0.00 quantity\n\n  async function addCosts(rows) {\n    let costs = Promise.all(rows.map( async row => {\n            try {\n              const materials = await api.get(`rows/${row.id}/mtlcosts`)\n              const workForce = await api.get(`rows/${row.id}/wfcosts`)\n              const indirect = await api.get(`rows/${row.id}/indcosts`);\n              return {...row, materialCosts: materials.data,\n                              workForceCosts: workForce.data,\n                              indirectCosts: indirect.data}\n            } catch (err) {\n              console.log(err);\n            }\n        }))\n\n\n    return costs;\n\n  }\n\n  async function getData(rows){\n    return await addCosts(rows)\n  }\n\n\n    if(!workSheet['!rows']) workSheet['!rows'] = [];\n\n    //Informacion Tabla de datos\n      data.forEach( async (row, idx) => {\n        //Encabezado del renglo\n        activeRow++\n\n        XLSX.utils.sheet_add_json(workSheet, rowData(row, idx), {origin: `A${activeRow++}`, skipHeader:true});\n        workSheet[`A${activeRow - 1}`].s = styles.tableHeader\n        workSheet[`A${activeRow - 1}`].z = no\n        workSheet[`B${activeRow - 1}`].s = {...styles.tableHeader, alignment: {horizontal: 'left', vertical: 'center'}}\n        workSheet[`C${activeRow - 1}`].s = styles.tableHeader\n        workSheet[`C${activeRow - 1}`].z = qt\n        workSheet[`D${activeRow - 1}`].s = styles.tableHeader\n        workSheet[`E${activeRow - 1}`].s = {...styles.tableHeader, alignment: {horizontal: 'right', vertical: 'center'}}\n        workSheet[`E${activeRow - 1}`].z = gtq\n        workSheet[`F${activeRow - 1}`].s = {...styles.tableHeader, alignment: {horizontal: 'right', vertical: 'center'}}\n        workSheet[`F${activeRow - 1}`].z = gtq\n\n\n\n\n        XLSX.utils.sheet_add_aoa(workSheet, [[\"\", \"DESCRIPCION\", \"CANTIDAD\", \"UNIDAD\", \"COSTO UNIT.\", \"COSTO TOTAL\"]], {origin: `A${activeRow++}`});\n        workSheet[`A${activeRow - 1}`].s = styles.tableHeader\n        workSheet[`B${activeRow - 1}`].s = {...styles.tableHeader, alignment: {horizontal: 'left', vertical: 'center'}}\n        workSheet[`C${activeRow - 1}`].s = styles.tableHeader\n        workSheet[`D${activeRow - 1}`].s = styles.tableHeader\n        workSheet[`E${activeRow - 1}`].s = styles.tableHeader\n        workSheet[`F${activeRow - 1}`].s = styles.tableHeader\n\n        if(row.materialCosts.length > 0){\n            XLSX.utils.sheet_add_aoa(workSheet, [[\"\", \"MATERIALES\", \"\", \"\", \"\", \"\"]], {origin: `A${activeRow++}`});\n            workSheet[`A${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`B${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`C${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`D${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`E${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`F${activeRow - 1}`].s = styles.tableSubTitle\n            XLSX.utils.sheet_add_json(workSheet, rowCostData(row.materialCosts), {origin: `A${activeRow}`, skipHeader:true});\n            for(var i = activeRow - 1; i < activeRow + row.materialCosts.length + 9; i++){\n              for(var j = 0; j <= 5; ++j){\n                if(j < 2){\n                  if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n                  workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = {...styles.tableCell, alignment: {horizontal: 'left', vertical: 'center'}}\n                }\n                else if (j < 4 && j >= 2) {\n                  if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n\n                  workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = {...styles.tableCell, alignment: {horizontal: 'center', vertical: 'center'}}\n                }\n                else {\n                  if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n\n                  workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = styles.tableCell\n                }\n              }\n            }\n\n            for (var i = activeRow - 1; i < activeRow + row.materialCosts.length + 9; i++) {\n              if(!workSheet[XLSX.utils.encode_cell({r: i, c: 2})]) continue;\n              workSheet[XLSX.utils.encode_cell({r: i , c: 2})].z = qt\n            }\n            activeRow += row.materialCosts.length\n\n\n            workSheet['!merges'] = [ ...workSheet['!merges'],\n                                   { s: {r:activeRow - 1, c: 1}, e:{r:activeRow - 1, c:4}}]\n            XLSX.utils.sheet_add_aoa(workSheet, [[\"\", \"Subtotal de materiales\", \"\", \"\", \"\", `${row.materialCost}`]], {origin: `A${activeRow++}`});\n            workSheet[`B${activeRow - 1}`].s = styles.groupTotal\n            workSheet[`F${activeRow - 1}`].s = {...styles.groupTotal, alignment: {horizontal: 'right', vertical: 'center'}}\n            workSheet[`F${activeRow - 1}`].t = 'n'\n            workSheet[`F${activeRow - 1}`].z = gtq\n\n\n        }\n\n\n        if(row.workForceCosts.length > 0){\n            XLSX.utils.sheet_add_aoa(workSheet, [[\"\", \"MANO DE OBRA\", \"\", \"\", \"\", \"\"]], {origin: `A${activeRow++}`});\n            workSheet[`A${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`B${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`C${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`D${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`E${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`F${activeRow - 1}`].s = styles.tableSubTitle\n            XLSX.utils.sheet_add_json(workSheet, rowCostData(row.workForceCosts), {origin: `A${activeRow}`, skipHeader:true});\n            for(var i = activeRow - 1; i < activeRow + row.workForceCosts.length + 9; i++){\n              for(var j = 0; j <= 5; ++j){\n                if(j < 2){\n                  if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n                  workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = {...styles.tableCell, alignment: {horizontal: 'left', vertical: 'center'}}\n                }\n                else if (j < 4 && j >= 2) {\n                  if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n\n                  workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = {...styles.tableCell, alignment: {horizontal: 'center', vertical: 'center'}}\n                }\n                else {\n                  if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n\n                  workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = styles.tableCell\n                }\n              }\n            }\n\n            for (var i = activeRow - 1; i < activeRow + row.workForceCosts.length + 9; i++) {\n              if(!workSheet[XLSX.utils.encode_cell({r: i, c: 2})]) continue;\n              workSheet[XLSX.utils.encode_cell({r: i , c: 2})].z = qt\n            }\n            activeRow += row.workForceCosts.length\n\n            workSheet['!merges'] = [ ...workSheet['!merges'],\n                                   { s: {r:activeRow - 1, c: 1}, e:{r:activeRow - 1, c:4}}]\n            XLSX.utils.sheet_add_aoa(workSheet, [[\"\", \"Subtotal de mano de obra\", \"\", \"\", \"\", `${row.workForceCost}`]], {origin: `A${activeRow++}`});\n            workSheet[`B${activeRow - 1}`].s = styles.groupTotal\n            workSheet[`F${activeRow - 1}`].s = {...styles.groupTotal, alignment: {horizontal: 'right', vertical: 'center'}}\n            workSheet[`F${activeRow - 1}`].t = 'n'\n            workSheet[`F${activeRow - 1}`].z = gtq\n\n\n        }\n\n\n        if(row.directCost){\n            workSheet['!merges'] = [ ...workSheet['!merges'],\n                                   { s: {r:activeRow - 1, c: 1}, e:{r:activeRow - 1, c:4}}]\n            XLSX.utils.sheet_add_aoa(workSheet, [[\"\", \"TOTAL COSTOS DIRECTOS\", \"\", \"\", \"\", `${row.directCost}`]], {origin: `A${activeRow++}`})\n            workSheet[`A${activeRow - 1}`].s = styles.rowSubTotal\n            workSheet[`B${activeRow - 1}`].s = styles.rowSubTotal\n            workSheet[`F${activeRow - 1}`].s = {...styles.rowSubTotal,  alignment: {horizontal: 'right', vertical: 'center'}}\n            workSheet[`F${activeRow - 1}`].t = 'n'\n            workSheet[`F${activeRow - 1}`].z = gtq\n\n          }\n\n        if(row.indirectCosts.length > 0){\n            XLSX.utils.sheet_add_aoa(workSheet, [[\"\", \"COSTOS INDIRECTOS\", \"\", \"\", \"\", \"\"]], {origin: `A${activeRow++}`});\n            workSheet[`A${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`B${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`C${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`D${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`E${activeRow - 1}`].s = styles.tableSubTitle\n            workSheet[`F${activeRow - 1}`].s = styles.tableSubTitle\n            XLSX.utils.sheet_add_json(workSheet, rowCostData(row.indirectCosts), {origin: `A${activeRow}`, skipHeader:true});\n            for(var i = activeRow - 1; i < activeRow + row.indirectCosts.length + 9; i++){\n              for(var j = 0; j <= 5; ++j){\n                if(j < 2){\n                  if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n                  workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = {...styles.tableCell, alignment: {horizontal: 'left', vertical: 'center'}}\n                }\n                else if (j < 4 && j >= 2) {\n                  if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n\n                  workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = {...styles.tableCell, alignment: {horizontal: 'center', vertical: 'center'}}\n                }\n                else {\n                  if(!workSheet[XLSX.utils.encode_cell({r: i, c: j})]) continue;\n\n                  workSheet[XLSX.utils.encode_cell({r: i, c: j})].s = styles.tableCell\n                }\n              }\n            }\n            for (var i = activeRow - 1; i < activeRow + row.indirectCosts.length + 9; i++) {\n              if(!workSheet[XLSX.utils.encode_cell({r: i, c: 2})]) continue;\n\n                workSheet[XLSX.utils.encode_cell({r: i , c: 2})].z = qt\n            }\n            activeRow += row.indirectCosts.length\n\n        }\n\n        workSheet['!merges'] = [ ...workSheet['!merges'],\n                               { s: {r:activeRow - 1, c: 1}, e:{r:activeRow - 1, c:4}}]\n\n        if(row.indirectCost) {\n            workSheet['!merges'] = [ ...workSheet['!merges'],\n                                   { s: {r:activeRow - 1, c: 1}, e:{r:activeRow - 1, c:4}}]\n            XLSX.utils.sheet_add_aoa(workSheet, [[\"\", \"TOTAL COSTOS INDIRECTOS\", \"\", \"\", \"\", `${row.indirectCost}`]], {origin: `A${activeRow++}`})\n                workSheet[`A${activeRow - 1}`].s = styles.rowSubTotal\n                workSheet[`B${activeRow - 1}`].s = styles.rowSubTotal\n                workSheet[`F${activeRow - 1}`].s = {...styles.rowSubTotal,  alignment: {horizontal: 'right', vertical: 'center'}}\n                workSheet[`F${activeRow - 1}`].t = 'n'\n                workSheet[`F${activeRow - 1}`].z = gtq\n\n        }\n\n\n           if(row.materialCosts.length !== 0 || row.workForceCosts.length !== 0 || row.indirectCosts.length !== 0){\n             workSheet['!merges'] = [ ...workSheet['!merges'],\n                                    { s: {r:activeRow - 1, c: 1}, e:{r:activeRow - 1, c:4}}]\n             XLSX.utils.sheet_add_aoa(workSheet, [[\"\", \"COSTO TOTAL RENGLON\", \"\", \"\", \"\", `${row.totalCost || 0}`]], {origin: `A${activeRow++}`});\n             workSheet[`A${activeRow - 1}`].s = styles.tableHeader\n             workSheet[`B${activeRow - 1}`].s = styles.tableHeader\n             workSheet[`F${activeRow - 1}`].t = 'n'\n             workSheet[`F${activeRow - 1}`].z = gtq\n             workSheet[`F${activeRow - 1}`].s = {...styles.tableHeader, alignment: {horizontal: 'right', vertical: 'center'}}\n\n           }\n\n\n\n\n\n    })\n\n  console.log('presupuesto desglosado', await data);\n\n  return setHeightRows(workSheet)\n\n\n\n}\n\n\n\n\n\nexport {summaryWS, materialsWS, budgetWS}\n","import React, {useState, useEffect} from 'react'\nimport { Grid, TextField, Typography } from \"@material-ui/core\";\nimport { Field } from \"formik\";\nimport {MenuItem, InputLabel, FormControl} from '@material-ui/core'\nimport { Select } from 'formik-material-ui';\nimport api from '../../api'\n\nconst PropField = ({url, propName, value, renderValue,\n                    errors, touched}) => {\n  const [mixProps, setMixProps] = useState([])\n\n  useEffect(() => {\n    api.get(url)\n    .then(response => {\n      setMixProps(response.data)\n    })\n    .catch(err => {\n    })\n  }, [])\n\n\n  return(\n    <Grid container spacing={3}>\n      <Grid item xs={12} md={12}>\n        <FormControl>\n          <InputLabel htmlFor=\"mix-prop\">{`Proporción volumétrica (${propName})`}</InputLabel>\n          <Field\n            component={Select}\n            disabled={mixProps.length === 0}\n            name=\"mixProp\"\n            defaultValue= {value ? value : null }\n            displayEmpty\n            renderValue={value => value ? <MenuItem value={value}>{renderValue(value)}</MenuItem> : ''}\n            inputProps={{\n              id: 'mix-prop',\n\n            }}\n          >\n            {mixProps.map(prop => <MenuItem value={prop}>{renderValue(prop)}</MenuItem>)}\n          </Field>\n          {errors[\"mixProp\"] && touched[\"mixProp\"] ? (\n            <div><Typography color='error' variant='caption'>{errors[\"mixProp\"]}</Typography></div>\n          ) : null}\n\n        </FormControl>\n      </Grid>\n    </Grid>\n\n  )\n}\n\nconst MorteroProp = ({value, errors, touched}) => (\n  <PropField url=\"morteros\" propName=\"Mortero\" value={value}\n             renderValue={value => `${value.propCement} cemento  -  ${value.propSand} arena`}\n             errors={errors} touched={touched}\n             />\n)\n\nconst ConcretoProp = ({value, errors, touched}) => (\n  <PropField url=\"concretos\" propName=\"Concreto\" value={value}\n             renderValue={value => `${value.propCement} cemento  -  ${value.propSand} arena - ${value.propGravel} piedrín (${value.kgPerSqrCm} \\u338F/\\u33A0)`}\n             errors={errors} touched={touched}\n             />\n)\n\n\n\nexport {MorteroProp, ConcretoProp}\n","import React, {useState, useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport api from '../../api'\n\n\nimport { Grid, TextField, Select } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { Field } from \"formik\";\nimport {Typography,  MenuItem, InputLabel, FormControl, InputAdornment, FormHelperText} from '@material-ui/core'\nimport SpecialPriceIcon from '@material-ui/icons/StarRateRounded';\n\nconst useStyles = makeStyles({\n  denseItem:{\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n});\n\nconst CostGroup = ({url,\n                      materialName, materialLabel,\n                      priceName, priceLabel,\n                      pctName, pctLabel,\n                      values, setFieldValue, errors, touched}) => {\n\n  const classes = useStyles()\n\n  const [materials, setMaterials] = useState([])\n  const [price, setPrice] = useState('')\n  const loading = materials.length === 0;\n\n  useEffect(()=>{console.log('price en effect', values[priceName]);\n    values[priceName] && setPrice(values[priceName])\n    console.log('valor de precio', price);\n\n}, [values[priceName]])\n\n  useEffect(() => {\n    if (!loading) {\n      return undefined;\n    }\n\n    api.get(`${url}`)\n    .then(response => {\n\n      setMaterials(response.data)\n\n\n    })\n    .catch(err => {\n\n    })\n  }, [])\n\n  return(\n\n    <Grid container spacing={3}>\n\n      <Grid item xs={12} sm={12} md={6}>\n        <Autocomplete\n          id={`material${materialLabel}`}\n          name={materialName}\n          options={materials}\n          value={values[materialName]}\n          loading={loading}\n          openOnFocus\n          onChange={(e, value) => {\n            setFieldValue(materialName, value);\n            setFieldValue(priceName, value ? {...value.prices.reduce((defaultPrice, currentPrice) => {\n                                                          return currentPrice.price > defaultPrice.price ? currentPrice : defaultPrice;},\n                                                         {id: '', material: {}, special: false, price: 0, supplier: {} })}\n                                            : null)\n            if(!value){\n              setPrice(null)\n            }\n\n          }}\n\n          getOptionLabel={option => option.name}\n          getOptionDisabled={option => option.prices.length <= 0}\n          renderInput={params => (\n            <TextField\n              {...params}\n              name={materialName}\n              label={materialLabel}\n              fullWidth\n            />\n          )}\n        />\n        {errors[materialName] && touched[materialName] ? (\n          <div><Typography color='error' variant='caption'>{errors[materialName]}</Typography></div>\n        ) : null}\n      </Grid>\n      <Grid item xs={12} sm={6} md={3}>\n        <FormControl className={classes.formControl}>\n          <InputLabel id={`${priceName}-label`}>{priceLabel}</InputLabel>\n          <Select\n             labelId={`${priceName}-label`}\n             disabled={!values[materialName] || !values[materialName].prices|| values[materialName].prices.length === 0}\n             id=\"demo-simple-select\"\n             value={price}\n             onChange={(evt, child) => setPrice(evt.target.value)}\n             defaultValue= {values[priceName] ? values[priceName] : null }\n             renderValue={value => value && value.price ? <MenuItem dense className={classes.denseItem} value={value}>\n                                            {value.special &&\n                                                <SpecialPriceIcon color='secondary' fontSize=\"small\" />\n                                              }\n                                             {value.price && new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(value.price)}\n                                            </MenuItem>\n                                          : null}\n            displayEmpty\n            >\n             {values[materialName] && values[materialName].prices.map(cementPrice => <MenuItem key={cementPrice.id} value={cementPrice}>\n                 {cementPrice.special &&\n                     <SpecialPriceIcon color='secondary' fontSize=\"small\" />}\n                 {cementPrice.price ?\n                    new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(cementPrice.price) : ''}\n               </MenuItem>)}\n           </Select>\n           {errors[priceName] && touched[priceName] ? (\n             <div><Typography color='error' variant='caption'>{errors[priceName]}</Typography></div>\n           ) : null}\n        </FormControl>\n      </Grid>\n\n      <Grid item xs={12} sm={6} md={3}>\n          <Field\n          component={TextField}\n           name={pctName}\n           type=\"number\"\n           label={pctLabel}\n           value={values[pctName]}\n           onChange={e => setFieldValue(pctName, e.target.value)}\n           inputProps={{\n             min: 0, max: 100,\n\n           }}\n           InputProps={{\n             endAdornment: (\n               <InputAdornment position=\"end\">\n                 %\n               </InputAdornment>\n             ),\n           }}\n         />\n         {<FormHelperText id={`${pctName}-helper-text`}>{`Opcional`}</FormHelperText>}\n         {errors[pctName] && touched[pctName] ? (\n           <div><Typography color='error' variant='caption'>{errors[pctName]}</Typography></div>\n         ) : null}\n      </Grid>\n    </Grid>\n\n  )\n\n}\n\n\nconst CementCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='cements'\n               materialName='cement' materialLabel='Cemento'\n               priceName='cementPrice' priceLabel='Precio de Cemento'\n               pctName='cementWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst SandCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='sands'\n               materialName='sand' materialLabel='Arena'\n               priceName='sandPrice' priceLabel='Precio de Arena'\n               pctName='sandWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst GravelCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='gravels'\n               materialName='gravel' materialLabel='Piedrín'\n               priceName='gravelPrice' priceLabel='Precio de Piedrín'\n               pctName='gravelWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst IronCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='irons'\n               materialName='iron' materialLabel='Hierro'\n               priceName='ironPrice' priceLabel='Precio de Hierro'\n               pctName='ironWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst LongIronCost = ({label, values, setFieldValue, errors, touched}) => (\n  <CostGroup url='irons'\n               materialName='longIron' materialLabel={label ? label : 'Hierro Longitudinal'}\n               priceName='longIronPrice' priceLabel='Precio de Hierro'\n               pctName='longIronWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst LongIronAuxCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='irons'\n               materialName='longIronAux' materialLabel='Hierro Longitudinal Auxiliar'\n               priceName='longIronAuxPrice' priceLabel='Precio de Hierro'\n               pctName='longIronAuxWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst TransIronCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='irons'\n               materialName='transIron' materialLabel='Hierro Transversal'\n               priceName='transIronPrice' priceLabel='Precio de Hierro'\n               pctName='transIronWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst TieWireCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='tiewires'\n               materialName='tieWire' materialLabel='Alambre de Amarre'\n               priceName='tieWirePrice' priceLabel='Precio de Alambre'\n               pctName='tieWireWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst BlockCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='blocks'\n               materialName='block' materialLabel='Block'\n               priceName='blockPrice' priceLabel='Precio de Block'\n               pctName='blockWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst PreMixCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='premixes'\n               materialName='preMix' materialLabel='Recubrimiento Premezclado'\n               priceName='preMixPrice' priceLabel='Precio de Recubrimiento'\n               pctName='preMixnWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst WallPaintCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='paints'\n               materialName='wallPaint' materialLabel='Pintura para Paredes'\n               priceName='wallPaintPrice' priceLabel='Precio de Pintura'\n               pctName='wallPaintWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\nconst CeilPaintCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='paints'\n               materialName='ceilPaint' materialLabel='Pintura para Cielos'\n               priceName='ceilPaintPrice' priceLabel='Precio de Pintura'\n               pctName='ceilPaintWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\n\nconst ElectromallaCost = ({values, setFieldValue, errors, touched}) => (\n  <CostGroup url='electromallas'\n               materialName='electromalla' materialLabel='Electromalla'\n               priceName='electromallaPrice' priceLabel='Precio de electromalla'\n               pctName='electromallaWastePct' pctLabel='Pct. de Desperdicio'\n               values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n)\n\n\nexport {CementCost, SandCost, GravelCost,\n        IronCost, LongIronCost, LongIronAuxCost, TransIronCost,\n        TieWireCost, BlockCost, PreMixCost, WallPaintCost, CeilPaintCost,\n        ElectromallaCost}\n","import React, {Fragment} from \"react\";\nimport * as Yup from 'yup';\n\nimport { Grid } from '@material-ui/core'\n\nimport {CementCost, SandCost, GravelCost,\n        IronCost, LongIronCost, LongIronAuxCost, TransIronCost,\n        TieWireCost, PreMixCost, BlockCost} from './costFields'\n\n//Costos completos\nimport {ConcretoProp, MorteroProp} from './propFields'\n\n\nimport {NameField, LinearMeterField, QuantityField,\n        SquareMeterField, PercentageField, BooleanField,\n        VolumeFields} from '../inputFields'\n\nimport {name, amount, length, width, height, area, profitPct,\n        cantLongsElems, cantLongsAuxElems, cantTransElems,\n        recubrimiento, separacion, junta,\n        longHook, longPata,\n        propTension, estribosDouble,\n        mixProp,\n        cement, cementPrice, cementWastePct,\n        sand, sandPrice, sandWastePct,\n        gravel, gravelPrice, gravelWastePct,\n        iron, ironPrice, ironWastePct,\n        longIron, longIronPrice, longIronWastePct,\n        longIronAux, longIronAuxPrice, longIronAuxWastePct,\n        transIron, transIronPrice, transIronWastePct,\n        tieWire, tieWirePrice, tieWireWastePct,\n        block, blockPrice, blockWastePct} from '../schemas'\n\n        //Schemas y form groups\n\n        const concretoGroup = [\n            { mixProp,\n              cement,\n              cementPrice,\n              cementWastePct,\n              sand,\n              sandPrice,\n              sandWastePct,\n              gravel,\n              gravelPrice,\n              gravelWastePct\n            },\n            ({values, setFieldValue, errors, touched}) => (\n               <Fragment>\n                 <ConcretoProp errors={errors} touched={touched} values={values}/>\n                 <CementCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 <SandCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 <GravelCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n               </Fragment>)\n        ]\n\n        const morteroGroup = [\n            { mixProp,\n              cement,\n              cementPrice,\n              cementWastePct,\n              sand,\n              sandPrice,\n            },\n            ({values, setFieldValue, errors, touched}) => (\n                <Fragment>\n                  <MorteroProp errors={errors} touched={touched} value={values.mixProp}/>\n                  <CementCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                  <SandCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                </Fragment>)\n        ]\n\n        const frameIronGroup = [\n            { iron,\n              ironPrice,\n              ironWastePct,\n              tieWire,\n              tieWirePrice,\n              tieWireWastePct,\n            },\n            ({values, setFieldValue, errors, touched}) => (\n               <Fragment>\n                 <IronCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 <TieWireCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n               </Fragment>\n             )\n         ]\n\n        const frameBiIronGroup = [\n            { longIron,\n              longIronPrice,\n              longIronWastePct,\n              transIron,\n              transIronPrice,\n              transIronWastePct,\n              tieWire,\n              tieWirePrice,\n              tieWireWastePct,\n            },\n           ({values, setFieldValue, errors, touched}) => (\n             <Fragment>\n               <LongIronCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n               <TransIronCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n               <TieWireCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Fragment>\n           )\n        ]\n\n        const frameTriIronGroup = [\n            { longIron,\n              longIronPrice,\n              longIronWastePct,\n              longIronAux,\n              longIronAuxPrice,\n              longIronWastePct,\n              transIron,\n              transIronPrice,\n              transIronWastePct,\n              tieWire,\n              tieWirePrice,\n              tieWireWastePct,\n            },\n            ({values, setFieldValue, errors, touched}) => (\n            <Fragment>\n              <LongIronCost label='Hierro Longitudinal Esquinas' values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n              <LongIronAuxCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n              <TransIronCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n              <TieWireCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n            </Fragment>\n          )\n        ]\n\n        const areaVolGroup = [\n            {name, profitPct, height, area},\n            ({values, setFieldValue, errors, touched}) => (\n              <Grid container spacing={3}>\n                  <Grid item xs={12} sm={9}>\n                      <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n                  </Grid>\n                  <Grid item xs={12} sm={3}>\n                    <PercentageField name=\"profitPct\" label=\"Pct. de Utilidad\" value={values.profitPct}\n                     setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                      <SquareMeterField name=\"area\" label=\"Area\" value={values.area} setFieldValue={setFieldValue}\n                        errors={errors} touched={touched}/>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                      <LinearMeterField name=\"height\" label=\"Espesor\" value={values.height} setFieldValue={setFieldValue}\n                       errors={errors} touched={touched}/>\n                  </Grid>\n              </Grid>\n            )\n        ]\n\n        const transMeterGroup = [\n            { name,\n              profitPct,\n              length,\n              width,\n              height,\n              recubrimiento,\n              cantLongsElems,\n              separacion,\n              longHook},\n            ({values, setFieldValue,  errors, touched}) => (\n            <Grid container spacing={3}>\n               <Grid item xs={12} sm={8}>\n                  <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n               </Grid>\n               <Grid item xs={12} sm={4}>\n                 <PercentageField name=\"profitPct\" label=\"Pct. de Utilidad\" value={values.profitPct}\n                  setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n               </Grid>\n               <Grid item xs={12}>\n                  <VolumeFields heightLabel=\"Peralte\"/>\n               </Grid>\n               <Grid item xs={12} sm={6}>\n                 <LinearMeterField name=\"recubrimiento\" label=\"Recubrimiento\" value={values.recubrimiento}\n                 setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n               </Grid>\n               <Grid item xs={12} sm={6}>\n                 <QuantityField name=\"cantLongsElems\" label=\"Cantidad elementos longitudinales\"\n                 value={values.cantLongsElems} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n               </Grid>\n               <Grid item xs={12} sm={6}>\n                 <LinearMeterField name=\"separacion\" label=\"Separacion Estribos\"\n                 value={values.separacion} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n               </Grid>\n               <Grid item xs={12} sm={6}>\n                 <LinearMeterField name=\"longHook\" label=\"Largo Gancho\"\n                   value={values.longHook} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n               </Grid>\n             </Grid>\n           )\n        ]\n\n        const transQuantityGroup = [\n            { name,\n              profitPct,\n              amount,\n              length,\n              width,\n              height,\n              recubrimiento,\n              cantLongsElems,\n              separacion,\n              longHook,\n              longPata},\n            ({values, setFieldValue, errors, touched}) => (\n               <Grid container spacing={3}>\n                 <Grid item xs={12} sm={8}>\n                    <NameField value={values.name} setFieldValue={setFieldValue}\n                    errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={2}>\n                    <QuantityField name=\"amount\" label=\"Cantidad\" value={values.amount}\n                    setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={2}>\n                   <PercentageField name=\"profitPct\" label=\"Pct. Utilidad\" value={values.profitPct}\n                    setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n                 </Grid>\n                 <Grid item xs={12}>\n                    <VolumeFields lengthLabel='Altura' heightLabel='Largo'/>\n                 </Grid>\n                 <Grid item xs={12} sm={12} md={4}>\n                   <QuantityField name=\"cantLongsElems\" label=\"Cantidad elementos longitudinales\"\n                   value={values.cantLongsElems} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6} md={4}>\n                   <LinearMeterField name=\"longPata\" label=\"Largo Patas\"\n                   value={values.longPata} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6} md={4}>\n                   <LinearMeterField name=\"longHook\" label=\"Largo Gancho\"\n                     value={values.longHook} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6}>\n                   <LinearMeterField name=\"separacion\" label=\"Separacion Estribos\"\n                   value={values.separacion} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6}>\n                   <LinearMeterField name=\"recubrimiento\" label=\"Recubrimiento\" value={values.recubrimiento}\n                   setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n               </Grid>\n             )\n        ]\n\n        const zapataGroup = [\n            { name,\n              profitPct,\n              amount,\n              length,\n              width,\n              height,\n              recubrimiento,\n              cantLongsElems,\n              cantTransElems},\n            ({values, setFieldValue, errors, touched}) => (\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={8}>\n                 <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                 <QuantityField name=\"amount\" label=\"Cantidad\" value={values.amount} setFieldValue={setFieldValue}\n                 errors={errors} touched={touched}/>\n              </Grid>\n              <Grid item xs={12} sm={2}>\n                <PercentageField name=\"profitPct\" label=\"Pct. Utilidad\" value={values.profitPct}\n                 setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n              </Grid>\n              <Grid item xs={12}>\n                <VolumeFields errors={errors} touched={touched} heightLabel='Peralte'/>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <LinearMeterField name=\"recubrimiento\" label=\"Recubrimiento\" value={values.recubrimiento} setFieldValue={setFieldValue}\n                errors={errors} touched={touched}/>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <QuantityField name=\"cantLongsElems\" label=\"Cantidad elementos longitudinales\"\n                value={values.cantLongsElems} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n              </Grid>\n              <Grid item xs={12} sm={4}>\n                <QuantityField name=\"cantTransElems\" label=\"Cantidad elementos transversales\"\n                value={values.cantTransElems} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n              </Grid>\n            </Grid>\n          )\n        ]\n\n        const losaPlanaGroup = [\n            { name,\n              profitPct,\n              area,\n              height,\n              separacion,\n              propTension,},\n            ({values, setFieldValue, errors, touched}) => (\n              <Grid container spacing={3}>\n                 <Grid item xs={12} sm={9}>\n                    <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={3}>\n                   <PercentageField name=\"profitPct\" label=\"Pct. de Utilidad\" value={values.profitPct}\n                    setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6}>\n                   <SquareMeterField name=\"area\" label=\"Area\" value={values.area} setFieldValue={setFieldValue}\n                   errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6}>\n                   <LinearMeterField name=\"height\" label=\"Peralte\"\n                   value={values.height} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6}>\n                   <LinearMeterField name=\"separacion\" label=\"Separacion\" value={values.separacion} setFieldValue={setFieldValue}\n                   errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6}>\n                   <PercentageField name=\"propTension\" label=\"Longitud extra en Tensión\"\n                   value={values.propTension} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n               </Grid>\n               )\n        ]\n\n        const losaInclinadaGroup = [\n            { name,\n              profitPct,\n              area,\n              height,\n              separacion},\n            ({values, setFieldValue, errors, touched}) => (\n              <Grid container spacing={3}>\n                  <Grid item xs={12} sm={8}>\n                     <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <PercentageField name=\"profitPct\" label=\"Pct. de Utilidad\" value={values.profitPct}\n                     setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <SquareMeterField name=\"area\" label=\"Area\" value={values.area}\n                    setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <LinearMeterField name=\"height\" label=\"Peralte\"\n                    value={values.height} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                  </Grid>\n                  <Grid item xs={12} sm={4}>\n                    <LinearMeterField name=\"separacion\" label=\"Separacion\" value={values.separacion}\n                    setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                  </Grid>\n              </Grid>\n              )\n        ]\n\n        const muroGroup = [\n            { name,\n              profitPct,\n              area,\n              junta,\n              block,\n              blockPrice,\n              blockWastePct\n            },\n            ({values, setFieldValue, errors, touched}) => (\n              <Grid container spacing={3}>\n                 <Grid item xs={12} sm={9}>\n                   <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={3}>\n                   <PercentageField name=\"profitPct\" label=\"Pct. de Utilidad\" value={values.profitPct}\n                    setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6}>\n                   <SquareMeterField name=\"area\" label=\"Area\" value={values.area}\n                    setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6}>\n                   <LinearMeterField name=\"junta\" label=\"Junta\" value={values.junta}\n                     setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12}>\n                   <BlockCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n             </Grid>\n             )\n        ]\n\n        const columnaEspecialGroup = [\n            {\n              name,\n              profitPct,\n              amount,\n              length,\n              width,\n              height,\n              estribosDouble,\n              recubrimiento,\n              cantLongsElems,\n              cantLongsAuxElems,\n              separacion,\n              longHook,\n              longPata\n            },\n            ({values, setFieldValue, errors, touched}) => (\n              <Grid container spacing={3}>\n                <Grid item xs={12} sm={8}>\n                   <NameField value={values.name} setFieldValue={setFieldValue}\n                   errors={errors} touched={touched}/>\n                </Grid>\n                <Grid item xs={12} sm={2}>\n                   <QuantityField name=\"amount\" label=\"Cantidad\" value={values.amount}\n                   setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                </Grid>\n                <Grid item xs={12} sm={2}>\n                  <PercentageField name=\"profitPct\" label=\"Pct. Utilidad\" value={values.profitPct}\n                   setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n                </Grid>\n                <Grid item xs={12}>\n                <VolumeFields lengthLabel='Altura' heightLabel='Largo'/>\n                </Grid>\n                 <Grid item xs={12} sm={6}>\n                   <QuantityField name=\"cantLongsElems\" label=\"Cantidad Elementos Esquinas\"\n                   value={values.cantLongsElems} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                 <Grid item xs={12} sm={6}>\n                   <QuantityField name=\"cantLongsAuxElems\" label=\"Cantidad Elementos Auxiliares\"\n                   value={values.cantLongsAuxElems} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                 </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <LinearMeterField name=\"longPata\" label=\"Largo Patas\"\n                    value={values.longPata} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <LinearMeterField name=\"longHook\" label=\"Largo Gancho\"\n                      value={values.longHook} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <LinearMeterField name=\"separacion\" label=\"Separacion Estribos\"\n                    value={values.separacion} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <LinearMeterField name=\"recubrimiento\" label=\"Recubrimiento\" value={values.recubrimiento}\n                    setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n                  </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={3}>\n                    <BooleanField name=\"estribosDouble\" label=\"Estribos dobles\"/>\n                  </Grid>\n                </Grid>\n              </Grid>\n              )\n        ]\n\n\nexport {concretoGroup, morteroGroup, frameIronGroup,\n        frameBiIronGroup,frameTriIronGroup,\n        areaVolGroup, transMeterGroup, transQuantityGroup,\n        zapataGroup, losaPlanaGroup, losaInclinadaGroup, muroGroup,\n        columnaEspecialGroup}\n","import React, {useState, useEffect, Fragment} from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport ReactDOM from \"react-dom\";\nimport columnImg from '../../imgs/columna.png';\nimport HelpImg from '../partials/HelpImg'\nimport { Grid, TextField, CircularProgress } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from 'yup';\n\nimport {Dialog, DialogActions, DialogContent, DialogContentText,\n        Button, LinearProgress,Typography,  MenuItem, InputLabel, FormControl,\n        InputAdornment} from '@material-ui/core'\nimport DialogTitle from '../partials/DialogTitle'\n\nimport {Stepper, Step, StepLabel, StepContent, Select} from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\n\nimport {NameField, LinearMeterField, QuantityField,\n        SquareMeterField, PercentageField, BooleanField} from '../inputFields'\n\n\nimport {ConcretoProp, MorteroProp} from './propFields'\n\nimport {name, area, junta, wallArea, ceilArea, unitAmount, unit, profitPct} from '../schemas'\n\nimport {concretoGroup, morteroGroup, frameIronGroup, frameBiIronGroup,\n        areaVolGroup, transMeterGroup, transQuantityGroup, columnaEspecialGroup,\n        zapataGroup, losaPlanaGroup, losaInclinadaGroup} from './formGroups'\n\n\n\nimport api from '../../api'\n\nconst [transQuantitySchema, TransQuantityForm] = transQuantityGroup\nconst [zapataSchema, ZapataFormGroup] = zapataGroup\nconst [losaPlanaSchema, LosaPlanaSpecsForm] = losaPlanaGroup\nconst [losaInclinadaSchema, LosaInclinadaSpecsForm] = losaInclinadaGroup\nconst [transMeterSchema, TransMeterForm] = transMeterGroup\nconst [areaVolSchema, AreaVolForm] = areaVolGroup\nconst [columnaEspecialSchema, ColumnaEspecialSpecsForm] = columnaEspecialGroup\n\n\n\nconst TitleIcon = () => <DonutLargeIcon fontSize='large' color='primary' />\n\n\nconst UpdateForm = React.memo(({apiId, budgetId,\n                     FormRow, title, formData,\n                     validationSchema, open, closeModal,\n                     rowData,  refreshRow,\n                     maxWidth}) => {\n\n  const url= `budgets/${budgetId}/${apiId}`\n\n  const [serverState, setServerState] = useState();\n\n\n  const handleServerResponse = (ok, msg) => {\n    setServerState({ok, msg});\n  };\n  const handleOnSubmit = (values, {setSubmitting, resetForm}) => {\n        api.put(`${url}/${formData.id}`, {...values})\n          .then(response => {\n            setSubmitting(false);\n            refreshRow(`${url}/${formData.id}`, rowData);\n            handleServerResponse(true, \"\");\n            closeModal()\n          })\n          .catch(error => {\n            setSubmitting(false);\n            handleServerResponse(false, \"Ocurrio un error\");\n          });\n  };\n\n\n  return (\n\n    <Dialog maxWidth={maxWidth || 'md'} fullWidth open={open} onClose={() => closeModal} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle onClose={closeModal}>\n        <Stepper alternativeLabel>\n            <Step key={`${title}`}>\n              <StepLabel StepIconComponent={TitleIcon}> {`Actualizar especificaciones de ${title}`}</StepLabel>\n            </Step>\n        </Stepper>\n        </DialogTitle>\n        <Formik\n\n          enableReinitialize\n          initialValues={{\n            ...formData}}\n          validationSchema={Yup.object().shape({...validationSchema})}\n\n          onSubmit={handleOnSubmit}\n\n        >\n          {({ submitForm, isSubmitting, setFieldValue, values, errors, touched }) => (\n            <Form autoComplete=\"off\">\n              <DialogContent dividers>\n\n                <FormRow values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n\n              {isSubmitting && <LinearProgress />}\n              <br />\n              </DialogContent>\n              <DialogActions>\n\n                  <Button\n                   color=\"inherit\"\n                   onClick={closeModal}>\n                      Cancelar\n                   </Button>\n\n\n\n               <Button\n                 startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : null}\n                 disabled={isSubmitting}\n                 variant=\"contained\"\n                 color=\"primary\"\n                 type=\"submit\"\n                 onClick={submitForm}\n               >\n                 {isSubmitting ? 'Enviando' : 'Actualizar' }\n               </Button>\n\n\n              </DialogActions>\n              {serverState && (\n                <p className={!serverState.ok ? \"errorMsg\" : \"\"}>\n                  {serverState.msg}\n                </p>\n              )}\n            </Form>\n          )}\n        </Formik>\n\n        </Dialog>\n\n  );\n})\n\nconst ZapataForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [zapata, setZapata] = useState({})\n  const apiId = 'zapatas'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setZapata(res.data))\n    .catch(err => {})\n  }, [open])\n\n  const Form = ({values, setFieldValue, errors, touched}) => (\n        <Fragment>\n          <ZapataFormGroup values={values} setFieldValue={setFieldValue}\n            errors={errors} touched={touched}/>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <ConcretoProp errors={errors} touched={touched} value={zapata.mixProp}/>\n            </Grid>\n          </Grid>\n        </Fragment>\n    )\n\n\n  return(\n    <UpdateForm apiId={apiId} title=\"Zapata\"\n      FormRow={Form} formData={zapata} validationSchema={zapataSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst LosaPlanaForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [losa, setLosa] = useState({})\n  const apiId = 'losasplanas'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setLosa(res.data))\n    .catch(err => {})\n  }, [open])\n\n  const Form = ({values, setFieldValue, errors, touched}) => (\n        <Fragment>\n          <LosaPlanaSpecsForm values={values} setFieldValue={setFieldValue}\n            errors={errors} touched={touched}/>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <ConcretoProp errors={errors} touched={touched} value={losa.mixProp}/>\n            </Grid>\n          </Grid>\n        </Fragment>\n    )\n\n\n  return(\n    <UpdateForm apiId={apiId} title=\"Zapata\"\n      FormRow={Form} formData={losa} validationSchema={losaPlanaSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst LosaInclinadaForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [losa, setLosa] = useState({})\n  const apiId = 'losas'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setLosa(res.data))\n    .catch(err => {})\n  }, [open])\n\n  const Form = ({values, setFieldValue, errors, touched}) => (\n        <Fragment>\n          <LosaInclinadaSpecsForm values={values} setFieldValue={setFieldValue}\n            errors={errors} touched={touched}/>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <ConcretoProp errors={errors} touched={touched} value={losa.mixProp}/>\n            </Grid>\n          </Grid>\n        </Fragment>\n    )\n\n\n  return(\n    <UpdateForm apiId={apiId} title=\"Zapata\"\n      FormRow={Form} formData={losa} validationSchema={losaInclinadaSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst CimientoCorridoForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [cimiento, setCimiento] = useState({})\n  const apiId = 'cimcorridos'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setCimiento(res.data))\n    .catch(err => {})\n  }, [open])\n\n  const Form = ({values, setFieldValue, errors, touched}) => (\n        <Fragment>\n          <TransMeterForm values={values} setFieldValue={setFieldValue}\n            errors={errors} touched={touched}/>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <ConcretoProp errors={errors} touched={touched} value={cimiento.mixProp}/>\n            </Grid>\n          </Grid>\n        </Fragment>\n    )\n\n\n  return(\n    <UpdateForm apiId={apiId} title=\"Cimiento Corrido\"\n      FormRow={Form} formData={cimiento} validationSchema={transMeterSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst SoleraForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [solera, setSolera] = useState({})\n  const apiId = 'soleras'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setSolera(res.data))\n    .catch(err => {})\n  }, [open])\n\n  const Form = ({values, setFieldValue, errors, touched}) => (\n        <Fragment>\n          <TransMeterForm values={values} setFieldValue={setFieldValue}\n            errors={errors} touched={touched}/>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n                <ConcretoProp errors={errors} touched={touched} value={solera.mixProp}/>\n            </Grid>\n          </Grid>\n        </Fragment>\n    )\n\n\n  return(\n    <UpdateForm apiId={apiId} title=\"Solera\"\n      FormRow={Form} formData={solera} validationSchema={transMeterSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst ColumnaForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [columna, setColumna] = useState({})\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/columnas/${rowId}`)\n    .then(res => setColumna(res.data))\n    .catch(err => {})\n  }, [open])\n\n\n\n\n\n  const Form = ({values, setFieldValue, errors, touched}) => {\n    return (\n            <Grid container alignItems=\"center\">\n              <Grid item xs={3}>\n                 <HelpImg image={columnImg}/>\n              </Grid>\n              <Grid item xs={9}>\n                  <TransQuantityForm values={values} setFieldValue={setFieldValue}\n                    errors={errors} touched={touched}/>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                        <ConcretoProp errors={errors} touched={touched} value={columna.mixProp}/>\n                    </Grid>\n                  </Grid>\n              </Grid>\n            </Grid>\n\n    )\n  }\n  return(\n    <UpdateForm apiId=\"columnas\" title=\"Columna\"\n      FormRow={Form} formData={columna} validationSchema={transQuantitySchema}\n      budgetId={budgetId} open={open} closeModal={closeModal} maxWidth='lg'\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst ColumnaEspecialForm = ({open, closeModal, rowData, refreshRow}) => {\n\n  const [columna, setColumna] = useState({})\n  const apiId = 'columnasespeciales'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setColumna(res.data))\n    .catch(err => {})\n  }, [open])\n\n  const Form = ({values, setFieldValue, errors, touched}) => {\n    return (\n      <Grid container alignItems=\"center\">\n        <Grid constainer spacing={3} xs={12} sm={3}>\n           <HelpImg image={columnImg}/>\n        </Grid>\n\n        <Grid container spacing={3} xs={12} sm={9}>\n          <ColumnaEspecialSpecsForm values={values} setFieldValue={setFieldValue}\n            errors={errors} touched={touched}/>\n            <Grid item xs={12} md={12}>\n                <ConcretoProp errors={errors} touched={touched} value={columna.mixProp}/>\n            </Grid>\n        </Grid>\n      </Grid>\n    )\n  }\n  return(\n    <UpdateForm apiId={apiId} title=\"Columna Especial\"\n      FormRow={Form} formData={columna} validationSchema={columnaEspecialSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal} maxWidth='lg'\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst MuroForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [muro, setMuro] = useState({})\n  const apiId = 'muros'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setMuro(res.data))\n    .catch(err => {})\n  }, [open])\n\n  const formSchema = {name, profitPct, area, junta}\n  const Form = ({values, setFieldValue, errors, touched}) => {\n    return (\n         <Fragment>\n           <Grid container spacing={3}>\n             <Grid item xs={12} sm={9}>\n               <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={12} sm={3}>\n               <PercentageField name=\"profitPct\" label=\"Pct. de Utilidad\" value={values.profitPct}\n                setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n             </Grid>\n           </Grid>\n           <Grid container spacing={3}>\n             <Grid item xs={6}>\n               <SquareMeterField name=\"area\" label=\"Area\" value={values.area}\n                setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={6}>\n               <LinearMeterField name=\"junta\" label=\"Junta\" value={values.junta}\n                 setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n           </Grid>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                  <MorteroProp errors={errors} touched={touched} value={muro.mixProp}/>\n              </Grid>\n            </Grid>\n          </Fragment>\n    )\n  }\n  return(\n    <UpdateForm apiId={apiId} title=\"Muro\"\n      FormRow={Form} formData={muro} validationSchema={formSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst MezclonMorteroForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [mezclon, setMezclon] = useState({})\n  const apiId = 'mezclones'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setMezclon(res.data))\n    .catch(err => {})\n  }, [open])\n\n\n  const Form = ({values, setFieldValue, errors, touched}) => {\n    return (\n         <Fragment>\n            <AreaVolForm values={values} setFieldValue={setFieldValue}\n              errors={errors} touched={touched}/>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                  <MorteroProp errors={errors} touched={touched} value={mezclon.mixProp}/>\n              </Grid>\n            </Grid>\n          </Fragment>\n    )\n  }\n  return(\n    <UpdateForm apiId={apiId} title=\"Mezclón de Mortero\"\n      FormRow={Form} formData={mezclon} validationSchema={areaVolSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst MezclonConcretoForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [mezclon, setMezclon] = useState({})\n  const apiId = 'concmezclones'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setMezclon(res.data))\n    .catch(err => {})\n  }, [open])\n\n\n  const Form = ({values, setFieldValue, errors, touched}) => {\n    return (\n         <Fragment>\n            <AreaVolForm values={values} setFieldValue={setFieldValue}\n              errors={errors} touched={touched}/>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                  <ConcretoProp errors={errors} touched={touched} value={mezclon.mixProp}/>\n              </Grid>\n            </Grid>\n          </Fragment>\n    )\n  }\n  return(\n    <UpdateForm apiId={apiId} title=\"Mezclón de Concreto\"\n      FormRow={Form} formData={mezclon} validationSchema={areaVolSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst MezclonExtForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [mezclon, setMezclon] = useState({})\n  const apiId = 'extmezclones'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setMezclon(res.data))\n    .catch(err => {})\n  }, [open])\n\n\n  const Form = ({values, setFieldValue, errors, touched}) => {\n    return (\n         <Fragment>\n            <AreaVolForm values={values} setFieldValue={setFieldValue}\n              errors={errors} touched={touched}/>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                  <ConcretoProp errors={errors} touched={touched} value={mezclon.mixProp}/>\n              </Grid>\n            </Grid>\n          </Fragment>\n    )\n  }\n  return(\n    <UpdateForm apiId={apiId} title=\"Concreteado de Garage y Banquetas\"\n      FormRow={Form} formData={mezclon} validationSchema={areaVolSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst RepelloForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [repello, setRepello] = useState({})\n  const apiId = 'repellos'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setRepello(res.data))\n    .catch(err => {})\n  }, [open])\n\n\n  const Form = ({values, setFieldValue, errors, touched}) => {\n    return (\n         <Fragment>\n            <AreaVolForm values={values} setFieldValue={setFieldValue}\n              errors={errors} touched={touched}/>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                  <MorteroProp errors={errors} touched={touched} value={repello.mixProp}/>\n              </Grid>\n            </Grid>\n          </Fragment>\n    )\n  }\n  return(\n    <UpdateForm apiId={apiId} title=\"Repello y Cernido\"\n      FormRow={Form} formData={repello} validationSchema={areaVolSchema}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\nconst PinturaForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [pintura, setPintura] = useState({})\n  const apiId = 'pinturas'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => setPintura(res.data))\n    .catch(err => {})\n  }, [open])\n\n\n  const Form = ({values, setFieldValue, errors, touched}) => (\n     <Fragment>\n       <Grid container spacing={4}>\n         <Grid item xs={12} sm={9}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n         </Grid>\n         <Grid item xs={12} sm={3}>\n           <PercentageField name=\"profitPct\" label=\"Pct. de Utilidad\" value={values.profitPct}\n            setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n         </Grid>\n       </Grid>\n       <Grid container spacing={4}>\n         <Grid item xs={6}>\n           <SquareMeterField name=\"wallArea\" label=\"Area de Pared\" value={values.wallArea} helperText='Area de paredes interiores/exteriores'\n           setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n         </Grid>\n         <Grid item xs={6}>\n           <SquareMeterField name=\"ceilArea\" label=\"Area de Cielo\" value={values.ceilArea} helperText='Area de superficies de cielo (Opcional)'\n           setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n         </Grid>\n       </Grid>\n     </Fragment>)\n\n  return(\n    <UpdateForm apiId={apiId} title=\"Pintura Interior/Exterior\"\n      FormRow={Form} formData={pintura}\n      validationSchema={{ name, profitPct, wallArea, ceilArea}}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\n\n\nconst RowForm = ({open, closeModal, rowData, refreshRow}) => {\n  const [renglon, setRenglon] = useState({})\n  const apiId = 'rows'\n  const {budget} = rowData\n  const {id: budgetId} = budget\n  const {id: rowId} = rowData\n  useEffect(() => {\n    api.get(`budgets/${budgetId}/${apiId}/${rowId}`)\n    .then(res => {setRenglon(res.data)\n\n    })\n    .catch(err => {})\n  }, [open])\n\n\n  const Form = ({values, setFieldValue, errors, touched}) => {\n    const [units, setUnits] = useState([])\n    useEffect(() => {\n      api.get('units')\n      .then(response => {\n        setUnits(response.data)\n      })\n      .catch(err => {\n      })\n    }, [])\n\n    const useStyles = makeStyles({\n        denseItem:{\n        paddingTop: 0,\n        paddingBottom: 0,\n      },\n    });\n\n    const classes = useStyles()\n    return(\n    <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n             <QuantityField name=\"unitAmount\" label=\"Cantidad\" value={values.unitAmount}\n             setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n          </Grid>\n          <Grid item xs={12} sm={5}>\n              <FormControl>\n              <InputLabel htmlFor=\"unit\">{`Unidad de Medida`}</InputLabel>\n              <Field\n                component={Select}\n                disabled={units.length === 0}\n                name='unit'\n                onChange = {(evt, child) => setFieldValue('unit', evt.target.value)}\n                defaultValue= {renglon.unit || null }\n                displayEmpty\n                renderValue={value => value ? <MenuItem dense className={classes.denseItem} value={value}>{`${value.name}`}</MenuItem> : ''}\n                inputProps={{\n                  id: 'mix-prop',\n\n                }}\n              >\n                {units.map(unit => <MenuItem dense value={unit}>{unit.name}</MenuItem>)}\n              </Field>\n              {errors[\"unit\"] && touched[\"unit\"] ? (\n                <div><Typography color='error' variant='caption'>{errors[\"unit\"]}</Typography></div>\n              ) : null}\n\n              </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <PercentageField name=\"profitPct\" label=\"Pct. de Utilidad\" value={values.profitPct}\n             setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n          </Grid>\n        </Grid>\n  )}\n\n\n  return(\n    <UpdateForm apiId={apiId} title=\"Editar Renglón\"\n      FormRow={Form} formData={renglon}\n      validationSchema={{ name, unitAmount, unit, profitPct}}\n      budgetId={budgetId} open={open} closeModal={closeModal}\n      rowData={rowData} refreshRow={refreshRow}/>\n  )\n}\nexport {ZapataForm, LosaPlanaForm, LosaInclinadaForm, CimientoCorridoForm,\n        SoleraForm, ColumnaForm, ColumnaEspecialForm, MuroForm, MezclonMorteroForm,\n        MezclonConcretoForm, RepelloForm, PinturaForm, MezclonExtForm, RowForm}\n","import React from 'react'\n\nimport {ZapataForm, LosaPlanaForm, LosaInclinadaForm, CimientoCorridoForm,\n        SoleraForm, ColumnaForm, ColumnaEspecialForm, MuroForm,\n        MezclonConcretoForm, MezclonMorteroForm, MezclonExtForm,\n        RepelloForm, PinturaForm,\n        RowForm} from '../updateForms'\n\nconst map = {\n    0: RowForm,\n    1: ZapataForm,\n    2: LosaPlanaForm,\n    3: LosaInclinadaForm,\n    4: CimientoCorridoForm,\n    5: SoleraForm,\n    6: ColumnaForm,\n    7: MuroForm,\n    8: MezclonConcretoForm,\n    9: MezclonMorteroForm,\n    10: RepelloForm,\n    11: MezclonExtForm,//Mezclon con concreto con electromaya\n    12: ColumnaEspecialForm,\n    13: PinturaForm,\n    14: MezclonExtForm\n\n}\n\n\nexport default map;\n","\nimport React, {forwardRef, createRef, useState, useEffect, Fragment} from 'react';\nimport MaterialTable, {MTableHeader} from 'material-table';\n\nimport api from '../../api'\nimport localization from './localization'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Table, TableBody, TableRow, TableCell} from '@material-ui/core';\n\nimport grey from '@material-ui/core/colors/grey';\n\nimport {Button, Box, Typography} from '@material-ui/core'\n\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterListRounded';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst useStyles = makeStyles((theme) => ({\n  tableTotal: {\n    maxWidth: 400,\n    marginLeft: 'auto',\n    // float: 'right',\n  },\n  totalCell: {\n    paddingRight: 95,\n  },\n}));\n\n\n\n\nconst DetailTitle = title => <Typography variant='subtitle1'>{title}</Typography>\n\nexport default function EditableTb(props) {\n\n  const AddPrice = (propiedades, ref) => {\n    return(\n    <Button\n       variant=\"contained\"\n       color=\"primary\"\n       size=\"small\"\n       startIcon={<AddBox {...props} ref={ref}/>}\n     >\n       {props.title}\n     </Button>\n   )\n  }\n\n  const tableIcons = {\n      Add: forwardRef(AddPrice),\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n    };\n\n\n  const [isLoading, setLoading] = useState(false)\n\n  const classes = useStyles()\n  const [data, setData] = useState([])\n\n\n  //error handling\n  const [isError, setIsError] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n\n\n  useEffect(() => {\n    setLoading(true)\n\n    api.get(props.url)\n    .then(response => {\n      setData(response.data)\n      setLoading(false)\n    })\n    .catch(err => {\n      setErrorMessages(['Cannot load user data'])\n      setIsError(true)\n      setLoading(false)\n\n    })\n\n  }, [props.total])\n\n\n  const handleRowAdd = (newData, resolve) => {\n    //validation\n    let errorList = []\n    //if(dato indefinido then errorList.push())\n    if(errorList.length < 1){\n      api.post(props.url, newData)\n      .then(res => {\n        let dataToAdd = [...data]\n        dataToAdd.push(res.data)\n\n        setData(dataToAdd)\n        props.refreshRow(props.rowUrl, props.rowData)\n\n        setErrorMessages([])\n        setIsError(false)\n        resolve()\n\n      })\n      .catch(err => {\n        setErrorMessages([\"Cannot add data. Server error!\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n\n  }\n\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n\n\n    let errorList = []\n    if(errorList.length < 1){\n    //   if(newData.generated){\n    //     let type = newData.material ? newData.material.type.id : 0\n    //     switch (type) {\n    //       case 4:\n    //         let varilla = {...newData}\n    //         let {length} = oldData.material\n    //         varilla.amount = length * oldData.mount / varilla.material.length\n    //         newData = {...varilla}\n    //         break;\n    //       case 5:\n    //         let wire = {...newData}\n    //         let {knotsPerPound} = oldData.material\n    //         wire.amount = knotsPerPound * oldData.amount / wire.material.knotsPerPound\n    //         newData = {...wire}\n    //         break;\n    //       default:\n    //\n    //     }\n    //   }\n\n      console.log(newData);\n\n      api.put(`${props.url}/${newData.id}`, newData)\n      .then(res => {\n\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n\n        dataUpdate[index] = {...res.data, tableData: {...oldData.tableData}}\n        setData([...dataUpdate])\n        props.refreshRow(props.rowUrl, props.rowData)\n\n        resolve()\n        setIsError(false)\n        setErrorMessages([])\n      })\n      .catch(err => {\n        setErrorMessages([\"update failed! Server error\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    let errorList = []\n\n    api.delete(`${props.url}/${oldData.id}`)\n    .then(res => {\n\n      const dataDelete = [...data]\n      const index = oldData.tableData.id\n      dataDelete.splice(index, 1)\n      setData([...dataDelete])\n      props.refreshRow(props.rowUrl, props.rowData)\n\n      resolve()\n    })\n    .catch(err => {\n      setErrorMessages([\"Delete failed! Server error\"])\n      setIsError(true)\n      resolve()\n    })\n  }\n  return (\n    <Fragment>\n    <MaterialTable\n      tableRef={props.tableRef}\n      icons={tableIcons}\n      title={DetailTitle(props.title)}\n      columns={props.columns}\n      data={data}\n      isLoading={isLoading}\n      editable={{\n        // isEditable: rowData => !rowData.generated, // only name(a) rows would be editable\n        isDeletable: rowData => !rowData.generated, // only name(b) rows would be deletable,\n        isEditable: rowData => rowData.type != 5 , // only name(b) rows would be deletable,\n\n\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            handleRowAdd(newData, resolve)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve)\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve)\n          }),\n      }}\n      options={{\n       actionsColumnIndex: -1,\n       // loadingType:'linear',\n\n       // addRowPosition: 'first',\n       search: false,\n       paging: false,\n       pageSize: 5,\n       pageSizeOptions: [5],\n       padding: 'dense',\n       headerStyle: {\n         paddingTop: 0,\n         paddingBottom: 0,\n         fontSize: '0.75rem',\n         color: grey[800],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n         borderBottom: `solid 2px ${props.color}`,\n\n       },\n       cellStyle: {\n         paddingTop: 8,\n         paddingBottom: 8,\n       },\n       // tableLayout: 'fixed',\n\n\n\n     }}\n\n     components={{\n        Container: props => (\n          <div {...props}>{props.children}</div>\n        ),\n\n\n     }}\n     localization={localization(props.label)}\n    />\n    <Table  aria-label=\"spanning table\" className={classes.tableTotal}>\n        <TableBody>\n            <TableRow>\n               <TableCell rowSpan={1} />\n               <TableCell colSpan={2}>SubTotal</TableCell>\n               <TableCell className={classes.totalCell} align=\"right\">{ new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(props.total || 0)}</TableCell>\n            </TableRow>\n        </TableBody>\n    </Table>\n    </Fragment>\n\n  );\n}\n","import React, {Fragment} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Typography} from '@material-ui/core'\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Switch from '@material-ui/core/Switch';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\n\nconst useStyles = makeStyles((theme) => ({\n  // root: {\n  //   transform: 'translateZ(0px)',\n  //   flexGrow: 1,\n  // },\n  // exampleWrapper: {\n  //   position: 'relative',\n  //   marginTop: theme.spacing(3),\n  //   height: 380,\n  // },\n  // radioGroup: {\n  //   margin: theme.spacing(1, 0),\n  // },\n  speedDial: {\n    marginRight: theme.spacing(1),\n  //   position: 'absolute',\n  //   '&.MuiSpeedDial-directionUp, &.MuiSpeedDial-directionLeft': {\n  //     bottom: theme.spacing(2),\n  //     right: theme.spacing(2),\n  //   },\n  //   '&.MuiSpeedDial-directionDown, &.MuiSpeedDial-directionRight': {\n  //     top: theme.spacing(2),\n  //     left: theme.spacing(2),\n  //   },\n  },\n}));\n\n\n\nexport default function SpeedDials(props) {\n  const classes = useStyles();\n  const [direction, setDirection] = React.useState('up');\n  const [open, setOpen] = React.useState(false);\n  const [hidden, setHidden] = React.useState(false);\n\n  const handleDirectionChange = (event) => {\n    setDirection(event.target.value);\n  };\n\n  const handleHiddenChange = (event) => {\n    setHidden(event.target.checked);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n\n  return (\n\n        <SpeedDial\n          ariaLabel=\"SpeedDial example\"\n          className={classes.speedDial}\n          hidden={hidden}\n          icon={<SpeedDialIcon icon=<AddBoxIcon/>/>}\n          onClose={handleClose}\n          onOpen={handleOpen}\n          open={open}\n          direction={'left'}\n          FabProps= {{size: 'small', variant: 'extended', children: 'Costo',\n                      disableFocusRipple: true, disableRipple: true }}\n        >\n\n          {props.actions.map((action) => (\n            <SpeedDialAction\n              key={action.name}\n              icon={action.icon}\n              tooltipTitle={action.name}\n              onClick={() => {handleClose(); action.onClick()}}\n            />\n          ))}\n        </SpeedDial>\n  );\n}\n","import React, {forwardRef, createRef, useState, useEffect, Fragment} from 'react';\nimport MaterialTable, {MTableHeader} from 'material-table';\n\nimport api from '../../api'\nimport localization from './localization'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport grey from '@material-ui/core/colors/grey';\n\nimport {Button, Box, Typography} from '@material-ui/core'\n\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterListRounded';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst useStyles = makeStyles((theme) => ({\n\n\n}));\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => (<Fragment/>)),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n  };\n\n\nconst DetailTitle = title => <Typography variant='subtitle1'>{title}</Typography>\n\nexport default function EditableTb(props) {\n  const classes = useStyles()\n  const [data, setData] = useState([])\n\n\n  //error handling\n  const [isError, setIsError] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n\n\n  useEffect(() => {\n\n    api.get(props.url)\n    .then(response => {\n      setData(response.data)\n    })\n    .catch(err => {\n      setErrorMessages(['Cannot load user data'])\n      setIsError(true)\n    })\n\n  }, [])\n\n\n  const handleRowAdd = (newData, resolve) => {\n    console.log(newData);\n\n    //validation\n    let errorList = []\n    //if(dato indefinido then errorList.push())\n\n    if(errorList.length < 1){\n      api.post(props.url, newData)\n      // console.log(url + newData)\n      .then(res => {\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n        setErrorMessages([])\n        setIsError(false)\n      })\n      .catch(err => {\n        setErrorMessages([\"Cannot add data. Server error!\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    console.log(newData);\n\n    let errorList = []\n    if(errorList.length < 1){\n      api.put(`${props.url}/${newData.id}`, newData)\n      .then(res => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n        setIsError(false)\n        setErrorMessages([])\n      })\n      .catch(err => {\n        setErrorMessages([\"update failed! Server error\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    let errorList = []\n\n    api.delete(`${props.url}/${oldData.id}`)\n    .then(res => {\n      const dataDelete = [...data]\n      const index = oldData.tableData.id\n      dataDelete.splice(index, 1)\n      setData([...dataDelete])\n      resolve()\n    })\n    .catch(err => {\n      setErrorMessages([\"Delete failed! Server error\"])\n      setIsError(true)\n      resolve()\n    })\n  }\n  return (\n    <MaterialTable\n      tableRef={props.tableRef}\n      icons={tableIcons}\n      title={DetailTitle(props.title)}\n      columns={props.columns}\n      data={data}\n      editable={{\n        isEditable: rowData => !rowData.restricted, // only name(a) rows would be editable\n        isDeletable: rowData => !rowData.restricted, // only name(b) rows would be deletable,\n\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            handleRowAdd(newData, resolve)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve)\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve)\n          }),\n      }}\n      options={{\n       actionsColumnIndex: -1,\n       addRowPosition: 'first',\n       search: false,\n       paging: false,\n       pageSize: 5,\n       pageSizeOptions: [5],\n       padding: 'dense',\n       headerStyle: {\n         paddingTop: 0,\n         paddingBottom: 0,\n         fontSize: '0.75rem',\n         color: grey[800],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n       },\n       cellStyle: {\n         paddingTop: 8,\n         paddingBottom: 8,\n       },\n       // tableLayout: 'fixed',\n\n\n\n     }}\n\n     components={{\n        Container: props => (\n          <div {...props}>{props.children}</div>\n        ),\n        Toolbar: props => (\n          <Box bgcolor={grey[50]} pl={2}>\n          <Typography variant='subtitle2' color='primary'>{props.title}</Typography>\n          </Box>\n        ),\n\n        Body: props => (<Fragment />\n        ),\n\n     }}\n     localization={localization(props.label)}\n    />\n\n  );\n}\n","import React from 'react'\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {Tooltip} from '@material-ui/core'\n\nconst InfoTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.black,\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n  arrow: {\n    color: theme.palette.common.black,\n  },\n}))(Tooltip);\n\nexport default InfoTooltip\n","import React, {forwardRef, createRef, useState, useEffect, useRef, Fragment} from 'react';\nimport MaterialTable, {MTableHeader} from 'material-table';\n\nimport api from '../../../api'\nimport localization from '../localization'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Table, TableBody, TableRow, TableCell} from '@material-ui/core';\n\nimport grey from '@material-ui/core/colors/grey';\n\nimport {Button, Box, Typography} from '@material-ui/core'\n\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterListRounded';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst useStyles = makeStyles((theme) => ({\n  tableTotal: {\n    maxWidth: 400,\n    marginLeft: 'auto',\n    // float: 'right',\n  },\n  totalCell: {\n    paddingRight: 95,\n  },\n}));\n\n\nconst DetailTitle = title => <Typography variant='subtitle1'>{title}</Typography>\n\nconst DetailsTb = ({title, label, color, url, getColumns, refreshRow}) => {\n\n  //url\n  // tableRef,\n\n  // total,\n  // no por ahora\n\n  const renderCount = useRef(1)\n\n\n  const AddPrice = (props, ref) => {\n    return(\n    <Button\n\n       color=\"primary\"\n       size=\"small\"\n       startIcon={<AddBox {...props} ref={ref}/>}\n     >\n       {title}\n     </Button>\n   )\n  }\n\n  const tableIcons = {\n      Add: forwardRef(AddPrice),\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n      SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n    };\n\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n      setLoading(true)\n\n      api.get(url)\n      .then(response => {\n        setData(response.data)\n        setLoading(false)\n      })\n      .catch(err => {\n        // setErrorMessages(['Cannot load user data'])\n        // setIsError(true)\n        setLoading(false)\n\n      })\n\n    }, [])\n      //\n      //\n      const handleRowAdd = (newData, resolve) => {\n        //validation\n        let errorList = []\n        //if(dato indefinido then errorList.push())\n        if(errorList.length < 1){\n          api.post(url, newData)\n          .then(res => {\n            let dataToAdd = [...data]\n            dataToAdd.push(res.data)\n\n            setData(dataToAdd)\n            refreshRow()\n\n            // setErrorMessages([])\n            // setIsError(false)\n            resolve()\n\n          })\n          .catch(err => {\n            // setErrorMessages([\"Cannot add data. Server error!\"])\n            // setIsError(true)\n            resolve()\n          })\n        } else {\n          // setErrorMessages(errorList)\n          // setIsError(true)\n          resolve()\n        }\n\n      }\n\n\n      const handleRowUpdate = (newData, oldData, resolve) => {\n\n\n        let errorList = []\n        if(errorList.length < 1){\n          console.log(newData);\n\n          api.put(`${url}/${newData.id}`, newData)\n          .then(res => {\n\n            const dataUpdate = [...data]\n            const index = oldData.tableData.id\n\n            dataUpdate[index] = {...res.data, tableData: {...oldData.tableData}}\n            setData([...dataUpdate])\n            refreshRow()\n\n            resolve()\n            // setIsError(false)\n            // setErrorMessages([])\n          })\n          .catch(err => {\n            // setErrorMessages([\"update failed! Server error\"])\n            // setIsError(true)\n            resolve()\n          })\n        } else {\n          // setErrorMessages(errorList)\n          // setIsError(true)\n          resolve()\n        }\n      }\n\n      const handleRowDelete = (oldData, resolve) => {\n        let errorList = []\n\n        api.delete(`${url}/${oldData.id}`)\n        .then(res => {\n\n          const dataDelete = [...data]\n          const index = oldData.tableData.id\n          dataDelete.splice(index, 1)\n          setData([...dataDelete])\n          refreshRow()\n\n          resolve()\n        })\n        .catch(err => {\n          // setErrorMessages([\"Delete failed! Server error\"])\n          // setIsError(true)\n          resolve()\n        })\n      }\n  return (\n    <Fragment>\n    <MaterialTable\n      icons={tableIcons}\n      title=''\n      columns={getColumns()}\n      data={data}\n      isLoading={loading}\n      editable={{\n        isDeletable: rowData => !rowData.generated, // only name(b) rows would be deletable,\n        isEditable: rowData => rowData.type != 5 , // only name(b) rows would be deletable,\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            handleRowAdd(newData, resolve)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve)\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve)\n          }),\n      }}\n      options={{\n       actionsColumnIndex: -1,\n       // loadingType:'linear',\n\n       // addRowPosition: 'first',\n       search: false,\n       paging: false,\n       pageSize: 5,\n       pageSizeOptions: [5],\n       padding: 'dense',\n       headerStyle: {\n         paddingTop: 0,\n         paddingBottom: 0,\n         fontSize: '0.75rem',\n         color: grey[800],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n         borderBottom: `solid 2px ${color}`,\n\n       },\n       cellStyle: {\n         paddingTop: 8,\n         paddingBottom: 8,\n       },\n       // tableLayout: 'fixed',\n     }}\n\n     components={{\n        Container: props => (\n          <div {...props}>{props.children}</div>\n        ),\n     }}\n     localization={{\n       ...localization(label),\n       body: {\n         addTooltip: `Agregar ${label}`,\n         deleteTooltip: 'Eliminar',\n         editTooltip: 'Editar',\n         emptyDataSourceMessage: 'No hay registros para mostrar',\n         editRow: {\n           deleteText: 'Esta seguro de eliminar este dato?',\n           cancelTooltip: 'Cancelar',\n           saveTooltip: 'Guardar',\n         }\n       },}}\n    />\n    </Fragment>\n\n  );\n}\n\nexport default React.memo(DetailsTb)\n","import React, {Fragment, useState, useEffect, useRef, useCallback} from 'react'\nimport api from '../../../api'\nimport {Table, TableBody, TableRow, TableCell} from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport InfoTooltip from '../../partials/InfoTooltip'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport {FormControl, Select, MenuItem, TextField, CircularProgress, IconButton} from '@material-ui/core'\nimport DetailsTb from './DetailsTb'\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\nimport SpecialPriceIcon from '@material-ui/icons/StarRateRounded';\n\nconst useStyles = makeStyles((theme) => ({\n  tableTotal: {\n    maxWidth: 400,\n    marginLeft: 'auto',\n    // float: 'right',\n  },\n  totalCell: {\n    paddingRight: 95,\n  },\n}));\n\nconst MaterialCostTb = ({total, refreshRow, url}) => {\n  const classes = useStyles()\n\n  const renderCount = useRef(1)\n  const [units, setUnits] = useState({})\n  const [options, setOptions] = useState([])\n  const [priceList, setPriceList] = useState([])\n\n  const loading = options.length == 0\n\n   useEffect(() => {\n     if (!loading) {\n       return undefined;\n     }\n     api.get('materials')\n     .then(response => {\n       setOptions(response.data)\n     })\n     api.get('units/catal')\n     .then(response => {\n       setUnits(response.data)\n     })\n     .catch(err => {\n\n     })\n   }, [])\n\n   const getColumns = useCallback(() => ([\n     { title: 'Id', field: 'id', hidden: true},\n     { width: '1%',  align: 'left', sorting: false, render: (rowData) =>  typeof rowData != 'undefined' && rowData.type && rowData.type.id != 1 &&\n              <InfoTooltip title={rowData.type.name} placement=\"bottom\">\n                <IconButton  size='small' aria-label=\"upload picture\" component=\"span\">\n                  <InfoIcon />\n                </IconButton>\n              </InfoTooltip>},\n     { title: \"Material\", width: '35%',\n      field: \"material\", render: rowData => rowData ? rowData.name : '',\n      validate: rowData => ( typeof rowData.name != 'undefined'?\n                                 rowData.name.trim() === '' ?\n                                     { isValid: false, helperText: 'Nombre es requerido' } : true\n                                 : false),\n      editComponent: props => (\n        <Autocomplete\n          id=\"Agent Emails\"\n          fullWidth\n          autoComplete\n          autoSelect\n          size=\"small\"\n          value={props.value}\n          options={options}\n          getOptionLabel={option => option.name}\n          getOptionSelected={(option, value) => option.name === value.name}\n          loading={loading}\n          loadingText= 'Cargando...'\n          clearText\t= 'Borrar'\n          getOptionDisabled={props.rowData ?\n                                props.rowData.type ?\n                                    props.rowData.type.id === 4 ?\n                                        option => !option.type || option.prices.length <= 0 || option.type.id != props.rowData.material.type.id\n                                        : option => option.prices.length <= 0\n                                    :option => option.prices.length <= 0\n                                : option => option.prices.length <= 0}\n          renderInput={params => {\n            {props.rowData && console.log(props.rowData)}\n\n            return (\n              <TextField\n                placeholder={props.rowData ? props.rowData.name? `${props.rowData.name}` : `Seleccionar Material` : `Seleccionar Material`}\n                {...params}\n                fullWidth\n                InputProps={{\n                  ...params.InputProps,\n                  endAdornment: (\n                    <React.Fragment>\n                      {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n                      {params.InputProps.endAdornment}\n                    </React.Fragment>\n                  ),\n                }}\n              />\n            );\n          }}\n          onChange={(e, newValue )=> {\n          if(newValue != null){\n            props.onChange(newValue)\n            console.log(newValue);\n            var data = { ...props.rowData };\n                data.name = newValue.name ? newValue.name : ''\n                data.unit = newValue.unit ? newValue.unit : null\n                data.material = newValue\n                data.prices = newValue.prices ? newValue.prices : []\n                data.materialPrice = {price: ''}\n                data.price = ''\n\n                props.onRowDataChange(data);\n\n          } else {\n            var data = { ...props.rowData };\n\n                data.prices = []\n\n                props.onRowDataChange(data);\n          }\n          } }\n\n        />\n      )},\n     { title: 'Cantidad', field: 'amount', type: 'numeric',\n     render: rowData => (rowData.amount * (rowData.wastePct/100+1)).toFixed(2), width: '15%', align: 'right',\n     validate: rowData => ( typeof rowData.amount != 'undefined'?\n                                rowData.amount.length <= 0 ?\n                                    { isValid: false, helperText: 'Cantidad es requerido' } : true\n                                : false),\n     editComponent: props => (\n       <TextField id=\"standard-basic\"\n         value={props.value}\n         type='number'\n         size='small'\n         disabled = {props.rowData && props.rowData.type && props.rowData.type.id === 4}\n         onChange={e => props.onChange(e.target.value)}\n        />\n\n     )\n     },\n     { title: 'Pct.', field: 'wastePct', type: 'numeric', render: rowData => `${rowData.wastePct} %`, width: '5%', align: 'right',\n     initialEditValue: 0,\n     validate: rowData => ( typeof rowData.wastePct != 'undefined'?\n                                rowData.wastePct.length <= 0 ?\n                                    { isValid: false, helperText: 'Cantidad es requerido' } : true\n                                : false),\n      editComponent: props => <TextField defaultValue={0} type=\"number\" inputProps={{min: 0, max: 100, fontSize: 10}}\n      value={props.value} onChange={e => props.onChange(e.target.value)}/>},\n     { title: 'Unidad', field: 'unit.id', lookup: units, editable: 'never', width: '15%', align: 'right',\n       validate: rowData => ( typeof rowData.unit != 'undefined')},\n     { title: 'Precio Unitario', field: 'materialPrice',  width: '15%', align: 'right',\n       render: rowData => rowData ?\n                              rowData.price === '' ? rowData.price : new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(rowData.price)\n                              : '' ,\n       validate: rowData => ( typeof rowData.price != 'undefined'?\n                                  rowData.price.length <= 0 ?\n                                      { isValid: false, helperText: 'Precio es requerido' } : true\n                                  : false),\n       editComponent: props => {\n            return (\n              <FormControl>\n              <Select\n                 value={props.value}\n                 placeholder={props.rowData ? props.rowData.price ? `${props.rowData.price}` : `----` : `----`}\n                 onChange={e => {\n                   props.onChange(e.target.value);\n                   var data = { ...props.rowData };\n                       data.price = e.target.value.price\n                       data.materialPrice = e.target.value\n                       props.onRowDataChange(data);\n\n                 }}\n                 defaultValue= {props.rowData.materialPrice ? props.rowData.materialPrice : { price: \"\"} }\n                 renderValue={value => <MenuItem dense className={classes.denseItem} value={value}>\n                                       {value.special &&\n                                           <SpecialPriceIcon color='secondary' fontSize=\"small\" />\n                                         }\n                                        {value.price === \"\" ? \"\" : new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(value.price)}\n                                       </MenuItem>}\n                 disabled={!props.rowData.prices || props.rowData.prices.length === 0}\n\n               >\n                 {props.rowData && props.rowData.prices && props.rowData.prices.map((matPrice) =>\n                   <MenuItem value={matPrice}>\n                      {matPrice.special &&\n                          <SpecialPriceIcon color='secondary' fontSize=\"small\" />\n                        }\n                     {matPrice.price === \"\" ? \"\" : new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(matPrice.price)}\n                   </MenuItem>\n                 )}\n               </Select>\n              </FormControl>\n            )\n          },\n       currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2}},\n     { title: 'Precio Total', field: 'totalPrice', type: 'currency', editable: 'never', width: '15%', align: 'right',\n       render: rowData => typeof rowData != 'undefined' && new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(rowData.amount * (rowData.wastePct/100+1) * rowData.price),\n       currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2}}\n\n   ]), [units, options])\n\n  return(\n    <Fragment>\n        <DetailsTb title='Material' label='material' color='#26a69a' getColumns={getColumns}\n         url={`${url}/mtlcosts`} refreshRow={refreshRow}/>\n         <Table  aria-label=\"spanning table\" className={classes.tableTotal}>\n             <TableBody>\n                 <TotalTableRow>\n                    <PlainTableCell rowSpan={1} />\n                    <PlainTableCell colSpan={2}>Subtotal</PlainTableCell>\n                    <PlainTableCell className={classes.totalCell} align=\"right\">{ new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(total || 0)}</PlainTableCell>\n                 </TotalTableRow>\n             </TableBody>\n         </Table>\n    </Fragment>\n  )\n}\n\nexport default React.memo(MaterialCostTb, (prev, next) => prev.total == next.total)\n\nconst TotalTableRow = withStyles((theme) => ({\n  root: {\n      borderTop: `solid 2px #26a69a`,\n      borderBottom: `none`,\n\n  },\n}))(TableRow);\n\nconst PlainTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: `none`,\n  },\n}))(TableCell);\n","import React, {Fragment, useState, useEffect, useRef, useCallback} from 'react'\nimport api from '../../../api'\nimport {Table, TableBody, TableRow, TableCell} from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport DetailsTb from './DetailsTb'\n\nconst useStyles = makeStyles((theme) => ({\n  tableTotal: {\n    maxWidth: 400,\n    marginLeft: 'auto',\n    // float: 'right',\n  },\n  totalCell: {\n    paddingRight: 95,\n  },\n}));\n\nconst WorkForceCostTb = ({total, refreshRow, url, rowAmount}) => {\n  const classes = useStyles()\n\n  const renderCount = useRef(1)\n  const [units, setUnits] = useState({})\n  useEffect(() => {\n    api.get('units/catal')\n    .then(response => {\n      setUnits(response.data)\n    })\n    .catch(err => {\n\n    })\n  }, [])\n\n   const getColumns = useCallback(() => ([\n      { title: 'Id', field: 'id', hidden: true},\n      { title: 'Relativo', field: 'relative', type: 'boolean', width:'5%', initialEditValue: true },\n      { title: 'Mano de Obra', field: 'name', width: '40%',\n        validate: rowData => ( typeof rowData.name != 'undefined'?\n                                   rowData.name.trim() === '' ?\n                                       { isValid: false, helperText: 'Nombre es requerido' } : true\n                                   : false)},\n      { title: 'Cantidad', field: 'amount', type: 'numeric', initialEditValue: rowAmount,\n        validate: rowData => ( typeof rowData.amount != 'undefined'?\n                                   rowData.amount.length <= 0 ?\n                                       { isValid: false, helperText: 'Cantidad es requerido' } : true\n                                   : false),\n        render: rowData => (rowData.amount).toFixed(2), width: '15%', align: 'right'},\n      { title: 'Unidad', field: 'unit.id', lookup: units,\n        validate: rowData => ( typeof rowData.unit != 'undefined'),\n        width: '15%', align: 'right'},\n      { title: 'Precio Unitario', field: 'price', type: 'currency',\n        validate: rowData => ( typeof rowData.price != 'undefined'?\n                                   rowData.price.length <= 0 ?\n                                       { isValid: false, helperText: 'Precio es requerido' } : true\n                                   : false),\n        currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2}, width: '15%', align: 'right'},\n      { title: 'Precio Total', field: 'totalPrice', type: 'currency', editable: 'never', width: '15%', align: 'right',\n        render: rowData => typeof rowData != 'undefined' && new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(rowData.amount * rowData.price),\n        currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2}}\n\n    ]), [units])\n\n  return(\n    <Fragment>\n        <DetailsTb title='Mano de Obra' label='mano de obra' color='#6c92a2' getColumns={getColumns}\n         url={`${url}/wfcosts`} refreshRow={refreshRow}/>\n         <Table  aria-label=\"spanning table\" className={classes.tableTotal}>\n             <TableBody>\n                 <TotalTableRow>\n                    <PlainTableCell rowSpan={1} />\n                    <PlainTableCell colSpan={2}>Subtotal</PlainTableCell>\n                    <PlainTableCell className={classes.totalCell} align=\"right\">{ new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(total || 0)}</PlainTableCell>\n                 </TotalTableRow>\n             </TableBody>\n         </Table>\n    </Fragment>\n  )\n}\n\nexport default React.memo(WorkForceCostTb)\n\nconst TotalTableRow = withStyles((theme) => ({\n  root: {\n      borderTop: `solid 2px #6c92a2`,\n  },\n}))(TableRow);\n\n\nconst PlainTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: `none`,\n  },\n}))(TableCell);\n","import React, {Fragment, forwardRef, useState, useEffect, useRef, useCallback, useMemo} from 'react'\nimport api from '../../../api'\nimport {Table, TableBody, TableRow, TableCell, Button} from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\n\nimport DetailsTb from './DetailsTb'\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterListRounded';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nconst useStyles = makeStyles((theme) => ({\n  tableTotal: {\n    maxWidth: 400,\n    marginLeft: 'auto',\n    // float: 'right',\n  },\n  totalCell: {\n    paddingRight: 95,\n  },\n}));\n\n\nconst IndirectCostTb = ({total, refreshRow, url}) => {\n\n  const renderCount = useRef(1)\n  const [units, setUnits] = useState({})\n  useEffect(() => {\n    api.get('units/catal')\n    .then(response => {\n      setUnits(response.data)\n    })\n    .catch(err => {\n\n    })\n  }, [])\n\n   const getColumns = useCallback(() => ([\n      { title: 'Id', field: 'id', hidden: true},\n      { title: 'Costos Indirectos', field: 'name', width: '40%',\n        validate: rowData => ( typeof rowData.name != 'undefined'?\n                                   rowData.name.trim() === '' ?\n                                       { isValid: false, helperText: 'Nombre es requerido' } : true\n                                   : false)},\n      { title: 'Cantidad', field: 'amount', type: 'numeric', render: rowData => rowData.amount.toFixed(2), width: '15%', align: 'right',\n        validate: rowData => ( typeof rowData.amount != 'undefined'?\n                                   rowData.amount.length <= 0 ?\n                                       { isValid: false, helperText: 'Cantidad es requerido' } : true\n                                   : false)},\n      { title: 'Unidad', field: 'unit.id', lookup: units, width: '15%', align: 'right',\n        validate: rowData => ( typeof rowData.unit != 'undefined')},\n      { title: 'Precio Unitario', field: 'price', type: 'currency',\n        currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2},\n        validate: rowData => ( typeof rowData.price != 'undefined'?\n                                   rowData.price.length <= 0 ?\n                                       { isValid: false, helperText: 'Precio es requerido' } : true\n                                   : false),\n        width: '15%', align: 'right'},\n      { title: 'Precio Total', field: 'totalPrice', type: 'currency', editable: 'never', width: '15%', align: 'right',\n        render: rowData => typeof rowData != 'undefined' && new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(rowData.amount * rowData.price),\n        currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2}}\n\n    ]), [units])\n    const apiId = useMemo(()=> `${url}/indcosts`, [])\n\n  return(\n    <Fragment>\n        <DetailsTb title=\"Costo indirecto\" label=\"costo\" color='#6c92a2' getColumns={getColumns}\n         url={`${url}/indcosts`} refreshRow={refreshRow}/>\n        <Resumen total={total}/>\n    </Fragment>\n  )\n}\n\nexport default React.memo(IndirectCostTb)\n\n\n\nconst Resumen = React.memo(({total}) =>  {\n  const classes = useStyles()\n\n  return(\n    <Table  aria-label=\"spanning table\" className={classes.tableTotal}>\n         <TableBody>\n             <TotalTableRow>\n                <PlainTableCell rowSpan={1} />\n                <PlainTableCell colSpan={2}>Subtotal</PlainTableCell>\n                <PlainTableCell className={classes.totalCell} align=\"right\">{ new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(total || 0)}</PlainTableCell>\n             </TotalTableRow>\n         </TableBody>\n     </Table> )})\n\nconst TotalTableRow = withStyles((theme) => ({\n  root: {\n      borderTop: `solid 2px #9ca9a8`,\n  },\n}))(TableRow);\n\nconst PlainTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: `none`,\n  },\n}))(TableCell);\n","import React, {Fragment, useRef, useState, useEffect, useCallback} from 'react'\nimport { makeStyles, withStyles} from '@material-ui/core/styles';\n\nimport SpeedDial from './partials/SpeedDial'\nimport DetailTb from './DetailsTb'\nimport HeaderTb from './HeaderTb';\n\nimport {FormControl, Select, MenuItem, TextField, ListItemIcon, Divider, CircularProgress,\n        Button, Grid, IconButton} from '@material-ui/core'\nimport {Table, TableBody, TableRow, TableCell} from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete'\n\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\nimport MaterialIcon from '@material-ui/icons/LocalMallRounded'\nimport ManoObraIcon from '@material-ui/icons/PanToolRounded'\nimport IndirectIcon from '@material-ui/icons/AllOutRounded'\nimport CheckIcon from '@material-ui/icons/Check';\nimport EditAttributesIcon from '@material-ui/icons/EditAttributesRounded';\nimport SpecialPriceIcon from '@material-ui/icons/StarRateRounded';\n\nimport MaterialCostTb from './costs/MaterialsCostTb'\nimport WorkforceCostTb from './costs/WorkforceCostTb'\nimport IndirectCostTb from './costs/IndirectCostTb'\n\n\nimport api from '../../api'\n\n\nconst useStyles = makeStyles((theme) => ({\n  tableTotal: {\n    maxWidth: 600,\n    marginLeft: 'auto',\n    marginTop: theme.spacing(2)\n    // float: 'right',\n  },\n  denseItem:{\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n}));\n\nconst CostTb = ({rowData, refreshRow: updateRow}) => {\n  const classes = useStyles()\n  const materialRef = useRef(null)\n  const workforceRef = useRef(null)\n  const indirectRef = useRef(null)\n\n  const renderCount = useRef(1)\n\n const loading = !!rowData.totalCost;\n\n //Quantity for unit of the row\n const {unitAmount : rowAmount} = rowData\n\n//Finance info from the row\n const {totalCost, directCost, indirectCost, materialCost, workForceCost} = rowData\n\n//Inforacion del presupuesto y el renglon\n const {budget} = rowData\n const {id: budgetId} = budget\n const {id: rowId} = rowData\n const url = `rows/${rowId}`\n const rowUrl = `budgets/${budgetId}/${url}`\n\n const refreshRow = useCallback(() => updateRow(rowUrl, rowData), [])\n\n\nconst actions = [\n       { icon: <MaterialIcon />, name: 'Material', onClick: () => materialRef.current.setState({ showAddRow: true }) },\n       { icon: <ManoObraIcon />, name: 'Mano de Obra', onClick: () => workforceRef.current.setState({ showAddRow: true }) },\n       { icon: <IndirectIcon />, name: 'Costo Indirecto', onClick: () => indirectRef.current.setState({ showAddRow: true }) },\n     ];\n\n\n    return (\n      <Fragment>\n      <MaterialCostTb total={materialCost} refreshRow={refreshRow} url={url} />\n      <WorkforceCostTb total={workForceCost} refreshRow={refreshRow} url={url} rowAmount={rowAmount}/>\n      <IndirectCostTb total={indirectCost} refreshRow={refreshRow} url={url} />\n      <Table  aria-label=\"spanning table\" className={classes.tableTotal}>\n          <TableBody>\n                <TableRow>\n                   <PlainTableCell rowSpan={3} />\n                   <TableCell colSpan={2}>Total Costos Directos</TableCell>\n                   <TableCell align=\"right\">{ new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(directCost || 0)}</TableCell>\n                </TableRow>\n               <TableRow>\n                  <TableCell colSpan={2}>Total Costos Indirectos</TableCell>\n                  <TableCell align=\"right\">{ new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(indirectCost || 0)}</TableCell>\n                </TableRow>\n                 <TotalTableRow>\n                    <PlainTableCell colSpan={2}>Total Costos del Renglon</PlainTableCell>\n                    <PlainTableCell align=\"right\">{ new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(totalCost || 0)}</PlainTableCell>\n                </TotalTableRow>\n          </TableBody>\n      </Table>\n      </Fragment>\n\n\n    )\n}\n\nexport default React.memo(CostTb, (prev, next) => prev.rowData.totalCost == next.rowData.totalCost)\n\nconst TotalTableRow = withStyles((theme) => ({\n  root: {\n      // backgroundColor: theme.palette.primary.info,\n      borderTop: `solid 2px ${theme.palette.primary.main}`,\n\n  },\n}))(TableRow);\n\nconst PlainTableCell = withStyles((theme) => ({\n  root: {\n    borderBottom: `none`,\n  },\n}))(TableCell);\n","import React, {useState, useEffect, Fragment} from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {Dialog, DialogContent, DialogActions, Grid, Button,\n        LinearProgress, CircularProgress, InputAdornment} from '@material-ui/core';\nimport {SaveAlt} from '@material-ui/icons'\nimport { Formik, Form, Field } from 'formik';\nimport {NameField} from '../inputFields'\nimport DialogTitle from './DialogTitle'\n\nimport * as Yup from 'yup';\nimport moment from 'moment'\nvar idLocale = require('moment/locale/es');\nmoment.locale('es', idLocale);\n\n\n\n\nexport default function ExportDialog({open, onClose, onConfirm, data, showTitle, ...other}) {\n  const info = data[0] || {budget: {name: '', project: {name: ''}}}\n  console.log('DATA EN EXPORT', data);\n  const budgetName =  info.budget.name.toUpperCase()\n  const projectName = info.budget.project.name.toUpperCase()\n\n  useEffect(() => {}, [data] )\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onConfirm(data);\n    onClose();\n  };\n\n  const handleOnSubmit = (values, {setSubmitting, resetForm}) => {\n    const {name} = values\n    console.log(name);\n    setTimeout(() => {\n      onConfirm(data, name);\n      setSubmitting(false)\n\n      onClose();\n\n    }, 500)\n\n\n  };\n\n  const [serverState, setServerState] = useState();\n\n  return (\n    <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        fullWidth\n        maxWidth=\"md\"\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={open}\n        {...other}\n      >\n        <DialogTitle onClose={onClose} id=\"confirmation-dialog-title\">{showTitle()}</DialogTitle>\n            <Formik\n            enableReinitialize // missing piece!!\n\n             initialValues={{name: `PRESUPUESTO ${budgetName} ${projectName} ${moment().format('LL')}`}}\n             validationSchema={\n               Yup.object().shape({\n                  name: Yup.string()\n                        .required('Requerido'),\n                })}\n             onSubmit={handleOnSubmit}\n             >\n             {({submitForm, isSubmitting, setFieldValue, values, errors, touched }) => (\n               <Form>\n               <DialogContent dividers>\n\n                   <Grid container spacing={4}>\n                       <Grid item xs={12}>\n                       <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched}\n                          helperText='Nombre del archivo de excel' fieldProps={{\n                            autoFocus: true,\n                            fullWidth: true,\n                            multiline: true,\n                            endAdornment: (\n                            <InputAdornment position=\"end\">\n                              .xlsx\n                            </InputAdornment>\n                          )}}/>\n                       </Grid>\n                   </Grid>\n                 {isSubmitting && <LinearProgress />}\n                 <br />\n\n                 {serverState && (\n                   <p className={!serverState.ok ? \"errorMsg\" : \"\"}>\n                     {serverState.msg}\n                   </p>\n                 )}\n\n                </DialogContent>\n                <DialogActions>\n                  <Button autoFocus onClick={handleCancel} color=\"primary\">\n                    Cancelar\n                  </Button>\n                  <Button onClick={submitForm} color=\"primary\"\n                    startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : <SaveAlt />}>\n\n                    EXPORTAR\n                  </Button>\n                </DialogActions>\n            </Form>\n          )}\n        </Formik>\n\n      </Dialog>\n  )\n}\n","import React, {useState, useEffect, Fragment} from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport api from '../../api'\nimport * as Yup from 'yup';\nimport columnImg from '../../imgs/columna.png';\nimport HelpImg from '../partials/HelpImg'\nimport {Stepper, Step, StepLabel, StepContent,\n        Grid, TextField, CircularProgress } from '@material-ui/core'\n\nimport {Dialog, DialogActions, DialogContent, DialogContentText,\n        Button, LinearProgress,Typography,  MenuItem, InputLabel, FormControl,\n        InputAdornment} from '@material-ui/core'\nimport DialogTitle from '../partials/DialogTitle'\n\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Select } from 'formik-material-ui';\n\nimport {PreMixCost, BlockCost, WallPaintCost, CeilPaintCost, ElectromallaCost} from './costFields'\n\nimport {NameField, LinearMeterField, QuantityField,\n        SquareMeterField, PercentageField, BooleanField,\n        VolumeFields} from '../inputFields'\n\nimport {name, amount, length, width, height,\n        unitAmount, unit, profitPct,\n        wallArea, ceilArea,\n        cantLongsElems, cantLongsAuxElems,\n        recubrimiento, separacion,\n        longHook, longPata,\n        estribosDouble,\n        mixProp,\n        cement, cementPrice, cementWastePct,\n        sand, sandPrice, sandWastePct,\n        preMix, preMixPrice, preMixWastePct,\n        wallPaint, wallPaintPrice, wallPaintWastePct,\n        ceilPaint, ceilPaintPrice, ceilPaintWastePct,\n        electromalla, electromallaPrice, electromallaWastePct} from '../schemas'\n\n\nimport {concretoGroup, morteroGroup, frameIronGroup, frameBiIronGroup, frameTriIronGroup,\n        areaVolGroup, transMeterGroup, transQuantityGroup,\n        zapataGroup, losaPlanaGroup, losaInclinadaGroup, muroGroup} from './formGroups'\n\nconst [concretoSchema, ConcretoForm] = concretoGroup\nconst [morteroSchema, MorteroForm] = morteroGroup\nconst [frameIronSchema, FrameIronForm] = frameIronGroup\nconst [frameBiIronSchema, FrameBiIronForm] = frameBiIronGroup\nconst [frameTriIronSchema, FrameTriIronForm] = frameTriIronGroup\nconst [transMeterSchema, TransMeterForm] = transMeterGroup\nconst [transQuantitySchema, TransQuantityForm] = transQuantityGroup\nconst [areaVolSchema, AreaVolForm] = areaVolGroup\nconst [zapataSchema, ZapataFormGroup] = zapataGroup\nconst [losaPlanaSchema, LosaPlanaSpecsForm] = losaPlanaGroup\nconst [losaInclinadaSchema, LosaInclinadaSpecsForm] = losaInclinadaGroup\nconst [muroSchema, MuroSpecsForm] = muroGroup\n\n\nconst useStyles = makeStyles((theme) => ({\n  soloInput: {\n    textAlign: 'right'\n  },\n}));\n\n\nconst initials =  {\n    name: ``,\n    amount: ``,\n    length: '',\n    width: '',\n    height: '',\n    area: '',\n    recubrimiento: '',\n    separacion: '',\n    longHook: '',\n    longPata: '',\n    cantLongsElems: '',\n    cantTransElems: '',\n    propTension: ''\n  }\n\nconst concretoInitials = {\n      cementWastePct: 0,\n      sandWastePct: 0,\n      gravelWastePct: 0,\n}\n\nconst morteroInitials = {\n      cementWastePct: 0,\n      sandWastePct: 0,\n}\n\nconst frameBiIronInitials = {\n  longIronWastePct: 0,\n  transIronWastePct: 0,\n  tieWireWastePct: 0,\n}\n\nconst frameTriIronInitials = {\n  ...frameBiIronInitials,\n  longIronAuxWastePct: 0,\n}\n\nconst frameIronInitials = {\n  ironWastePct: 0,\n  tieWireWastePct: 0,\n}\n\nconst EmptyForm = props => <Fragment />\n\nconst CreateForm = ({getSteps, budgetId, apiId,\n                     initialValues,\n                     openModal, closeModal,\n                     setData, errors, touched, values, setFieldValue,\n                     maxWidth}) => {\n\n\n    const url = `budgets/${budgetId}/${apiId}`\n\n    //stepper state\n    const [activeStep, setActiveStep] = React.useState(0);\n    const [step, setStep] = useState({label: '', form: EmptyForm , schema: Yup.object().shape({})})\n    const steps = getSteps();\n    const [serverState, setServerState] = useState();\n\n    useEffect(() => {setStep(steps[0])\n                      }, [])\n\n    const isLastStep = () => {\n      return activeStep === steps.length - 1;\n    }\n\n    const handleNext = () => {\n        setStep(steps[activeStep + 1]);\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      };\n\n    const handleBack = () => {\n        setStep(steps[activeStep - 1]);\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n      };\n\n    const handleServerResponse = (ok, msg) => {\n        setServerState({ok, msg});\n      };\n\n    const handleOnSubmit = (values, {setSubmitting, resetForm}) => {\n          if (isLastStep()) {\n            console.log('values', values);\n            api.post(`${url}`, values)\n              .then(response => {\n                api.get(`${url}/${response.data.id}`)\n                .then(res => {\n                  const newData = res.data\n                  setData(prevData => [newData, ...prevData])\n\n                })\n                setSubmitting(false);\n                resetForm();\n                handleServerResponse(true, \"\");\n                closeModal()\n                //agregar a la data general de la tabla materiales\n              })\n              .catch(error => {\n                setSubmitting(false);\n                // handleServerResponse(false, error.response.data.);\n              });\n          } else {\n            setSubmitting(false)\n            handleNext()\n          }\n\n      };\n\n\n    return (\n\n      <Dialog maxWidth={maxWidth  || 'md'} fullWidth open={openModal} onClose={() => closeModal} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle onClose={closeModal}>\n            <Stepper activeStep={activeStep} alternativeLabel>\n              {steps.map(({label}) => (\n                <Step key={label}>\n                  <StepLabel>{label}</StepLabel>\n                </Step>\n              ))}\n            </Stepper>\n          </DialogTitle>\n          <Formik\n          enableReinitialize // missing piece!!\n\n            initialValues={{...initialValues}}\n            validationSchema={Yup.object().shape({...step.schema})}\n            onSubmit={handleOnSubmit}\n\n          >\n            {({ submitForm, isSubmitting, setFieldValue, values, errors, touched }) => (\n              <Form autoComplete=\"off\">\n              <DialogContent dividers>\n\n                <step.form values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n\n                  {isSubmitting && <LinearProgress />}\n                  <br />\n                </DialogContent>\n                  <DialogActions>\n\n                      <Button\n                       color=\"inherit\"\n                       onClick={closeModal}>\n                          Cancelar\n                       </Button>\n\n                       {activeStep > 0 ? (\n                           <Button\n                             disabled={isSubmitting}\n                             variant=\"outlined\"\n                             onClick={handleBack}\n                           >\n                             Atrás\n                           </Button>\n                       ) : null}\n\n\n\n                   <Button\n                     startIcon={isSubmitting ? <CircularProgress size=\"1rem\" /> : null}\n                     disabled={isSubmitting}\n                     variant=\"contained\"\n                     color=\"primary\"\n                     type=\"submit\"\n                   >\n                     {isSubmitting ? 'Enviando' : isLastStep() ? 'Enviar' : 'Siguiente'}\n                   </Button>\n\n\n                </DialogActions>\n                {serverState && (\n                  <p className={!serverState.ok ? \"errorMsg\" : \"\"}>\n                    {serverState.msg}\n                  </p>\n                )}\n              </Form>\n            )}\n          </Formik>\n\n          </Dialog>\n    );\n}\n\nconst SoleraForm = ({budgetId, openModal, closeModal, setData}) => {\n\n  const getSteps = () => ([\n    { label:'Especificaciones de Solera',\n      schema: transMeterSchema,\n      form: TransMeterForm},\n    { label:'Agregar Costos de Concreto',\n      schema: concretoSchema,\n      form: ConcretoForm},\n    { label:'Agregar Costos de Armazón',\n      schema: frameBiIronSchema,\n      form:  FrameBiIronForm}\n  ])\n\n  const {length, width, height, recubrimiento, cantLongsElems, separacion,\n    longHook} = initials\n\n  const initialValues = {\n    name: `SOLERA `,\n    length, width, height, recubrimiento, cantLongsElems, separacion, longHook,\n    ...concretoInitials, ...frameBiIronInitials\n  }\n\n  return (\n    <CreateForm getSteps={getSteps} budgetId={budgetId} apiId=\"soleras\" initialValues={initialValues}\n                setData={setData}\n                openModal={openModal} closeModal={closeModal}/>\n  )\n}\n\nconst CimientoForm = ({budgetId, openModal, closeModal, setData}) => {\n\n  const getSteps = () => ([\n    { label:'Especificaciones de Cimiento',\n      schema: transMeterSchema,\n      form: TransMeterForm},\n    { label:'Agregar Costos de Concreto',\n      schema: concretoSchema,\n      form: ConcretoForm},\n    { label:'Agregar Costos de Armazón',\n      schema: frameBiIronSchema,\n      form:  FrameBiIronForm}\n  ])\n\n  const {length, width, height, recubrimiento, cantLongsElems, separacion,\n    longHook} = initials\n\n  const initialValues = {\n    name: `CIMIENTO CORRIDO `,\n    length, width, height, recubrimiento, cantLongsElems, separacion, longHook,\n    ...concretoInitials, ...frameBiIronInitials\n  }\n\n  return (\n    <CreateForm getSteps={getSteps} budgetId={budgetId} apiId=\"cimcorridos\" initialValues={initialValues}\n                setData={setData}\n                openModal={openModal} closeModal={closeModal}/>\n  )\n}\n\nconst ColumnaForm = ({budgetId, openModal, closeModal, setData}) => {\n  const classes = useStyles()\n  const getSteps = () => ([\n    { label:'Especificaciones de Columna',\n      schema: transQuantitySchema,\n      form: ({values, setFieldValue, errors, touched}) => (\n        <Grid container alignItems=\"center\">\n          <Grid item xs={12} xs={3}>\n             <HelpImg image={columnImg}/>\n          </Grid>\n          <Grid item xs={12} xs={9}>\n          <TransQuantityForm values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n          </Grid>\n        </Grid>\n      )},\n    { label:'Agregar Costos de Concreto',\n      schema: concretoSchema,\n      form: ConcretoForm},\n    { label:'Agregar Costos de Armazón',\n      schema: frameBiIronSchema,\n      form:  FrameBiIronForm}\n  ])\n\n  const {amount, length, width, height, recubrimiento,\n    cantLongsElems,\n    separacion, longPata, longHook} = initials\n\n  const initialValues = {\n    name: `COLUMNA `, amount, length, width, height,\n    recubrimiento, cantLongsElems, separacion, longHook, longPata,\n    ...concretoInitials, ...frameBiIronInitials\n  }\n\n  return (<CreateForm getSteps={getSteps} budgetId={budgetId} apiId=\"columnas\" initialValues={initialValues}\n                    setData={setData}\n                    openModal={openModal} closeModal={closeModal}\n                    maxWidth='lg'/>)\n}\n\nconst ZapataForm = ({budgetId, openModal, closeModal, setData}) => {\n\n  const getSteps = () => ([\n    { label:'Especificaciones de Zapata',\n      schema: zapataSchema,\n      form: ZapataFormGroup},\n    { label:'Agregar Costos de Concreto',\n      schema: concretoSchema,\n      form: ConcretoForm},\n    { label:'Agregar Costos de Armazón',\n      schema: frameIronSchema,\n      form: FrameIronForm}\n  ])\n\n  const {amount, length, width, height, recubrimiento,\n    cantLongsElems,  cantTransElems,\n    separacion, longPata, longHook} = initials\n\n  const initialValues = {\n    name: 'ZAPATA ', amount, length, width, height,\n    recubrimiento, cantLongsElems, cantTransElems,\n    ...concretoInitials, ...frameIronInitials\n  }\n\n  return(\n    <CreateForm getSteps={getSteps} budgetId={budgetId} apiId=\"zapatas\"\n    initialValues={initialValues} setData={setData}\n    openModal={openModal} closeModal={closeModal}/>\n  )\n\n}\n\nconst LosaPlanaForm = ({budgetId, openModal, closeModal, setData}) => {\n\n  const getSteps = () => ([\n    { label:'Especificaciones de Losa Plana',\n      schema: losaPlanaSchema,\n      form: LosaPlanaSpecsForm},\n    { label:'Agregar Costos de Concreto',\n      schema: concretoSchema,\n      form: ConcretoForm},\n    { label:'Agregar Costos de Armazón',\n      schema: frameIronSchema,\n      form: FrameIronForm}\n  ])\n  const {name: nameInitial, area, height, separacion, propTension} = initials\n\n  const initialValues = {\n      nameInitial, area, height, separacion, propTension,\n    ...concretoInitials, ...frameIronInitials\n  }\n  return (\n    <CreateForm getSteps={getSteps} budgetId={budgetId} apiId=\"losasplanas\"\n    initialValues={initialValues} setData={setData}\n    openModal={openModal} closeModal={closeModal}/>\n  )\n\n}\n\nconst LosaInclinadaForm = ({budgetId, openModal, closeModal, setData}) => {\n\n  const getSteps = () => ([\n    { label:'Especificaciones de Losa Inclinada',\n      schema: losaInclinadaSchema,\n      form: LosaInclinadaSpecsForm},\n    { label:'Agregar Costos de Concreto',\n      schema: concretoSchema,\n      form: ConcretoForm},\n    { label:'Agregar Costos de Armazón',\n      schema: frameIronSchema,\n      form: FrameIronForm}\n  ])\n  const {name: nameInitial, area, height, separacion} = initials\n\n  const initialValues = {\n      nameInitial, area, height, separacion,\n    ...concretoInitials, ...frameIronInitials\n  }\n\n  return (\n    <CreateForm getSteps={getSteps} budgetId={budgetId} apiId=\"losas\"\n    initialValues={initialValues} setData={setData}\n    openModal={openModal} closeModal={closeModal}/>\n  )\n}\n\nconst RepelloCernidoForm = ({budgetId, openModal, closeModal, setData}) => {\n  const costSchema = {\n        mixProp,\n        cement, cementPrice, cementWastePct,\n        sand, sandPrice, sandWastePct,\n        preMix, preMixPrice, preMixWastePct,\n   }\n  //concretoSchema + recubrimiento\n\n  const CostFormGroup = ({values, setFieldValue, errors, touched}) => (\n    <Fragment>\n      <MorteroForm values={values} setFieldValue={setFieldValue}\n      errors={errors} touched={touched}/>\n      <PreMixCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n    </Fragment>\n  )\n  const getSteps = () => ([\n    { label:'Especificaciones de Repellos y Cernido',\n      schema: areaVolSchema,\n      form: AreaVolForm},\n    { label:'Agregar Costos de Materiales',\n      schema: costSchema,\n      form: CostFormGroup}\n  ])\n  const {area, height} = initials\n\n  const initialValues ={ name: 'REPELLO Y CERNIDO ', area, height, ...concretoInitials,\n        preMixWastePct: 0}\n  return(\n    <CreateForm getSteps={getSteps} budgetId={budgetId} apiId=\"repellos\"\n    initialValues={initialValues} setData={setData}\n    openModal={openModal} closeModal={closeModal}/>\n  )\n}\n\nconst MuroForm =({budgetId, openModal, closeModal, setData}) => {\n\n  const getSteps = () => ([\n    { label:'Especificaciones de Muro',\n      schema: muroSchema,\n      form: MuroSpecsForm},\n    { label:'Agregar costos de Mortero Pega',\n      schema: morteroSchema,\n      form: MorteroForm}\n  ])\n\n  const {area} = initials\n\n  const initialValues = {name: 'LEVANTAMIENTO DE MURO ', ...morteroInitials, area, blockWastePct: 0}\n  return(<CreateForm getSteps={getSteps} initialValues={initialValues} apiId=\"muros\"\n    budgetId={budgetId} openModal={openModal} closeModal={closeModal} setData={setData}/>)\n}\n\nconst MezclonConcretoForm =({budgetId, openModal, closeModal, setData}) => {\n\n\n  const getSteps = () => ([\n    { label:'Especificaciones de Mezclón de Concreto',\n      schema: areaVolSchema,\n      form: AreaVolForm},\n    { label:'Agregar costos de Concreto',\n      schema: concretoSchema,\n      form: ConcretoForm}\n  ])\n\n  const {name: nameInitial, area, height} = initials\n  const initialValues = {nameInitial, area, height, ...morteroInitials}\n\n  return(<CreateForm getSteps={getSteps} initialValues={initialValues} apiId=\"concmezclones\"\n    budgetId={budgetId} openModal={openModal} closeModal={closeModal} setData={setData}/>)\n}\n\nconst MezclonMorteroForm =({budgetId, openModal, closeModal, setData}) => {\n\n  const getSteps = () => ([\n    { label:'Especificaciones de Mezclón de Mortero',\n      schema: areaVolSchema,\n      form: AreaVolForm},\n    { label:'Agregar costos de Mortero',\n      schema: morteroSchema,\n      form: MorteroForm}\n  ])\n\n  const {name: nameInitial, area, height} = initials\n  const initialValues = {nameInitial, area, height, ...morteroInitials}\n\n  return(<CreateForm getSteps={getSteps} initialValues={initialValues} apiId=\"mezclones\"\n    budgetId={budgetId} openModal={openModal} closeModal={closeModal} setData={setData}/>)\n}\n\nconst MezclonExtForm =({budgetId, openModal, closeModal, setData}) => {\n\n\n  const getSteps = () => ([\n    { label:'Especificaciones de Mezclón de Garage y Banquetas',\n      schema: areaVolSchema,\n      form: AreaVolForm},\n    { label:'Agregar costos de Materiales',\n      schema: {...concretoSchema, electromalla,\n                  electromallaPrice, electromallaWastePct},\n      form: ({values, setFieldValue, errors, touched}) => (\n            <Fragment>\n              <ConcretoForm values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n              <ElectromallaCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n            </Fragment>)}\n  ])\n\n  const {name: nameInitial, area, height} = initials\n  const initialValues = {nameInitial, area, height, ...morteroInitials}\n\n  return(<CreateForm getSteps={getSteps} initialValues={initialValues} apiId=\"extmezclones\"\n    budgetId={budgetId} openModal={openModal} closeModal={closeModal} setData={setData}/>)\n}\n\nconst ColumnaEspecialForm = ({budgetId, openModal, closeModal, setData}) => {\n  const classes = useStyles();\n\n  const specsSchema = {\n    name, profitPct, amount, length, width, height,\n    estribosDouble, recubrimiento, cantLongsElems, cantLongsAuxElems,\n    separacion, longHook, longPata\n  }\n\n\n  const SpecsForm = ({values, setFieldValue, errors, touched}) => (\n    <Grid container alignItems=\"center\">\n        <Grid container xs={12} sm={3}>\n           <HelpImg image={columnImg}/>\n        </Grid>\n        <Grid container spacing={3} xs={12} sm={9}>\n             <Grid item xs={12} sm={8}>\n                <NameField value={values.name} setFieldValue={setFieldValue}\n                errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={12} sm={2}>\n                <QuantityField name=\"amount\" label=\"Cantidad\" value={values.amount}\n                setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={12} sm={2}>\n               <PercentageField name=\"profitPct\" label=\"Pct. Utilidad\" value={values.profitPct}\n                setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n             </Grid>\n             <Grid item xs={12}>\n                <VolumeFields lengthLabel='Altura' heightLabel='Largo'/>\n             </Grid>\n            <Grid item xs={12} sm={6}>\n              <QuantityField name=\"cantLongsElems\" label=\"Cantidad Elementos Esquinas\"\n              value={values.cantLongsElems} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <QuantityField name=\"cantLongsAuxElems\" label=\"Cantidad Elementos Auxiliares\"\n              value={values.cantLongsAuxElems} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n            </Grid>\n             <Grid item xs={12} sm={6}>\n               <LinearMeterField name=\"longPata\" label=\"Largo Patas\"\n               value={values.longPata} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={12} sm={6}>\n               <LinearMeterField name=\"longHook\" label=\"Largo Gancho\"\n                 value={values.longHook} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={12} sm={6}>\n               <LinearMeterField name=\"separacion\" label=\"Separacion Estribos\"\n               value={values.separacion} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={12} sm={6}>\n               <LinearMeterField name=\"recubrimiento\" label=\"Recubrimiento\" value={values.recubrimiento}\n               setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid xs={12}\n                container\n                direction=\"row-reverse\"\n                justify=\"flex-start\"\n                alignItems=\"center\"\n              >\n               <Grid item alignItems=\"flex-end\" className={classes.soloInput} xs={6} sm={3}>\n                 <BooleanField name=\"estribosDouble\" label=\"Estribos dobles\" />\n               </Grid>\n             </Grid>\n          </Grid>\n        </Grid>\n   )\n\n  // const armazonSchema =\n  // const ArmazonForm\n\n  const getSteps = () => ([\n    { label:'Especificaciones de Columna Especial',\n      schema: specsSchema,\n      form: SpecsForm},\n    { label:'Agregar Costos de Concreto',\n      schema: concretoSchema,\n      form: ConcretoForm},\n    { label:'Agregar Costos de Armazón',\n      schema: frameTriIronSchema,\n      form:  FrameTriIronForm}\n  ])\n\n  // const initialValues = {name: 'COLUMNA'}\n\n\n\n    const frameInitials = {}\n\n    const initialValues = {\n      name: `COLUMNA `, amount: '', length: '', width: '', height: '',\n      recubrimiento: '', cantLongsElems: '', cantLongsAuxElems: '',  estribosDouble: false,\n      separacion: '', longHook: '', longPata: '',\n      ...concretoInitials, ...frameTriIronInitials\n    }\n\n  return(\n          <CreateForm getSteps={getSteps} initialValues={initialValues} apiId=\"columnasespeciales\"\n          budgetId={budgetId} openModal={openModal} closeModal={closeModal} setData={setData} maxWidth='lg'/>\n        )\n}\n\nconst PinturaForm =({budgetId, openModal, closeModal, setData}) => {\n\n  const getSteps = () => ([\n    { label:'Pintura Exterior y Exterior',\n      schema: { name, profitPct, wallArea, ceilArea,\n                wallPaint, wallPaintPrice, wallPaintWastePct,\n                ceilPaint, ceilPaintPrice, ceilPaintWastePct,\n              },\n      form: ({values, setFieldValue, errors, touched}) => (\n        <Grid container spacing={3}>\n             <Grid item xs={12} sm={9}>\n                <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={12} sm={3}>\n               <PercentageField name=\"profitPct\" label=\"Pct. de Utilidad\" value={values.profitPct}\n                setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n             </Grid>\n             <Grid item xs={12} sm={6}>\n               <SquareMeterField name=\"wallArea\" label=\"Area de Pared\" value={values.wallArea} helperText='Area de paredes interiores/exteriores'\n               setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={12} sm={6}>\n               <SquareMeterField name=\"ceilArea\" label=\"Area de Cielo\" value={values.ceilArea} helperText='Area de superficies de cielo (Opcional)'\n               setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={12}>\n                <WallPaintCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n             <Grid item xs={12}>\n                <CeilPaintCost values={values} setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n             </Grid>\n\n         </Grid>)},\n  ])\n\n  const initialValues = {name: 'PINTURA INTERIOR/EXTERIOR', wallArea: '', ceilArea: ''}\n\n  return(<CreateForm getSteps={getSteps} initialValues={initialValues} apiId=\"pinturas\"\n    budgetId={budgetId} openModal={openModal} closeModal={closeModal} setData={setData}/>)\n}\n\n\nconst RowForm = ({budgetId, openModal, closeModal, setData}) => {\n\n  const FormFields = ({values, setFieldValue, errors, touched, url}) => {\n\n    const [units, setUnits] = useState([])\n    useEffect(() => {\n      api.get('units')\n      .then(response => {\n        setUnits(response.data)\n      })\n      .catch(err => {\n      })\n    }, [])\n    const useStyles = makeStyles({\n        denseItem:{\n        paddingTop: 0,\n        paddingBottom: 0,\n      },\n    });\n\n    const classes = useStyles()\n    return(\n    <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <NameField value={values.name} setFieldValue={setFieldValue} errors={errors} touched={touched} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n             <QuantityField name=\"unitAmount\" label=\"Cantidad\" value={values.unitAmount}\n             setFieldValue={setFieldValue} errors={errors} touched={touched}/>\n          </Grid>\n          <Grid item xs={12} sm={5}>\n              <FormControl>\n                <InputLabel htmlFor=\"unit\">{`Unidad de Medida`}</InputLabel>\n                <Field\n                  component={Select}\n                  disabled={units.length === 0}\n                  name='unit'\n                  onChange = {(evt, child) => setFieldValue('unit', evt.target.value)}\n                  defaultValue= {values.unit ? values.unit : null }\n                  displayEmpty\n                  renderValue={value => value ? <MenuItem dense className={classes.denseItem} value={value}>{`${value.name}`}</MenuItem> : ''}\n                  inputProps={{\n                    id: 'mix-prop',\n\n                  }}\n                >\n                  {units.map(unit => <MenuItem dense value={unit}>{unit.name}</MenuItem>)}\n                </Field>\n                {errors[\"unit\"] && touched[\"unit\"] ? (\n                  <div><Typography color='error' variant='caption'>{errors[\"unit\"]}</Typography></div>\n                ) : null}\n\n              </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={3}>\n            <PercentageField name=\"profitPct\" label=\"Pct. de Utilidad\" value={values.profitPct}\n             setFieldValue={setFieldValue} errors={errors} touched={touched} optional={true}/>\n          </Grid>\n        </Grid>\n  )}\n\n  const getSteps = () => [\n    {\n      label: 'Crear Renglon',\n      schema: {name, unitAmount, unit, profitPct},\n      form: FormFields\n    }\n  ]\n\n  return (\n        <CreateForm getSteps={getSteps} initialValues={{name: '', unit: '', unitAmount: '', profitPct: ''}} apiId='rows'\n        budgetId={budgetId} openModal={openModal} closeModal={closeModal} setData={setData}/>\n  )\n}\n\nexport {SoleraForm, CimientoForm, ColumnaForm, ColumnaEspecialForm, ZapataForm,\n        LosaPlanaForm, LosaInclinadaForm,\n        RepelloCernidoForm, MuroForm,\n        MezclonConcretoForm, MezclonMorteroForm, MezclonExtForm,\n        PinturaForm,\n        RowForm}\n","import React, {forwardRef, createRef, useState, useEffect, useMemo, useCallback, useRef, Fragment} from 'react';\nimport api from '../../api'\nimport XLSX from 'sheetjs-style'\nimport {summaryWS, materialsWS, budgetWS} from '../../report'\nimport localization from './localization'\nimport MaterialTable, {MTableToolbar} from 'material-table';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport updateForms from '../rows_forms/info/forms_map'\n\nimport DetailTb from './DetailsTb'\n\nimport {Paper, Fab, List, ListItem, ListItemText, Typography, Divider, Grid,\n        Avatar, ListItemAvatar, IconButton, FormControl, Select, MenuItem, Button} from '@material-ui/core';\n\nimport {Add, ArrowDownward, Check, ChevronLeft, ChevronRight, Clear,\n        DeleteOutline, Edit, FilterList, FirstPage, LastPage, Remove, SaveAlt,\n        Search, ViewColumn, Refresh} from '@material-ui/icons'\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\n\nimport CostTb from './CostTb'\n// import MaterialsCostTb from './costs/MaterialsCostTb'\nimport InfoTooltip from '../../components/partials/InfoTooltip'\n\n\nimport MenuDial from './partials/MenuDial'\n\nimport ConfirmationDialog from '../partials/ConfirmationDialog'\nimport ExportDialog from '../partials/ExportDialog'\n\nimport {SoleraForm, ZapataForm, ColumnaForm, ColumnaEspecialForm,\n        CimientoForm, LosaPlanaForm, LosaInclinadaForm,\n        RepelloCernidoForm, MuroForm,\n        MezclonConcretoForm, MezclonMorteroForm, MezclonExtForm,\n        PinturaForm,\n        RowForm} from '../rows_forms/createForms'\n\nimport {toCurrency} from '../../functions'\nconst Calculate = () => {\n  const renderCount = useRef(1)\n  return <div>{renderCount.current++}</div>\n}\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <Fab color=\"secondary\" size=\"medium\"><Add {...props} ref={ref} /> </Fab>),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n    Refresh: forwardRef((props, ref) => <Refresh color=\"primary\"{...props} ref={ref} />),\n    AddLibrary:  forwardRef((props, ref) => <MenuDial {...props} ref={ref}/>)\n\n  };\n\n  const actions = [\n    { name: 'Zapata', form: ZapataForm },\n    { name: 'Cimiento Corrido', form: CimientoForm },\n    { name: 'Solera', form: SoleraForm },\n    { name: 'Columna', form: ColumnaForm },\n    { name: 'Columna Especial', form: ColumnaEspecialForm },\n    { name: 'Losa Plana', form: LosaPlanaForm },\n    { name: 'Losa Inclinada', form: LosaInclinadaForm },\n    { name: 'Muro', form: MuroForm },\n    { name: 'Mezclón Mortero', form: MezclonMorteroForm },\n    { name: 'Mezclón Concreto', form: MezclonConcretoForm },\n    { name: 'Mezclón Garage y Banquetas', form: MezclonExtForm },\n    { name: 'Repello y Cernido', form: RepelloCernidoForm },\n    { name: 'Pintura', form: PinturaForm },\n\n\n\n  ];\n\n\n  const useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n      minWidth: \"max-content\",\n      marginLeft: theme.spacing(2)\n\n    },\n    searchField: {\n      maxWidth: \"max-content\",\n    },\n    panel: {\n      paddingLeft: theme.spacing(11),\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(2)\n    },\n    tableTotal: {\n      maxWidth: 600,\n      marginLeft: 'auto',\n      // float: 'right',\n    },\n    denseItem:{\n      paddingTop: 0,\n      paddingBottom: 0,\n    },\n\n  }));\n\n\nconst rowForDelete = (row, idx) => {\n  const DetailTypo = ({showMsg}) => {\n    const classes = useStyles()\n    return (\n      <Typography\n        component=\"span\"\n        variant=\"body2\"\n        className={classes.inline}\n        color=\"textPrimary\"\n      >\n        {showMsg()}\n      </Typography>\n    )\n\n  }\n  return (\n  <ListItem>\n  <ListItemAvatar>\n    <Avatar>\n      {idx + 1}\n    </Avatar>\n  </ListItemAvatar>\n    <ListItemText primary={row.name} secondary={\n      <Grid container direction=\"row\"\n            justify=\"flex-start\"\n            spacing={1}\n            alignItems=\"center\">\n            <Grid item>\n              {' Cantidad: '}\n              <DetailTypo showMsg={() => row.unitAmount ? row.unitAmount : 0} />\n            </Grid>\n            <Divider orientation=\"vertical\" light flexItem variant='middle'/>\n            <Grid item>\n              {' Precio Unitario: '}\n              <DetailTypo showMsg={() => toCurrency(row.unitCost ? row.unitCost : 0)} />\n            </Grid>\n            <Divider orientation=\"vertical\" light flexItem variant='middle'/>\n            <Grid item>\n              {' Precio Total: '}\n               <DetailTypo showMsg={() => toCurrency(row.totalCost ? row.totalCost : 0)} />\n            </Grid>\n\n      </Grid>\n    }\n    />\n    <Divider />\n  </ListItem>\n)\n}\n\n\nconst EditableTb = ({refreshTotal, budgetId}) => {\n  const classes = useStyles()\n  const tableRef = createRef()\n  const [isLoading, setLoading] = useState(true)\n  const [units, setUnits] =  useState({});\n\n\n  const renderCount = useRef(1)\n\n  const url =`budgets/${budgetId}/rows`\n  const title='Renglones'\n  const label='renglon'\n  // units={units} columns={columns}\n\n  const columns =    [\n     { title: 'Id', field: 'id', hidden: true },\n     { width: '1%',  align: 'left', sorting: false, render: (rowData) =>  typeof rowData != 'undefined' && rowData.type &&\n              <InfoTooltip title={rowData.type.name} placement=\"bottom\">\n                <IconButton  size='small' aria-label=\"upload picture\" component=\"span\">\n                  <InfoIcon />\n                </IconButton>\n              </InfoTooltip>},\n     { title: 'Nombre', field: 'name', width: '40%', render: rowData => rowData.fullName},\n     { title: 'Cantidad', field: 'unitAmount', type: 'numeric', width: '15%', align: 'right'},\n     { title: 'Unidad', field: 'unit.id', lookup: units, width: '15%', align: 'right',\n       validate: rowData => ( typeof rowData.unit != 'undefined'),\n       editComponent: props => {\n            return (\n              <FormControl>\n              <Select\n                 value={props.value}\n                 displayEmpty\n                 disabled = {props.rowData.type != null}\n                 onChange={e => props.onChange(e.target.value)}\n               >\n                 {Object.entries(units).map(([key, value]) => (\n                   <MenuItem value={key}>\n                     {value}\n                   </MenuItem>\n                 ))}\n               </Select>\n              </FormControl>\n            )\n          }\n      },\n    { title: 'Utilidad', field:'profitPct', type: 'numeric', width: '1%', align:'right',\n      render:(rowData) => typeof rowData != 'undefined' && rowData.profitPct > 0 && `${rowData.profitPct} %`},\n     { title: 'Precio Unitario', field: 'unitCost', type: 'currency', editable: 'never', width: '15%', align: 'right',\n\n       currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2}},\n     { title: 'Precio Total', field: 'totalCost', type: 'currency', editable: 'never', width: '15%', align: 'right',\n       currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2}}\n\n   ]\n  const [data, setData] = useState([])\n\n  //update row when changes inside of it\n  const refreshRow = useCallback((url, rowData) => {\n    api.get(url).then(\n      (res) => {\n        const dataUpdate = [...data]\n        const index =rowData.tableData.id\n        const updatedRow = {...res.data, tableData: rowData.tableData}\n        dataUpdate[index] = updatedRow\n\n        setData([...dataUpdate])\n        refreshTotal()\n        // setReload((prev) => !prev)\n      }).catch((err) => {})\n\n\n  }, [data])\n\n   // Crear renglon simple\n   const [openCreate, setOpenCreate] = useState(false)\n\n   // rows editing\n   //edit handling for special rowS\n   const [openEdit, setOpenEdit] = useState(false);\n   const [updateDialog, setUpdateDialog] = React.useState({active: Fragment})\n\n   const handleOpenModal = useCallback((form, rowData) => {\n     setUpdateDialog({active: form, data: rowData})\n     setOpenEdit(true)\n   }, [])\n\n    const handleCloseModal = useCallback(() => {\n     setOpenEdit(false)\n   }, [])\n\n  //error handling\n  const [isError, setIsError] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n  const [refreshFlag, setRefreshFlag] = useState(false)\n\n  //confirmation dialog infomation\n  const [confirmOpen, setConfirmOpen] = useState(false)\n  const [confirmData, setConfirmData] = useState([])\n  const onConfirm = async (data) => {\n    await Promise.all(\n      data.map( async row => {\n            try {\n                return await api.delete(`${url}/${row.id}`)\n\n            } catch (err) {\n            }\n      })\n    )\n\n      let _data = [...data];\n      data.forEach(rd => {\n        _data = _data.filter(t => t.tableData.id !== rd.tableData.id);\n      });\n      setData(_data);\n\n      }\n  const handleClose = () => {\n      setConfirmOpen(false)\n  }\n\n  //export to excel information\n  const [exportOpen, setExportOpen] = useState(false)\n  const [reportData, setReportData] = useState([])\n  const onExport = async (data, fileName) => {\n    // A workbook is the name given to an Excel file\n     var wb = XLSX.utils.book_new() // make Workbook of Excel\n     // add Worksheet to Workbook\n     // Workbook contains one or more worksheets\n     XLSX.utils.book_append_sheet(wb, summaryWS(data), 'RESUMEN DE PRESUPUESTO')\n     XLSX.utils.book_append_sheet(wb, await materialsWS(data), 'LISTADO DE MATERIALES')\n     XLSX.utils.book_append_sheet(wb, await budgetWS(data), 'PRESUPUESTO DESGLOSADO')\n\n     // export Excel file\n     XLSX.writeFile(wb, `${fileName}.xlsx`) // name of the file is 'book.xlsx'\n  }\n  const handleReportCancel = () => setExportOpen(false)\n\n  useEffect(() => {\n    api.get('units/catal')\n    .then(response => {\n      setUnits(response.data)\n    })\n    .catch(err => {\n    })\n  }, [refreshFlag])\n\n  useEffect(() => {\n\n    // lookupEffects && lookupEffects.forEach(effect => effect())\n    setLoading(true)\n    api.get(url)\n    .then(response => {\n      setData(response.data)\n      setLoading(false)\n    })\n    .catch(err => {\n      setErrorMessages(['Cannot load user data'])\n      setIsError(true)\n    })\n\n  }, [refreshFlag])\n\n\n  const handleRowAdd = (newData, resolve) => {\n\n    //validation\n    let errorList = []\n    //if(dato indefinido then errorList.push())\n\n    if(errorList.length < 1){\n      api.post(url, newData)\n      .then(res => {\n        let dataToAdd = [...data]\n        dataToAdd.unshift(res.data)\n        setData(dataToAdd)\n        resolve()\n        setErrorMessages([])\n        setIsError(false)\n      })\n      .catch(err => {\n        setErrorMessages([\"Cannot add data. Server error!\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    let errorList = []\n    if(errorList.length < 1){\n      api.put(`${url}/${newData.id}`, newData)\n      .then(res => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = {...res.data, tableData: oldData.tableData}\n        setData([...dataUpdate])\n        resolve()\n        setIsError(false)\n        setErrorMessages([])\n      })\n      .catch(err => {\n        setErrorMessages([\"update failed! Server error\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    let errorList = []\n    api.delete(`${url}/${oldData.id}`)\n    .then(res => {\n      const dataDelete = [...data]\n      const index = oldData.tableData.id\n\n      dataDelete.splice(index, 1)\n\n      setData([...dataDelete])\n      refreshTotal()\n\n      resolve('terminado')\n    })\n    .catch(err => {\n      setErrorMessages([\"Delete failed! Server error\"])\n      setIsError(true)\n      resolve()\n    })\n  }\n\n\n  const handleDeleteRows = async oldData => {\n\n    return new Promise((resolve) => {\n      handleRowDelete(oldData, resolve)\n    })\n    // try {\n    //     const dataDelete = [...data]\n    //     const index = oldData.tableData.id\n    //     dataDelete.splice(index, 1)\n    //     const res = await api.delete(`${url}/${oldData.id}`)\n    //     await setData([...dataDelete])\n    //   return await res.data\n    // } catch (err) {\n    //   console.log(err);\n    // }\n\n  }\n\n  return (\n    <Fragment>\n    <MaterialTable\n      tableRef={tableRef}\n      icons={tableIcons}\n      title={title}\n      columns={columns}\n      data={data}\n      isLoading={isLoading}\n      editable={{\n        isEditHidden: rowData => true,\n        isEditable: rowData => !rowData.restricted, // only name(a) rows would be editable\n        isDeletable: rowData => !rowData.restricted, // only name(b) rows would be deletable,\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve)\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve)\n          }),\n      }}\n      detailPanel={[\n        props => ({\n          render: (rowData) => {\n\n\n            return(\n              <div className={classes.panel}>\n                <CostTb rowData={rowData} refreshRow={refreshRow}/>\n              </div>\n            )\n          },\n\n        }),\n\n      ]}\n      options={{\n       actionsColumnIndex: -1,\n       addRowPosition: 'first',\n       paging: false,\n       // filtering: true,\n       // searchFieldAlignment: 'left',\n       selection: true,\n       sorting: true,\n       pageSize: 10,\n       pageSizeOptions: [10],\n       paginationType: 'normal',\n       padding: 'dense',\n       headerStyle: {\n         paddingTop: 0,\n         paddingBottom: 0,\n         fontSize: '0.75rem',\n         color: grey[800],\n         backgroundColor: grey[100],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n       },\n       rowStyle: {\n         // backgroundColor: '#EDF4F5',\n         // backgroundColor: '',\n         // borderBottom: 'solid 2px #e0f2f1',\n         // borderTop: 'solid 2px #e0f2f1',\n\n       },\n       cellStyle: {\n         paddingTop: 12,\n         paddingBottom: 12\n       },\n\n\n     }}\n\n     actions={[\n       {\n          icon: tableIcons.Edit,\n          tooltip: 'Editar',\n          onClick: (event, rowData) => {\n            if(rowData.type){\n              handleOpenModal(updateForms[rowData.type.id], rowData)\n\n\n              // handleOpenModal()\n            } else {\n                // tableRef.current.dataManager.changeRowEditing(rowData, 'update');\n                // tableRef.current.setState({\n                //   ...tableRef.current.dataManager.getRenderState(),\n                // });\n\n                  handleOpenModal(updateForms[0], rowData)\n\n                  // handleOpenModal()\n\n            }\n\n          },\n          position: 'row'\n        },\n\n\n       {\n         tooltip: 'Exportar a Excel',\n         icon: tableIcons.Export,\n         onClick: (evt, data) => {setReportData(data); setExportOpen(true);}\n        },\n\n         {\n          tooltip: 'Eliminar renglones seleccionados',\n          icon: tableIcons.Delete,\n          onClick: (evt, data) => {setConfirmData(data); setConfirmOpen(true);}\n\n        },\n\n\n       {\n         icon: tableIcons.Refresh,\n         tooltip: 'Actualizar',\n         isFreeAction: true,\n         onClick: () => {\n              setRefreshFlag((flag)=>!flag)\n            },\n       },\n       {\n         icon: () => <tableIcons.AddLibrary setData={setData} actions={actions} budgetId={budgetId}/>,\n         isFreeAction: true,\n         // iconProps: {style: {padding: 0}},\n       },\n\n       {\n         icon: () => <Fab  color=\"secondary\" size=\"medium\"><Add/> </Fab>,\n         tooltip: 'Nuevo renglón',\n         isFreeAction: true,\n         onClick: () => setOpenCreate(true)\n         // iconProps: {style: {padding: 0}},\n       }\n     ]}\n     components={{\n       Toolbar: props => (\n          <div style={{backgroundColor: '#e4e5eb'}}>\n            <MTableToolbar classes={{ actions: classes.actionsContainer, searchField: classes.searchField }} {...props}>\n            </MTableToolbar>\n          </div>\n        ),\n        Container: props => (\n          <Paper  elevation={0} {...props}>{props.children}</Paper>\n        ),\n\n        // Body: props => (\n        //   <div style={{width: '100%'}}><Paper><MTableBody {...props} /></Paper></div>\n        // ),\n\n     }}\n     localization={localization(label)}\n    />\n    <ConfirmationDialog\n          classes={{\n            paper: classes.paper,\n          }}\n          id=\"rows-to-delete\"\n          keepMounted\n          showTitle = {data => `¿Esta seguro de eliminar ${data.length > 1 ? `estos ${data.length} renglones?` : `este renglón ?`}`}\n          showRow ={rowForDelete}\n          open={confirmOpen}\n          onClose={handleClose}\n          data={confirmData}\n          onConfirm={onConfirm}\n      />\n      <ExportDialog\n            classes={{\n              paper: classes.paper,\n            }}\n            id=\"download-report\"\n            keepMounted\n            showTitle = {() => `EXPORTAR A EXCEL`}\n            open={exportOpen}\n            onClose={handleReportCancel}\n            data={reportData}\n            onConfirm={onExport}\n        />\n\n\n        <RowForm closeModal={() => setOpenCreate(false)} openModal={openCreate} setData={setData} budgetId={budgetId}/>\n        <updateDialog.active open={openEdit} closeModal={handleCloseModal} rowData={updateDialog.data} refreshRow={refreshRow}/>\n\n    </Fragment>\n  );\n}\n\nconst ChangeOpen = React.memo(({rowData}) => {\n    const count = useRef(1)\n\n      return(\n      <Fragment>\n        {`Prueba ${count.current++}`}\n          <Button>{rowData.totalCost}</Button>\n      </Fragment>)}, (prev, next) => prev.rowData.totalCost == next.rowData.totalCost)\n\n\nexport default React.memo(EditableTb)\n","import React, {useState, useEffect, createRef, useRef, useCallback, useMemo, Fragment} from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport api from '../api'\nimport isotipo from '../imgs/isotipo.png'\n\nimport {Button, Dialog, ListItemText, ListItem, List, Divider, AppBar, Toolbar,\n        IconButton, Typography, Slide, Grid, Paper, TextField, Container,\n        FormControl, Select, MenuItem, Box, Avatar} from '@material-ui/core'\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport ExpandLess from '@material-ui/icons/ExpandLessRounded';\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\n\nimport EditTable from '../components/tables/RowsTb'\nimport SpeedDial from '../components/tables/partials/SpeedDial'\nimport CostTb from '../components/tables/CostTb'\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    // position: 'fixed',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  listItem: {\n    minHeight: 72\n  },\n  panel: {\n    paddingLeft: theme.spacing(11),\n    marginTop: theme.spacing(0),\n    marginBottom: theme.spacing(2)\n  },\n  projectData: {\n    backgroundColor: '#fff',\n  },\n  backTb: {\n    backgroundColor: '#e4e5eb'\n  },\n\n  totalTitle: {\n    borderBottom: 'solid 2px #4a9b9f'\n  },\n  logo: {\n   width: theme.spacing(8),\n   height: theme.spacing(8),\n   marginRight: theme.spacing(2),\n },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nfunction HideOnScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\n\n\n\nexport default function FullScreenDialog(props) {\n\n  const classes = useStyles();\n  const [total, setTotal] = useState()\n  const [reload, setReload] = useState(false)\n\n  const [budget, setBudget] = useState({project: {client: {}}});\n  const [materials, setMaterials] = useState({})\n  const renderCount = useRef(1)\n\n\n  const refreshTotal = useCallback(() => setReload(prev => !prev), [])\n\n  useEffect(() => {\n    api.get(`budgets/${props.id}`)\n    .then(response => {\n      setBudget(response.data)\n      setTotal(response.data.totalCosts)\n    })\n    .catch(err => {\n\n    })\n  }, [props.open])\n\n\n\n  useEffect(() => {\n    api.get(`budgets/${props.id}`)\n    .then(response => {\n      setTotal(response.data.totalCosts)\n    })\n    .catch(err => {\n\n    })\n\n  }, [reload])\n\n\n\n  const checkPrimaryData = data => typeof data == undefined || data == null ? '               ' : data\n\n  return (\n    <div className={classes.backTb}>\n      <Dialog fullScreen open={props.open} onClose={props.handleClose} TransitionComponent={Transition} className={classes.backTb}\n      PaperProps={{classes: {root: classes.backTb}}}>\n      <HideOnScroll {...props}>\n\n        <AppBar position='fixed'>\n          <Toolbar >\n            <Avatar alt=\"Rolarq logo\" src={isotipo} className={classes.logo} variant='square' />\n\n            <Typography variant=\"h6\" className={classes.title}>\n              { `Presupuesto  ${budget.name}:     ${budget.project.name}`}\n            </Typography>\n            <Box mr={2}>\n            <Typography className={classes.totalTitle}variant=\"h6\" >{new Intl.NumberFormat('es-GT', { style: 'currency', currency: 'gtq' }).format(total ? total: 0)} </Typography>\n            </Box>\n            <IconButton edge=\"end\" color=\"inherit\" onClick={props.handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        </HideOnScroll>\n        <Box mb={8}/>\n        <Grid container className={classes.projectData}>\n        <Grid item xs={12} sm={6}>\n            <List dense disablePadding>\n              <ListItem className={classes.listItem}>\n                <ListItemText primaryTypographyProps={{variant: 'subtitle2'}} inset primary={checkPrimaryData(budget.project.address)} secondary=\"Ubicación\" />\n              </ListItem>\n              <Divider />\n              <ListItem className={classes.listItem}>\n                <ListItemText inset primaryTypographyProps={{variant: 'subtitle2'}} primary={ budget.project.client != null && checkPrimaryData(budget.project.client.fullName)} secondary=\"Cliente\" />\n              </ListItem>\n            </List>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n            <List dense disablePadding>\n              <ListItem className={classes.listItem}>\n                <ListItemText inset primaryTypographyProps={{variant: 'subtitle2'}} primary={new Date(checkPrimaryData(budget.createdAt)).toLocaleDateString('en-GB')} secondary=\"Fecha\" />\n              </ListItem>\n              <Divider />\n              <ListItem className={classes.listItem}>\n                <ListItemText inset primaryTypographyProps={{variant: 'subtitle2'}} primary={checkPrimaryData(budget.architect)} secondary=\"Arquitecto\" />\n              </ListItem>\n            </List>\n        </Grid>\n        </Grid>\n        <br/>\n        <Container maxWidth='xl' className={classes.backTb}>\n\n          <EditTable refreshTotal={refreshTotal}  budgetId={props.id}/>\n        </Container>\n\n\n      </Dialog>\n    </div>\n  );\n}\n","import React, {forwardRef, createRef, useState, useEffect, Fragment} from 'react';\nimport MaterialTable from 'material-table';\n\n\nimport api from '../../../api.js'\nimport localization from '../localization'\n\nimport grey from '@material-ui/core/colors/grey';\n\n\nimport {Button, Typography, IconButton, Tooltip} from '@material-ui/core'\nimport DescriptionIcon from '@material-ui/icons/OpenInBrowserSharp';\nimport BudgetCopyIcon from '@material-ui/icons/FileCopyOutlined';\n\n\nimport BudgetDetails from '../../../pages/BudgetDetails'\n\n\n\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterListRounded';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst AddPrice = (props, ref) => {\n  return(\n  <Button\n     variant=\"contained\"\n     color=\"primary\"\n     size=\"small\"\n     startIcon={<AddBox {...props} ref={ref}/>}\n   >\n     Presupuesto\n   </Button>\n )\n}\n\nconst tableIcons = {\n    Add: forwardRef(AddPrice),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n  };\n\n\nconst DetailTitle = title => <Typography variant='subtitle1'>{title}</Typography>\n\nexport default function EditableTb(props) {\n  const tableRef = createRef()\n  const [data, setData] = useState([])\n  const [open, setOpen] = useState(false);\n  const [idBudget, setIdBudget] = useState(null);\n\n  //initialFormData\n  const [initialFormData, setInitialFormData] = useState({architect: 'Fernando Roldan'})\n\n    const handleClickOpen = (id) => {\n      setIdBudget(id)\n      setOpen(true);\n    };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  //error handling\n  const [isError, setIsError] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n\n\n\n   const columns =    [\n      { title: 'Id', field: 'id', hidden: true,  },\n      { title: 'Nombre', field: 'name',\n        validate: rowData => ( typeof rowData.name != 'undefined'?\n                                   rowData.name.trim() === '' ?\n                                       { isValid: false, helperText: 'Nombre es requerido' } : true\n                                   : false)},\n      { title: 'Arquitecto', field: 'architect', initialEditValue: 'Fernando Roldan'},\n\n      { title: 'Fecha de creación', field: 'createdAt', type: 'date', editable: 'never', dateSetting: {locale: 'en-GB' }},\n      { title: 'Costo Total', field: 'totalCosts', type: 'currency', editable: 'never',\n        currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2}},\n      { width: '5%', sorting: false,  render: (rowData) =>  typeof rowData != 'undefined' &&\n               <Fragment>\n                 <Tooltip title=\"Presupuesto desglosado\" placement=\"bottom\">\n                   <IconButton onClick={(e) => {handleClickOpen(rowData.id)}} size='small' color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                     <DescriptionIcon />\n                   </IconButton>\n                 </Tooltip>\n\n               </Fragment>}\n      ]\n\n  useEffect(() => {\n\n\n    api.get(props.url)\n    .then(response => {\n      setData(response.data)\n    })\n    .catch(err => {\n      setErrorMessages(['Cannot load user data'])\n      setIsError(true)\n    })\n\n  }, [])\n\n\n  const handleRowAdd = (newData, resolve) => {\n\n    //validation\n    let errorList = []\n    //if(dato indefinido then errorList.push())\n\n    if(errorList.length < 1){\n      api.post(props.url, newData)\n      // console.log(url + newData)\n      .then(res => {\n        let dataToAdd = [...data]\n        dataToAdd.push(newData)\n        setData(dataToAdd)\n        resolve()\n        setErrorMessages([])\n        setIsError(false)\n        setInitialFormData({architect: 'Fernando Roldan'})\n\n      })\n      .catch(err => {\n        setErrorMessages([\"Cannot add data. Server error!\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    let errorList = []\n\n    if(errorList.length < 1){\n      api.put(`${props.url}/${newData.id}`, newData)\n      .then(res => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n        setIsError(false)\n        setErrorMessages([])\n      })\n      .catch(err => {\n        setErrorMessages([\"update failed! Server error\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    let errorList = []\n\n    api.delete(`${props.url}/${oldData.id}`)\n    .then(res => {\n      const dataDelete = [...data]\n      const index = oldData.tableData.id\n      dataDelete.splice(index, 1)\n      setData([...dataDelete])\n      resolve()\n    })\n    .catch(err => {\n      setErrorMessages([\"Delete failed! Server error\"])\n      setIsError(true)\n      resolve()\n    })\n  }\n  return (\n    <Fragment>\n    <BudgetDetails open={open} handleClose={handleClose} id={idBudget}/>\n    <MaterialTable\n      tableRef={tableRef}\n      icons={tableIcons}\n      title={DetailTitle(props.title)}\n      columns={columns}\n      data={data}\n      initialFormData={initialFormData}\n\n      editable={{\n        isEditable: rowData => !rowData.restricted, // only name(a) rows would be editable\n        isDeletable: rowData => !rowData.restricted, // only name(b) rows would be deletable,\n\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            handleRowAdd(newData, resolve)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve)\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve)\n          }),\n      }}\n      options={{\n       actionsColumnIndex: -1,\n       addRowPosition: 'first',\n       search: false,\n       paging: false,\n       pageSize: 5,\n       pageSizeOptions: [5],\n       padding: 'dense',\n       headerStyle: {\n         paddingTop: 0,\n         paddingBottom: 0,\n         fontSize: '0.75rem',\n         color: grey[800],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n       },\n       cellStyle: {\n         paddingTop: 8,\n         paddingBottom: 8,\n       },\n       // tableLayout: 'fixed',\n\n\n\n     }}\n\n\n          actions={[\n              {\n              icon: BudgetCopyIcon,\n              tooltip: 'Duplicar',\n              onClick: (event, rowData) => {\n                   setInitialFormData({\n                       ...rowData,\n                       name: `${rowData.name} copia`,\n\n\n                     });\n\n                 tableRef.current.dataManager.changeRowEditing();\n                   tableRef.current.setState({\n                     ...tableRef.current.dataManager.getRenderState(),\n                     showAddRow: true,\n                   });\n\n                //\n                // tableRef.current.dataManager.changeRowEditing(rowData, 'update');\n                // tableRef.current.setState({\n                //   ...tableRef.current.dataManager.getRenderState(),\n                // });\n              },\n              position: 'row'\n            },\n          ]}\n     components={{\n        Container: props => (\n          <div {...props}>{props.children}</div>\n        ),\n\n        // Body: props => (\n        //   <div style={{width: '100%'}}><Paper><MTableBody {...props} /></Paper></div>\n        // ),\n\n     }}\n     localization={localization(props.label)}\n    />\n    </Fragment>\n  );\n}\n","import React, {useState, useEffect} from \"react\"\nimport api from '../api'\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {Container, Box, Badge, IconButton, Tooltip} from '@material-ui/core'\nimport Table from '../components/tables/EditableTb'\nimport MailIcon from '@material-ui/icons/Mail';\nimport BudgetsIcon from '@material-ui/icons/AccountBalanceWalletRounded';\nimport ExpandLess from '@material-ui/icons/ExpandLessRounded';\nimport DetailsTb from '../components/tables/partials/ProjectBudgetsTb'\n\n\n  const useStyles = makeStyles((theme) => ({\n\n    panel: {\n      paddingLeft: theme.spacing(12.5),\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(4)\n    }\n\n  }));\nconst BudgetsBadge = withStyles((theme) => ({\n  badge: {\n    top: 5,\n    right: -2,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 4px',\n  },\n}))(Badge);\n\n\nconst Projects = props => {\n  const classes = useStyles();\n\n  const [clients, setClients] =  useState({});\n\n  const clientsEffect = () => {\n    api.get('clients/catal')\n    .then(response => {\n      setClients(response.data)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  const columns =    [\n     { title: 'Id', field: 'id', hidden: true },\n     { width: '5%', sorting: false, render: (rowData) => typeof rowData != 'undefined' && rowData.budgetsNumber > 0\n         && <BudgetsBadge color='primary'\n              children=\n                    <BudgetsIcon size='small' color=\"inherited\" style={{color: '#000'}}/>\n              badgeContent={rowData.budgetsNumber} max={9} />},\n     { title: 'Nombre', field: 'name',\n       validate: rowData => ( typeof rowData.name != 'undefined'?\n                                  rowData.name.trim() === '' ?\n                                      { isValid: false, helperText: 'Nombre es requerido' } : true\n                                  : false)},\n     { title: 'Ubicación', field: 'address'},\n     { title: 'Cliente', field: 'client.id', lookup: clients},\n     { title: 'Descripción', field: 'description', cellStyle: {fontSize: 10}}\n\n   ]\n\n   const budgetsIcon = (props) =>\n                       <BudgetsBadge color='primary'\n                            children=\n                                <IconButton size='small' color=\"inherited\" style={{color: '#000'}}\n                                 aria-label=\"upload picture\" component=\"span\">\n                                  <BudgetsIcon/>\n                                </IconButton>\n                            badgeContent={props.budgetsNumber} max={9} />\n\n   const panels = [\n       rowData => ({\n         openIcon: ExpandLess,\n         tooltip: 'Presupuestos',\n        render: rowData => {\n            return (\n              <div className={classes.panel}>\n                <DetailsTb url={`/projects/${rowData.id}/budgets`} parentId={rowData.id}\n                title='Presupuestos:' label=\"presupuesto\"\n                />\n              </div>\n            )\n          },\n       })\n    ]\n\n  return (\n    <div>\n    <Box m={5} />\n    <Container fixed maxWidth=\"lg\">\n    <Table columns={columns} url='projects' title='Proyectos' label='proyecto' lookupEffects={[clientsEffect]} panels={panels}/>\n    </Container>\n    </div>\n  )\n\n}\nexport default Projects\n","import React, {forwardRef, createRef, useState, useEffect} from 'react';\nimport api from '../../api'\nimport localization from './localization'\nimport MaterialTable, {MTableToolbar} from 'material-table';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\nimport {Paper, Fab} from '@material-ui/core'\nimport {Add, ArrowDownward, Check, ChevronLeft, ChevronRight, Clear,\n        DeleteOutline, Edit, FilterList, FirstPage, LastPage, Remove, SaveAlt,\n        Search, ViewColumn, Refresh} from '@material-ui/icons'\nimport BudgetCopyIcon from '@material-ui/icons/FileCopyOutlined';\n\nconst tableIcons = {\n    Add: () => (<Fab color=\"secondary\" size=\"medium\"><Add /> </Fab>),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n    Refresh: forwardRef((props, ref) => <Refresh color=\"primary\"{...props} ref={ref} />)\n  };\n\n\n  const useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n      minWidth: \"max-content\",\n      marginLeft: theme.spacing(2)\n\n    },\n    searchField: {\n      maxWidth: \"max-content\",\n    },\n  }));\n\nexport default function EditableTb({data, setData, url,\n                                    title, columns,\n                                    lookupEffects,\n                                    panels, label}) {\n  const classes = useStyles()\n  const tableRef = createRef()\n  const [isLoading, setLoading] = useState(true)\n\n  //error handling\n  const [isError, setIsError] = useState(false)\n  const [errorMessages, setErrorMessages] = useState([])\n  const [refreshFlag, setRefreshFlag] = useState(false)\n\n  //initialFormData\n  const [initialFormData, setInitialFormData] = useState({architect: 'Fernando Roldan'})\n\n  useEffect(() => {\n\n    lookupEffects && lookupEffects.forEach(effect => effect())\n    setLoading(true)\n    api.get(url)\n    .then(response => {\n      console.log('consola aqui' + response.data)\n      setData(response.data)\n      setLoading(false)\n    })\n    .catch(err => {\n      setErrorMessages(['Cannot load user data'])\n      setIsError(true)\n    })\n\n  }, [refreshFlag])\n\n\n  const handleRowAdd = (newData, resolve) => {\n\n    //validation\n    let errorList = []\n    //if(dato indefinido then errorList.push())\n\n    if(errorList.length < 1){\n      api.post(url, newData)\n      // console.log(url + newData)\n      .then(res => {\n        console.log('respuesta al guardar', res.data);\n\n        let dataToAdd = [...data]\n        dataToAdd.unshift(res.data)\n        setData(dataToAdd)\n        resolve()\n        setErrorMessages([])\n        setIsError(false)\n        setInitialFormData({name: '', architect: 'Fernando Roldan'})\n      })\n      .catch(err => {\n        setErrorMessages([\"Cannot add data. Server error!\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n\n  }\n\n  const handleRowUpdate = (newData, oldData, resolve) => {\n    console.log(oldData);\n    console.log(newData);\n\n    let errorList = []\n\n    if(errorList.length < 1){\n      api.put(`${url}/${newData.id}`, newData)\n      .then(res => {\n        const dataUpdate = [...data]\n        const index = oldData.tableData.id\n        dataUpdate[index] = newData\n        setData([...dataUpdate])\n        resolve()\n        setIsError(false)\n        setErrorMessages([])\n      })\n      .catch(err => {\n        setErrorMessages([\"update failed! Server error\"])\n        setIsError(true)\n        resolve()\n      })\n    } else {\n      setErrorMessages(errorList)\n      setIsError(true)\n      resolve()\n    }\n  }\n\n  const handleRowDelete = (oldData, resolve) => {\n    let errorList = []\n\n    api.delete(`${url}/${oldData.id}`)\n    .then(res => {\n      const dataDelete = [...data]\n      const index = oldData.tableData.id\n      dataDelete.splice(index, 1)\n      setData([...dataDelete])\n      resolve()\n    })\n    .catch(err => {\n      setErrorMessages([\"Delete failed! Server error\"])\n      setIsError(true)\n      resolve()\n    })\n  }\n  return (\n    <MaterialTable\n      tableRef={tableRef}\n      icons={tableIcons}\n      title={title}\n      columns={columns}\n      data={data}\n      isLoading={isLoading}\n      editable={{\n        isDeletable: rowData => !rowData.restricted, // only name(b) rows would be deletable,\n\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            handleRowAdd(newData, resolve)\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            handleRowUpdate(newData, oldData, resolve)\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            handleRowDelete(oldData, resolve)\n          }),\n      }}\n      detailPanel={panels}\n      options={{\n       actionsColumnIndex: -1,\n       addRowPosition: 'first',\n       // filtering: true,\n       // searchFieldAlignment: 'left',\n       // selection: true,\n       sorting: true,\n       pageSize: 10,\n       pageSizeOptions: [10],\n       paginationType: 'normal',\n       padding: 'dense',\n       headerStyle: {\n         paddingTop: 0,\n         paddingBottom: 0,\n         fontSize: '0.75rem',\n         color: grey[800],\n         backgroundColor: grey[100],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n       },\n       cellStyle: {\n         paddingTop: 12,\n         paddingBottom: 12\n       },\n\n\n     }}\n     initialFormData={initialFormData}\n\n     actions={[\n         {\n         icon: BudgetCopyIcon,\n         tooltip: 'Duplicar',\n         onClick: (event, rowData) => {\n              setInitialFormData({\n                  ...rowData,\n                  name: `${rowData.name} copia`,\n\n                });\n\n            tableRef.current.dataManager.changeRowEditing();\n              tableRef.current.setState({\n                ...tableRef.current.dataManager.getRenderState(),\n                showAddRow: true,\n              });\n\n           //\n           // tableRef.current.dataManager.changeRowEditing(rowData, 'update');\n           // tableRef.current.setState({\n           //   ...tableRef.current.dataManager.getRenderState(),\n           // });\n         },\n         position: 'row'\n       },\n       {\n         icon: tableIcons.Refresh,\n         tooltip: 'Actualizar',\n         isFreeAction: true,\n         onClick: () => {\n              setRefreshFlag((flag)=>!flag)\n            },\n       }\n     ]}\n     components={{\n       Toolbar: props => (\n          <div style={{backgroundColor: '#e4e5eb'}}>\n            <MTableToolbar classes={{ actions: classes.actionsContainer, searchField: classes.searchField }} {...props}>\n            </MTableToolbar>\n          </div>\n        ),\n        Container: props => (\n          <Paper  elevation={0} {...props}>{props.children}</Paper>\n        ),\n\n        // Body: props => (\n        //   <div style={{width: '100%'}}><Paper><MTableBody {...props} /></Paper></div>\n        // ),\n\n     }}\n     localization={localization(label)}\n    />\n  );\n}\n","import React, {useState, useEffect, Fragment} from \"react\"\nimport api from '../api'\nimport { withStyles } from '@material-ui/core/styles'\nimport {Container, Box, Badge, IconButton, Tooltip, TextField} from '@material-ui/core'\nimport Table from '../components/tables/BudgetsTb'\nimport MailIcon from '@material-ui/icons/Mail'\nimport BudgetsIcon from '@material-ui/icons/AccountBalanceWalletRounded'\n// import DescriptionIcon from '@material-ui/icons/Description'\nimport DescriptionIcon from '@material-ui/icons/OpenInBrowserSharp';\n\nimport BudgetDetails from './BudgetDetails'\n\n\n\nconst BudgetsBadge = withStyles((theme) => ({\n  badge: {\n    top: 10,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 4px',\n  },\n}))(Badge);\n\n\nconst Budgets = props => {\n  const [projects, setProjects] =  useState({});\n  const [open, setOpen] = useState(false);\n  const [idBudget, setIdBudget] = useState(null);\n  const [budgetData, setBudgetData] = useState({})\n\n  const [data, setData] = useState([])\n\n  const updateBudget = ()=>{\n      api.get(`budgets/${idBudget}`).then(\n      (res) => {\n        const dataUpdate = [...data]\n        const index =budgetData.tableData.id\n        const updatedRow = {...res.data, tableData: budgetData.tableData}\n        dataUpdate[index] = updatedRow\n        setData([...dataUpdate])\n      }).catch((err) => console.log(err))\n\n  }\n\n    const handleClickOpen = (rowData) => {\n      setIdBudget(rowData.id)\n      setBudgetData(rowData);\n      setOpen(true);\n    };\n\n  const handleClose = () => {\n    setOpen(false);\n    updateBudget();\n  };\n\n\n\n  const projectsEffect = () => {\n    api.get('projects/catal')\n    .then(response => {\n      setProjects(response.data)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n  const columns =    [\n     { title: 'Id', field: 'id', hidden: true,  },\n     { width:'25%',title: 'Nombre', field: 'name',\n       validate: rowData => ( typeof rowData.name != 'undefined'?\n                                  rowData.name.trim() === '' ?\n                                      { isValid: false, helperText: 'Nombre es requerido' } : true\n                                  : false) },\n     { width:'25%', title: 'Proyecto', field: 'project.id', lookup: projects, validate: rowData => ( typeof rowData.project != 'undefined')},\n     { width:'20%', title: 'Arquitecto', field: 'architect', initialEditValue: 'Fernando Roldan'},\n     { width:'10%', title: 'Fecha de creación', field: 'createdAt', type: 'date', editable: 'never', dateSetting: {locale: 'en-GB'} },\n     { width:'15%', title: 'Costo Total', field: 'totalCosts', type: 'currency', editable: 'never',\n       currencySetting:{ locale: 'es-GT', currencyCode:'gtq', minimumFractionDigits:2, maximumFractionDigits:2}},\n     { width: '5%', sorting: false,  render: (rowData) =>  typeof rowData != 'undefined' &&\n            <Fragment>\n              <Tooltip title=\"Abrir Presupuesto\" placement=\"bottom\">\n                <IconButton onClick={(e) => {handleClickOpen(rowData)}} edge='start' color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                  <DescriptionIcon />\n                </IconButton>\n              </Tooltip>\n\n            </Fragment>}\n   ]\n\n  return (\n    <Fragment>\n    <Box m={5} />\n    <BudgetDetails open={open} handleClose={handleClose} id={idBudget}/>\n    <Container fixed maxWidth=\"lg\">\n    <Table data={data} setData={setData}\n      columns={columns} url='budgets' title='Presupuestos' label='presupuesto' lookupEffects={[projectsEffect]} />\n    </Container>\n    </Fragment>\n  )\n\n}\nexport default Budgets\n","import React, {forwardRef, createRef, useState, useEffect} from 'react';\nimport api from '../../api'\nimport localization from './localization'\nimport MaterialTable, {MTableToolbar} from 'material-table';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\n\nimport {Paper, Fab} from '@material-ui/core'\nimport {Add, ArrowDownward, Check, ChevronLeft, ChevronRight, Clear,\n        DeleteOutline, Edit, FilterList, FirstPage, LastPage, Remove, SaveAlt,\n        Search, ViewColumn, Refresh} from '@material-ui/icons'\n\n\nconst tableIcons = {\n    Add: forwardRef((props, ref) => <Fab color=\"secondary\" size=\"medium\"><Add {...props} ref={ref} /> </Fab>),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n    Refresh: forwardRef((props, ref) => <Refresh color=\"primary\"{...props} ref={ref} />)\n  };\n\n\n  const useStyles = makeStyles((theme) => ({\n    actionsContainer: {\n      minWidth: \"max-content\",\n      marginLeft: theme.spacing(2)\n\n    },\n    searchField: {\n      maxWidth: \"max-content\",\n    },\n  }));\n\nconst ReadOnlyTb = (props) => {\n  const classes = useStyles()\n  const tableRef = createRef()\n  const [data, setData] = useState([])\n  const [isLoading, setLoading] = useState(true)\n\n  useEffect(() => {\n\n    setLoading(true)\n    api.get(`${props.url}`)\n    .then(response => {\n      console.log('consola aqui' + response.data)\n      setData(response.data)\n      setLoading(false)\n    })\n    .catch(err => {\n\n    })\n\n  }, [])\n  return(\n    <MaterialTable\n      tableRef={tableRef}\n      title= {props.title}\n      columns={props.columns}\n      data={data}\n      icons={tableIcons}\n      isLoading={isLoading}\n      options={{\n       sorting: true,\n       pageSize: 10,\n       pageSizeOptions: [10],\n       paginationType: 'normal',\n       padding: 'dense',\n       headerStyle: {\n         paddingTop: 0,\n         paddingBottom: 0,\n         fontSize: '0.75rem',\n         color: grey[800],\n         backgroundColor: grey[100],\n         borderTopLeftRadius: 2,\n         borderTopRightRadius: 2,\n       },\n       cellStyle: {\n         paddingTop: 12,\n         paddingBottom: 12\n       },\n\n\n     }}\n     components={{\n       Toolbar: props => (\n          <div style={{backgroundColor: '#e4e5eb'}}>\n            <MTableToolbar classes={{ actions: classes.actionsContainer, searchField: classes.searchField }} {...props}>\n            </MTableToolbar>\n          </div>\n        ),\n        Container: props => (\n          <Paper  elevation={0} {...props}>{props.children}</Paper>\n        ),\n\n        // Body: props => (\n        //   <div style={{width: '100%'}}><Paper><MTableBody {...props} /></Paper></div>\n        // ),\n\n     }}\n     localization={localization(props.label\n\n     )}\n\n   />\n  )\n}\n\nexport default ReadOnlyTb\n","import React, {forwardRef, createRef, useState, useEffect} from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport SwipeableViews from 'react-swipeable-views';\n\nimport PropTypes from 'prop-types';\nimport {Container, Box, Paper, AppBar, Tabs, Tab, Typography} from '@material-ui/core'\n\nimport Table from '../components/tables/ReadOnlyTb'\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n  },\n}));\n\n\nconst Proportions = props => {\n\n\n   const classes = useStyles();\n   const theme = useTheme();\n   const [value, setValue] = React.useState(0);\n\n   const handleChange = (event, newValue) => {\n     setValue(newValue);\n   };\n\n   const handleChangeIndex = (index) => {\n     setValue(index);\n   };\n\n    const morteroColumns =    [\n       { title: 'Id', field: 'id', hidden: true },\n       { title: 'Prop. Cemento', field: 'propCement'},\n       { title: 'Prop. Arena', field:'propSand'},\n       { title: 'Sacos Cemento', field: 'cement', type: 'numeric'},\n       { title: 'Arena \\u33A5', field: 'sand', type: 'numeric'},\n       { title: 'Resistencia \\u338F/\\u33A0', field: 'kgPerSqrCm', type: 'numeric'},\n\n\n     ]\n\n\n\n  const concretoColumns =    [\n     { title: 'Id', field: 'id', hidden: true },\n     { title: 'Prop. Cemento', field: 'propCement'},\n     { title: 'Prop. Arena', field:'propSand'},\n     { title: 'Prop. Piedrín', field: 'propGravel'},\n     { title: 'Sacos Cemento', field: 'cement', type: 'numeric'},\n     { title: 'Arena \\u33A5', field: 'sand', type: 'numeric'},\n     { title: 'Piedrín \\u33A5', field: 'gravel', type: 'numeric'},\n     { title: 'Resistencia \\u338F/\\u33A0', field: 'kgPerSqrCm', type: 'numeric'},\n\n\n   ]\n\n  return (\n    <div>\n    <Box m={2} />\n    <AppBar position=\"static\" color=\"default\">\n       <Tabs\n         value={value}\n         onChange={handleChange}\n         indicatorColor=\"primary\"\n         textColor=\"primary\"\n         variant=\"fullWidth\"\n         aria-label=\"full width tabs example\"\n       >\n         <Tab label=\"Mortero\" {...a11yProps(0)} />\n         <Tab label=\"Concreto\" {...a11yProps(1)} />\n       </Tabs>\n     </AppBar>\n     <SwipeableViews\n       axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n       index={value}\n       onChangeIndex={handleChangeIndex}\n     >\n       <TabPanel value={value} index={0} dir={theme.direction}>\n         <Container fixed maxWidth=\"lg\">\n           <Table columns={morteroColumns} url='morteros' title='Proporciones Volumetricas' label='mortero' />\n         </Container>\n       </TabPanel>\n       <TabPanel value={value} index={1} dir={theme.direction}>\n       <Container fixed maxWidth=\"lg\">\n         <Table columns={concretoColumns} url='concretos' title='Proporciones Volumetricas' label='concreto' />\n       </Container>\n       </TabPanel>\n     </SwipeableViews>\n\n\n\n    </div>\n  )\n\n}\nexport default Proportions\n","import BudgetsIcon from '@material-ui/icons/AccountBalanceWalletRounded'\nimport ProjectsIcon from '@material-ui/icons/HomeWorkRounded'\nimport ClientsIcon from '@material-ui/icons/SupervisedUserCircleRounded'\nimport SuppliersIcon from '@material-ui/icons/StoreRounded'\nimport MaterialsIcon from '@material-ui/icons/LocalMallRounded'\nimport UnitsIcon from '@material-ui/icons/StraightenRounded'\nimport PropsIcon from '@material-ui/icons/ViewListRounded';\n\nimport Clients from '../pages/Clients'\nimport Suppliers from '../pages/Suppliers'\nimport Units from '../pages/Units'\nimport Materials from '../pages/Materials'\nimport Projects from '../pages/Projects'\nimport Budgets from '../pages/Budgets'\nimport Props from '../pages/Props'\nimport HistoryIcon from '@material-ui/icons/HistoryRounded';\n\nconst items = [\n  [ {\n      name: 'history',\n      label: 'Recientes',\n      icon: HistoryIcon,\n      page: Budgets,\n    },\n    {\n      name: 'budgets',\n      label: 'Presupuestos',\n      icon: BudgetsIcon,\n      page: Budgets\n\n    },\n    {\n      name: 'projects',\n      label: 'Proyectos',\n      icon: ProjectsIcon,\n      page: Projects\n\n    },\n    {\n      name: 'clients',\n      label: 'Clientes',\n      icon: ClientsIcon,\n      page: Clients\n\n    },\n  ],\n  [\n    {\n      name: 'materials',\n      label: 'Materiales',\n      icon: MaterialsIcon,\n      page: Materials\n\n    },\n    {\n      name: 'units',\n      label: 'Unidades',\n      icon: UnitsIcon,\n      page: Units\n\n    },\n    {\n      name: 'suppliers',\n      label: 'Proveedores',\n      icon: SuppliersIcon,\n      page: Suppliers\n\n    },\n  ],\n  [\n    {\n      name: 'materials',\n      label: 'Proporciones',\n      icon: PropsIcon,\n      page: Props\n\n    },\n\n  ]\n\n]\n\nexport default items\n","import React from 'react';\nimport {Container} from '@material-ui/core'\nimport MaterialsTb from '../components/tables/MaterialsTb'\n\n\nexport default function FullWidthTabs() {\n\n\n\n  return (\n    <div>\n\n        <Container fixed maxWidth=\"lg\">\n          <MaterialsTb url='materials' title='Materiales' label='material' />\n        </Container>\n\n\n\n    </div>\n  );\n}\n","import React, {Fragment} from 'react'\nimport {Divider, List, ListItem, ListItemIcon, ListItemText} from '@material-ui/core'\nimport items from './menuData'\n\nfunction Menu(props) {\n  let val = 0\n  return(\n      <div>\n        {items.map((group) => {\n            return (\n              <Fragment key={++val}>\n                <Divider />\n                <List>\n                  {group.map((item, key) => {\n                      return(\n                      <ListItem button key={key} selected={props.active.name === item.name} onClick={() => props.setActive(item)}>\n                           <ListItemIcon>\n                              <item.icon />\n                           </ListItemIcon>\n                         <ListItemText primary={item.label} />\n                       </ListItem>\n                     )\n                    })\n                  }\n                </List>\n              </Fragment>\n            )\n          })}\n\n\n      </div>\n  )\n}\n\nexport default Menu;\n","\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({palette: {type: 'dark'}})\n\nexport default theme\n","import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport isotipo from '../imgs/isotipo.png'\nimport logotipo from '../imgs/logotipo.png'\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport {Box, Drawer, AppBar, Toolbar, CssBaseline, Typography, Avatar} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DrawerMenu from './Menu'\nimport Welcome from '../pages/Budgets'\n\nimport darkTheme from '../dark-theme'\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  logo: {\n   width: theme.spacing(8),\n   height: theme.spacing(8),\n   marginRight: theme.spacing(2),\n },\n brand: {\n   maxHeight: theme.spacing(5),\n   width: 'auto',\n   display: 'block',\n }\n}));\n\nfunction MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false)\n  const [active, setActive] = useState({page: Welcome})\n\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Avatar alt=\"Rolarq logo\" src={isotipo} className={classes.logo} variant='square' />\n          <img src={logotipo} className={classes.brand}/>\n\n        </Toolbar>\n      </AppBar>\n      <ThemeProvider theme={darkTheme}>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <DrawerMenu active={active} setActive={setActive}/>\n      </Drawer>\n      </ThemeProvider>\n\n\n      <main style={{backgroundColor: '#e4e5eb', minHeight: '100vh',padding: 0}}className={classes.content}>\n      <Box m={8} />\n\n      <div className={classes.appBarSpacer} />\n\n\n\n          <active.page />\n\n\n     </main>\n    </div>\n  );\n}\n\nexport default MiniDrawer\n","import React, {Component} from 'react'\nimport Dashboard from './components/Dashboard'\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles  = makeStyles({\n  helloThereStyle: {\n    fontStyle: 'oblique'\n  },\n  board: {\n    backgroundColor: '#fff'\n  }\n\n})\n\nfunction App() {\n  const classes = useStyles();\n\n  return(\n      <Dashboard />\n      )\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {ThemeProvider} from '@material-ui/core/styles'\nimport theme from './theme'\nimport App from './App'\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n    <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}